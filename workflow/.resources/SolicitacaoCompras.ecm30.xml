<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>SolicitacaoCompras</processId>
    </processDefinitionPK>
    <processDescription>Compras</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>false</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId>Compras</categoryId>
    <managerEngineAllocationId>Associado</managerEngineAllocationId>
    <managerEngineAllocationConfiguration>&lt;AssociatedController ConditionAssociated=&quot;OR&quot;&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;COORD_CD&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;COORD_II&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;Central_Atendimento&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;COORD_CM&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;COORD_CCCT&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;TISUPORTE&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;/AssociatedController&gt;</managerEngineAllocationConfiguration>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>0</complementsLevel>
    <notifyRequisitionerComplements>false</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <deadlineTime>0</deadlineTime>
    <warningDeadlineTime>0</warningDeadlineTime>
    <notifyAuthorityComplements>false</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>Compras</processId>
      <version>199</version>
    </processDefinitionVersionPK>
    <versionDescription></versionDescription>
    <formId>81129</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>false</inheritFormSecurity>
    <mobileReady>false</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>1</sequence>
      </processStatePK>
      <stateName>Inicio</stateName>
      <stateDescription>Inicio</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>true</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>234</positionX>
      <positionY>37</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>2</sequence>
      </processStatePK>
      <stateName>Gera Cotacao</stateName>
      <stateDescription>Gera Cotacao</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA2</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;14&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>452</positionX>
      <positionY>503</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>4</sequence>
      </processStatePK>
      <stateName>Cotacao</stateName>
      <stateDescription>Cotacao</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA4</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;2&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>680</positionX>
      <positionY>503</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>6</sequence>
      </processStatePK>
      <stateName>Definir Vencedor</stateName>
      <stateDescription>Definir Vencedor</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA6</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;4&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1010</positionX>
      <positionY>496</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>10</sequence>
      </processStatePK>
      <stateName>Enviar E-mail com Pedido de Compras</stateName>
      <stateDescription>Enviar E-mail com Pedido de Compras</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA10</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>280</positionX>
      <positionY>620</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>14</sequence>
      </processStatePK>
      <stateName>Analise Comprador</stateName>
      <stateDescription>Analise Comprador</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA14</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;grupoAnaliseComprador&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>285</positionX>
      <positionY>496</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>39</sequence>
      </processStatePK>
      <stateName>Preencher formulario (objeto reajuste recisao valor validade)</stateName>
      <stateDescription>Preencher formulario (objeto reajuste recisao valor validade)</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA39</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;grupoAnaliseComprador&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1256</positionX>
      <positionY>468</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>42</sequence>
      </processStatePK>
      <stateName>Anexar minuta</stateName>
      <stateDescription>Anexar minuta</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA42</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;CT&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>284</positionX>
      <positionY>1303</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>43</sequence>
      </processStatePK>
      <stateName>Validar minuta</stateName>
      <stateDescription>Validar minuta</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA43</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;JUR&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>416</positionX>
      <positionY>1170</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>45</sequence>
      </processStatePK>
      <stateName>Ajustar divergencia</stateName>
      <stateDescription>Ajustar divergencia</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA45</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;CT&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>657</positionX>
      <positionY>1290</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>49</sequence>
      </processStatePK>
      <stateName>Recolher assinatura e digitalizar contrato</stateName>
      <stateDescription>Recolher assinatura e digitalizar contrato</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA49</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;CT&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>800</positionX>
      <positionY>1392</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>50</sequence>
      </processStatePK>
      <stateName>Gerar Contrato (Protheus)</stateName>
      <stateDescription>Gerar Contrato (Protheus)</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA50</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;CT&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>960</positionX>
      <positionY>1406</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>133</sequence>
      </processStatePK>
      <stateName>Correcao da Solicitacao</stateName>
      <stateDescription>Correcao da Solicitacao</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA133</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;1&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>704</positionX>
      <positionY>19</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>149</sequence>
      </processStatePK>
      <stateName>Parecer do Solicitante</stateName>
      <stateDescription>Parecer do Solicitante</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA149</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;1&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>844</positionX>
      <positionY>754</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>164</sequence>
      </processStatePK>
      <stateName>Aprovação do Solicitante</stateName>
      <stateDescription>Aprovação do Solicitante</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA164</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;1&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>728</positionX>
      <positionY>1565</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>true</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>165</sequence>
      </processStatePK>
      <stateName>Solução da Inconsistência</stateName>
      <stateDescription>Solução da Inconsistência</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA165</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;INC_solDeCompra&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>728</positionX>
      <positionY>1673</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>true</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>182</sequence>
      </processStatePK>
      <stateName>Aprovar Produto TI</stateName>
      <stateDescription>Aprovar Produto TI</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA182</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GPTI&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>452</positionX>
      <positionY>324</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>203</sequence>
      </processStatePK>
      <stateName>Regularizadora</stateName>
      <stateDescription>Regularizadora</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA203</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;APROV_REG&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>452</positionX>
      <positionY>165</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>212</sequence>
      </processStatePK>
      <stateName>Emitir Pedido de Compras</stateName>
      <stateDescription>Emitir Pedido de Compras</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>680</positionX>
      <positionY>910</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>216</sequence>
      </processStatePK>
      <stateName>Falha na Emissão do Pedido de Compras</stateName>
      <stateDescription>Falha na Emissão do Pedido de Compras</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA216</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>680</positionX>
      <positionY>740</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>219</sequence>
      </processStatePK>
      <stateName>Anexar Pedidos de Compras</stateName>
      <stateDescription>Anexar Pedidos de Compras</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>540</positionX>
      <positionY>903</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>223</sequence>
      </processStatePK>
      <stateName>Falha ao Anexar Pedidos de Compras</stateName>
      <stateDescription>Falha ao Anexar Pedidos de Compras</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA232</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>540</positionX>
      <positionY>740</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>228</sequence>
      </processStatePK>
      <stateName>Inicia solicitação de itens desvinculados</stateName>
      <stateDescription>Inicia solicitação de itens desvinculados</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>280</positionX>
      <positionY>740</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>232</sequence>
      </processStatePK>
      <stateName>Falha Itens desvinculados</stateName>
      <stateDescription>Falha Itens desvinculados</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA232</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>280</positionX>
      <positionY>960</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>245</sequence>
      </processStatePK>
      <stateName>Validação de Cotação</stateName>
      <stateDescription>Validação de Cotação</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;1&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1010</positionX>
      <positionY>20</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>269</sequence>
      </processStatePK>
      <stateName>Aguarde...</stateName>
      <stateDescription>Aguarde...</stateDescription>
      <instruction>O Fluig vai rodar automaticamente esta atividade apos 1 minuto. Ela é usada para recuperar o id do requisitante e abrir a solicitação de desvinculados com este usuário.</instruction>
      <deadlineTime>60</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;idRequisitante&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>193</positionX>
      <positionY>873</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>137</sequence>
      </processStatePK>
      <stateName>Encaminhar para o Comprador</stateName>
      <stateDescription>Encaminhar para o Comprador</stateDescription>
      <instruction>Evento intermediário por sinal. Aguardando envio do sinal </instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>320</positionX>
      <positionY>37</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>37</bpmnType>
      <signalId>1</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>141</sequence>
      </processStatePK>
      <stateName>Termino Aprovacao</stateName>
      <stateDescription>Termino AprovaÃ§Ã£o</stateDescription>
      <instruction>Evento intermediário por sinal. Aguardando envio do sinal </instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>879</positionX>
      <positionY>1040</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>37</bpmnType>
      <signalId>3</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>215</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>756</positionX>
      <positionY>900</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>212</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>222</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>617</positionX>
      <positionY>903</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>219</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>231</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>320</positionX>
      <positionY>810</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>228</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>249</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>540</positionX>
      <positionY>644</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>251</sequence>
      </processStatePK>
      <stateName>Erro na emissão do Pedido de compras</stateName>
      <stateDescription>Erro na emissão do Pedido de compras</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>640</positionX>
      <positionY>644</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>253</sequence>
      </processStatePK>
      <stateName>Inicia solicitação de itens desvinculados</stateName>
      <stateDescription>Inicia solicitação de itens desvinculados</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>760</positionX>
      <positionY>644</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>255</sequence>
      </processStatePK>
      <stateName>Inicia solicitação de itens desvinculados</stateName>
      <stateDescription>Inicia solicitação de itens desvinculados</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>228</positionX>
      <positionY>1060</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>279</sequence>
      </processStatePK>
      <stateName>Aprovações conforme Alçadas 24-25</stateName>
      <stateDescription>Aprovações conforme Alçadas 24-25</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>0</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId>AprovaçãoUnificada</subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1010</positionX>
      <positionY>903</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>true</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>2</stateType>
      <bpmnType>100</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <cancelSubProcess>true</cancelSubProcess>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <sendToNextTaskInSubProcess>true</sendToNextTaskInSubProcess>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>38</sequence>
      </processStatePK>
      <stateName>E contrato ?</stateName>
      <stateDescription>E contrato ?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>1140</positionX>
      <positionY>473</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>44</sequence>
      </processStatePK>
      <stateName>Teve Divergencia no contrato ? </stateName>
      <stateDescription>Teve Divergencia no contrato ? </stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>680</positionX>
      <positionY>1383</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>86</sequence>
      </processStatePK>
      <stateName>E contrato ?</stateName>
      <stateDescription>E contrato ?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>703</positionX>
      <positionY>1000</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>117</sequence>
      </processStatePK>
      <stateName>Aprovacao</stateName>
      <stateDescription>Aprovacao</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>1279</positionX>
      <positionY>738</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>151</sequence>
      </processStatePK>
      <stateName>Validar Parecer do Solicitante</stateName>
      <stateDescription>Validar Parecer do Solicitante</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>1032</positionX>
      <positionY>730</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>166</sequence>
      </processStatePK>
      <stateName>Aprovado?</stateName>
      <stateDescription>Aprovado?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>944</positionX>
      <positionY>1613</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>180</sequence>
      </processStatePK>
      <stateName>Produto TI?</stateName>
      <stateDescription>Produto TI?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>308</positionX>
      <positionY>308</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>184</sequence>
      </processStatePK>
      <stateName>Aprovado TI?</stateName>
      <stateDescription>Aprovado TI?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>632</positionX>
      <positionY>308</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>191</sequence>
      </processStatePK>
      <stateName>Status</stateName>
      <stateDescription>Status</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>867</positionX>
      <positionY>901</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>204</sequence>
      </processStatePK>
      <stateName>Aprov?</stateName>
      <stateDescription>Aprov?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>632</positionX>
      <positionY>149</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>208</sequence>
      </processStatePK>
      <stateName>Regularizadora?</stateName>
      <stateDescription>Regularizadora?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>307</positionX>
      <positionY>142</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>235</sequence>
      </processStatePK>
      <stateName>Existe item desvinculado?</stateName>
      <stateDescription>Existe item desvinculado?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>420</positionX>
      <positionY>894</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>239</sequence>
      </processStatePK>
      <stateName>Alguma Justificativa Preenchida?</stateName>
      <stateDescription>Alguma Justificativa Preenchida?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>840</positionX>
      <positionY>473</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>196</sequence>
      </processStatePK>
      <stateName>Fim com cancelamento de processo</stateName>
      <stateDescription>Fim com cancelamento de processo</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1170</positionX>
      <positionY>771</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>65</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>284</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Esta atividade indica que o processo terminado e que não ocorrerá nenhum tipo de pós processamento.</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1076</positionX>
      <positionY>1646</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>68</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>38</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;rdContrato&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>39</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>38</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;rdContrato&quot;) != &quot;sim&quot;</condition>
      <destinationSequenceId>117</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>44</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;rdAprovadoContrato&quot;) == &quot;aprov&quot;</condition>
      <destinationSequenceId>49</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>44</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;rdAprovadoContrato&quot;) == &quot;naprov&quot;</condition>
      <destinationSequenceId>45</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>86</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;rdContrato&quot;) == &quot;nao&quot;</condition>
      <destinationSequenceId>212</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>86</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;rdContrato&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>42</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>117</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;contratoAprovado&quot;) == &quot;true&quot;</condition>
      <destinationSequenceId>42</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>117</sequence>
      </conditionProcessStatePK>
      <condition>true || false</condition>
      <destinationSequenceId>279</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>3</expressionOrder>
        <version>199</version>
        <sequence>117</sequence>
      </conditionProcessStatePK>
      <condition>proximaAlcada(true) == true</condition>
      <destinationSequenceId>279</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;aprovadorAtual&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>4</expressionOrder>
        <version>199</version>
        <sequence>117</sequence>
      </conditionProcessStatePK>
      <condition>proximaAlcada(true) == false</condition>
      <destinationSequenceId>141</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>151</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;motivoReprovacao&quot;) == &quot;valor&quot;</condition>
      <destinationSequenceId>196</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>151</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;motivoReprovacao&quot;) != &quot;valor&quot;</condition>
      <destinationSequenceId>279</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>166</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&apos;aceite&apos;) == &apos;S&apos;</condition>
      <destinationSequenceId>284</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>166</sequence>
      </conditionProcessStatePK>
      <condition>true</condition>
      <destinationSequenceId>165</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>180</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;isProdutoTI&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>182</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>180</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;isProdutoTI&quot;) == &quot;nao&quot;</condition>
      <destinationSequenceId>14</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>184</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovacaoTI&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>14</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>184</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovacaoTI&quot;) == &quot;nao&quot;</condition>
      <destinationSequenceId>133</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>191</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;seAprovado&quot;) == &quot;nao&quot;</condition>
      <destinationSequenceId>149</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>191</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;seAprovado&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>141</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>204</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoAprovRegularizadora&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>180</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>204</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoAprovRegularizadora&quot;) == &quot;nao&quot;</condition>
      <destinationSequenceId>133</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>208</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;isRegularizadora&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>203</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>208</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;isRegularizadora&quot;) != &quot;sim&quot;</condition>
      <destinationSequenceId>180</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>235</sequence>
      </conditionProcessStatePK>
      <condition>itensDesvinculados() == 1</condition>
      <destinationSequenceId>10</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>235</sequence>
      </conditionProcessStatePK>
      <condition>itensDesvinculados() == 2</condition>
      <destinationSequenceId>269</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;1&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>1</expressionOrder>
        <version>199</version>
        <sequence>239</sequence>
      </conditionProcessStatePK>
      <condition>regraFluxoJustificativa() == 0</condition>
      <destinationSequenceId>6</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <expressionOrder>2</expressionOrder>
        <version>199</version>
        <sequence>239</sequence>
      </conditionProcessStatePK>
      <condition>regraFluxoJustificativa() == 1</condition>
      <destinationSequenceId>245</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
  </list>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>5</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>2</initialStateSequence>
      <finalStateSequence>4</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>15</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>14</initialStateSequence>
      <finalStateSequence>2</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>40</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>38</initialStateSequence>
      <finalStateSequence>39</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>46</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>45</initialStateSequence>
      <finalStateSequence>43</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>47</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>43</initialStateSequence>
      <finalStateSequence>44</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>48</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>44</initialStateSequence>
      <finalStateSequence>45</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>51</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>44</initialStateSequence>
      <finalStateSequence>49</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>52</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>49</initialStateSequence>
      <finalStateSequence>50</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>59</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>42</initialStateSequence>
      <finalStateSequence>43</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>68</linkSequence>
      </processLinkPK>
      <actionLabel>1 - Ok Seguir com o Processo</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>6</initialStateSequence>
      <finalStateSequence>38</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>89</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>86</initialStateSequence>
      <finalStateSequence>42</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>119</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>38</initialStateSequence>
      <finalStateSequence>117</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>120</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>39</initialStateSequence>
      <finalStateSequence>117</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>134</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>14</initialStateSequence>
      <finalStateSequence>133</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>138</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>1</initialStateSequence>
      <finalStateSequence>137</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>139</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>133</initialStateSequence>
      <finalStateSequence>137</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>142</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>117</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sem Aprovação</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>147</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>141</initialStateSequence>
      <finalStateSequence>86</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>148</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>2</initialStateSequence>
      <finalStateSequence>133</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>156</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>149</initialStateSequence>
      <finalStateSequence>151</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>159</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>117</initialStateSequence>
      <finalStateSequence>42</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>160</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>42</initialStateSequence>
      <finalStateSequence>39</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>167</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>165</initialStateSequence>
      <finalStateSequence>164</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>168</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>164</initialStateSequence>
      <finalStateSequence>166</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>169</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>166</initialStateSequence>
      <finalStateSequence>165</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>170</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>166</initialStateSequence>
      <finalStateSequence>284</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>171</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>50</initialStateSequence>
      <finalStateSequence>164</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>172</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>10</initialStateSequence>
      <finalStateSequence>164</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>183</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>180</initialStateSequence>
      <finalStateSequence>182</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>185</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>182</initialStateSequence>
      <finalStateSequence>184</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>186</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>184</initialStateSequence>
      <finalStateSequence>133</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Não</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>187</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>184</initialStateSequence>
      <finalStateSequence>14</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>188</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>180</initialStateSequence>
      <finalStateSequence>14</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Não</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>193</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>191</initialStateSequence>
      <finalStateSequence>149</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Reprovado</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>195</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>191</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Aprovado</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>197</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>151</initialStateSequence>
      <finalStateSequence>196</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Não</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>205</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>204</initialStateSequence>
      <finalStateSequence>180</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>206</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>204</initialStateSequence>
      <finalStateSequence>133</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Não</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>207</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>203</initialStateSequence>
      <finalStateSequence>204</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>209</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>137</initialStateSequence>
      <finalStateSequence>208</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>210</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>208</initialStateSequence>
      <finalStateSequence>180</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Não</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>211</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>208</initialStateSequence>
      <finalStateSequence>203</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>213</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>86</initialStateSequence>
      <finalStateSequence>212</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>217</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>215</initialStateSequence>
      <finalStateSequence>216</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>218</linkSequence>
      </processLinkPK>
      <actionLabel>1 - Emitir Pedido de Compras</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>216</initialStateSequence>
      <finalStateSequence>212</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>220</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>212</initialStateSequence>
      <finalStateSequence>219</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>224</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>222</initialStateSequence>
      <finalStateSequence>223</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>225</linkSequence>
      </processLinkPK>
      <actionLabel>1 - Nova tentativa de Anexar Pedidos de Compras</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>223</initialStateSequence>
      <finalStateSequence>219</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>227</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>164</initialStateSequence>
      <finalStateSequence>284</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>true</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>230</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>228</initialStateSequence>
      <finalStateSequence>10</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>234</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>231</initialStateSequence>
      <finalStateSequence>232</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>236</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>219</initialStateSequence>
      <finalStateSequence>235</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>238</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>235</initialStateSequence>
      <finalStateSequence>10</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>240</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>4</initialStateSequence>
      <finalStateSequence>239</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>241</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>239</initialStateSequence>
      <finalStateSequence>6</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sem validação</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>247</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>245</initialStateSequence>
      <finalStateSequence>6</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>248</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>239</initialStateSequence>
      <finalStateSequence>245</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Necessita de validação dos itens</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>250</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>10</initialStateSequence>
      <finalStateSequence>249</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>252</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>251</initialStateSequence>
      <finalStateSequence>216</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>254</linkSequence>
      </processLinkPK>
      <actionLabel>3 - Ir para solicitação itens desvinculados</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>216</initialStateSequence>
      <finalStateSequence>253</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>257</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>4</initialStateSequence>
      <finalStateSequence>14</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>267</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>232</initialStateSequence>
      <finalStateSequence>269</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>268</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>269</initialStateSequence>
      <finalStateSequence>228</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>270</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>269</initialStateSequence>
      <finalStateSequence>228</finalStateSequence>
      <returnLabel></returnLabel>
      <name>00:01</name>
      <automaticLink>true</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>272</linkSequence>
      </processLinkPK>
      <actionLabel>2 - Cotação</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>216</initialStateSequence>
      <finalStateSequence>4</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>273</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>235</initialStateSequence>
      <finalStateSequence>269</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>275</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>255</initialStateSequence>
      <finalStateSequence>269</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>277</linkSequence>
      </processLinkPK>
      <actionLabel>2 - Devolver p/Validação de Cotação</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>6</initialStateSequence>
      <finalStateSequence>245</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>278</linkSequence>
      </processLinkPK>
      <actionLabel>2 - NÃO Anexar Pedidos de Compras</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>223</initialStateSequence>
      <finalStateSequence>235</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>280</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>279</initialStateSequence>
      <finalStateSequence>191</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>281</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>117</initialStateSequence>
      <finalStateSequence>279</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>283</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>151</initialStateSequence>
      <finalStateSequence>279</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>285</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>249</initialStateSequence>
      <finalStateSequence>251</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <linkSequence>286</linkSequence>
      </processLinkPK>
      <actionLabel>3 - Ir para solicitação itens desvinculados</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>253</initialStateSequence>
      <finalStateSequence>255</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>aglutinarSolicitacoes</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function aglutinarSolicitacoes(){&#xd;
	// buscar solicitações selecionadas para aglutinação&#xd;
	if (hAPI.getCardValue(&quot;txtNumSolicAdd___1&quot;) != null &amp;&amp;&#xd;
		hAPI.getCardValue(&quot;txtNumSolicAdd___1&quot;)	!= undefined &amp;&amp;&#xd;
		hAPI.getCardValue(&quot;txtNumSolicAdd___1&quot;).trim()	!= &quot;&quot;){&#xd;
		&#xd;
		var numProcess = getValue(&quot;WKNumProces&quot;);&#xd;
		&#xd;
		//var obsSolic = &quot;Solicitação gerado a partir dos itens desvinculados na solicitação&quot; + numProcess; &#xd;
	    		    &#xd;
		var mapa = hAPI.getCardData(parseInt(numProcess));&#xd;
		var card = new java.util.HashMap();&#xd;
		&#xd;
		var it = mapa.keySet().iterator();&#xd;
		while (it.hasNext()) {&#xd;
		   var campo = it.next();&#xd;
		 		   &#xd;
		   if (campo.indexOf(&quot;txtNumSolicAdd___&quot;) &gt; -1){&#xd;
			   			   &#xd;
			   var NumSolicAdd = mapa.get(campo);&#xd;
			   &#xd;
			   encerraAglutinada(NumSolicAdd);&#xd;
			   // se solic escolhida  nao estiver mais no pool fazer throw passando o numero da solicitacao que precisa ser excluida&#xd;
		   } // if campo&#xd;
		} // while  &#xd;
	} // if !=null&#xd;
} // end function</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>populaCamposHiddenAnalytics</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function populaCamposHiddenAnalytics(sequenceId){&#xd;
	var dataInicioEvento = new Date().getTime();&#xd;
	var dataFimEvento;&#xd;
	&#xd;
	var CURRENT_STATE = getValue(&quot;WKNumState&quot;);&#xd;
	var expediente = &quot;Default&quot;;&#xd;
	var tipoSolicitacao = hAPI.getCardValue(&quot;analyticsTpSolicitacao&quot;);&#xd;
	&#xd;
	if(CURRENT_STATE != null &amp;&amp; CURRENT_STATE != 0){&#xd;
		if( sequenceId == ATUALIZAR_SLA_CORRECAO_SOLICITACAO ||&#xd;
		    sequenceId == ATUALIZAR_SLA_APROVACAO_SOLICITANTE ||&#xd;
			sequenceId == CORRECAO_SOLICITACAO ||&#xd;
			sequenceId == ENCAMINHAR_COMPRADOR || &#xd;
			sequenceId == GERA_COTACAO || &#xd;
			sequenceId == COTACAO ||&#xd;
			sequenceId == DEFINIR_VENCEDOR ||&#xd;
			sequenceId == PRREENCHER_FORMULARIO_OBJETO_REAJUSTE_RECISAO_VALOR_VALIDADE ||&#xd;
			sequenceId == APROVACAO_1A_ALCADA ||&#xd;
			sequenceId == APROVACAO_2A_ALCADA ||&#xd;
			sequenceId == APROVACAO_3A_ALCADA ||&#xd;
			sequenceId == APROVACAO_4A_ALCADA ||&#xd;
			sequenceId == VALIDAR_PARECER_SOLICITANTE ||&#xd;
			sequenceId == EMITIR_PEDIDO_DE_COMPRA ||&#xd;
			sequenceId == ANEXAR_MINUTA ||&#xd;
			sequenceId == VALIDAR_MINUTA ||&#xd;
			sequenceId == AJUSTAR_DIVIRGENCIA ||&#xd;
			sequenceId == RECOLHER_ASSINATURA_E_DIGITALIZAR_CONTRATO ||&#xd;
			sequenceId == GERAR_CONTRATO_PROTHEUS ||&#xd;
			sequenceId == SOLUCAO_INCONSISTENCIA){&#xd;
			populaAnalytics(sequenceId);&#xd;
		}else if(sequenceId == FIM&#xd;
				|| sequenceId == FIM__&#xd;
				|| sequenceId == FIM___&#xd;
				|| sequenceId == FIM____){&#xd;
			populaAnalytics(sequenceId);&#xd;
			finalizarSolicitacao();&#xd;
		}&#xd;
	}&#xd;
	dataFimEvento = new Date().getTime();&#xd;
}&#xd;
&#xd;
function finalizarSolicitacao(){&#xd;
	&#xd;
		var dataAtual = new Date();&#xd;
		var dataFormatada = formatarDataAnalytics(dataAtual.getDate(), (dataAtual.getMonth()+1), dataAtual.getFullYear(), dataAtual.getHours(), dataAtual.getMinutes(), dataAtual.getSeconds());&#xd;
		&#xd;
		hAPI.setCardValue(&quot;analyticsDtFim&quot;,dataFormatada.split(&quot; &quot;)[0]);&#xd;
		hAPI.setCardValue(&quot;analyticsHrFim&quot;,dataFormatada.split(&quot; &quot;)[1]);&#xd;
		&#xd;
}&#xd;
&#xd;
function populaAnalytics(sequenceId){&#xd;
	&#xd;
	var expediente = &quot;Default&quot;;&#xd;
	var dataFormatada = buscaDataFormatada(&quot;analyticsDtInicio&quot;,&quot;analyticsHrInicio&quot;);&#xd;
	var prazoSLA = hAPI.getCardValue(&quot;analyticsPrazoSLA&quot;);&#xd;
	var codigoSLA = &quot;&quot;;&#xd;
	var sla;&#xd;
	var tipoSolicitacao = hAPI.getCardValue(&quot;grupoAnaliseComprador&quot;);&#xd;
	var contrato = hAPI.getCardValue(&quot;rdContrato&quot;);&#xd;
	&#xd;
	if(contrato != null &amp;&amp; contrato != undefined &amp;&amp; contrato == &quot;sim&quot;){&#xd;
		tipoSolicitacao = &quot;Compra Contrato&quot;;		&#xd;
		codigoSLA = &quot;processoComprasContrato&quot;;&#xd;
	}else if(tipoSolicitacao == hAPI.getCardValue(&quot;poolAbertura&quot;)){&#xd;
		tipoSolicitacao = &quot;Compra Mat/Med&quot;;&#xd;
		codigoSLA = &quot;processoComprasMatMed&quot;;&#xd;
	}else if(tipoSolicitacao == &quot;Pool:Group:CD&quot; || tipoSolicitacao == &quot;Pool:Group:CA_Compras&quot;){&#xd;
		var tipoDiversas = hAPI.getCardValue(&quot;campoIdentificador&quot;);&#xd;
		//var tipoDiversas = hAPI.getCardValue(&quot;descritorCompras&quot;);&#xd;
		&#xd;
		// if(tipoDiversas.indexOf(&quot;- SRV&quot;) != -1){&#xd;
		// 	tipoSolicitacao = &quot;Compra Serviço&quot;;&#xd;
		// 	codigoSLA = &quot;processoComprasServico&quot;;&#xd;
		// }else{&#xd;
		// 	tipoSolicitacao = &quot;Compra Diversa&quot;;&#xd;
		// 	codigoSLA = &quot;processoComprasDiverso&quot;;&#xd;
		// }&#xd;
		&#xd;
	}&#xd;
	&#xd;
	&#xd;
	// if(prazoSLA == &quot;&quot;){&#xd;
	// 	var prazosSLA = buscaDatasetPrazosSLA();&#xd;
	// 	sla = buscaSLA(codigoSLA, prazosSLA);&#xd;
		&#xd;
	// 	hAPI.setCardValue(&quot;analyticsPrazoSLA&quot;,sla.prazo_sla);&#xd;
	// 	hAPI.setCardValue(&quot;analyticsMedidaPrazoSLA&quot;,sla.medida_prazo);&#xd;
		&#xd;
	// } else {&#xd;
	// 	sla = {&#xd;
	// 			codigo_sla : codigoSLA,&#xd;
	// 			prazo_sla : prazoSLA,&#xd;
	// 			medida_prazo : hAPI.getCardValue(&quot;analyticsMedidaPrazoSLA&quot;)&#xd;
	// 	};&#xd;
		&#xd;
	// }&#xd;
	hAPI.setCardValue(&quot;analyticsDtInicio&quot;,dataFormatada.split(&quot; &quot;)[0]);&#xd;
	hAPI.setCardValue(&quot;analyticsHrInicio&quot;,dataFormatada.split(&quot; &quot;)[1]);&#xd;
&#xd;
	if(getValue(&quot;WKNumState&quot;) != sequenceId){		&#xd;
		hAPI.setCardValue(&quot;analyticsTpSolicitacao&quot;,tipoSolicitacao);			&#xd;
		if (sequenceId == ATUALIZAR_SLA_CORRECAO_SOLICITACAO ||&#xd;
			sequenceId == ATUALIZAR_SLA_APROVACAO_SOLICITANTE ||&#xd;
			sequenceId == ENCAMINHAR_COMPRADOR || &#xd;
			sequenceId == VALIDAR_PARECER_SOLICITANTE || &#xd;
			sequenceId == SOLUCAO_INCONSISTENCIA || &#xd;
			sequenceId == FIM__) {&#xd;
			&#xd;
			var atividadesDescartadas = new Array();&#xd;
			atividadesDescartadas[0] = INICIO_1;&#xd;
			atividadesDescartadas[1] = CORRECAO_SOLICITACAO;&#xd;
			atividadesDescartadas[2] = PARECER_SOLICITANTE;&#xd;
			atividadesDescartadas[3] = APROVACAO_SOLICITANTE;&#xd;
			&#xd;
			var primeirasAtividadesDescartadas = new Array();&#xd;
			primeirasAtividadesDescartadas[0] = GERA_COTACAO;&#xd;
			primeirasAtividadesDescartadas[1] = ANALISE_COMPRADOR;&#xd;
			&#xd;
			// var prazoConclusao = buscaPrazoConclusao(sla, atividadesDescartadas, primeirasAtividadesDescartadas, dataFormatada.split(&quot; &quot;)[0], dataFormatada.split(&quot; &quot;)[1], sequenceId);&#xd;
			// hAPI.setCardValue(&quot;analyticsDtPrazo&quot;,prazoConclusao.split(&quot; &quot;)[0]);&#xd;
			// hAPI.setCardValue(&quot;analyticsHrPrazo&quot;,prazoConclusao.split(&quot; &quot;)[1]);&#xd;
		}&#xd;
	}&#xd;
	&#xd;
}&#xd;
&#xd;
// function buscaPrazoConclusao(sla, atividadesDescartadas, primeirasAtividadesDescartadas,  dataInicio, horaInicio, sequenceId){&#xd;
// 	var expediente = &quot;Default&quot;;&#xd;
// 	var dataPrazoConclusao = calculaPrazoConclusao(sla, expediente, atividadesDescartadas,primeirasAtividadesDescartadas, dataInicio, horaInicio, sequenceId);&#xd;
// 	var dataFormatadaPrazo = formatarDataAnalytics(dataPrazoConclusao.getDate()+&quot;&quot;, (dataPrazoConclusao.getMonth() + 1)+&quot;&quot;, dataPrazoConclusao.getFullYear()+&quot;&quot;, dataPrazoConclusao.getHours()+&quot;&quot;,dataPrazoConclusao.getMinutes()+&quot;&quot;,dataPrazoConclusao.getSeconds()+&quot;&quot;)&#xd;
	&#xd;
// 	return dataFormatadaPrazo;&#xd;
// }&#xd;
&#xd;
&#xd;
&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>IniciaCadastroFornecedor</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function iniciaCadastroFornecedor(fornecedor, datasetMunicipios){&#xd;
	&#xd;
    var config = new objDataSet(&quot;configServer&quot;);&#xd;
    config.buscar();&#xd;
    var configServer = config.getDados();&#xd;
    try {&#xd;
	     for ( var posValues in configServer.values) {&#xd;
	      var wsUser = configServer.getValue(posValues,&quot;usuarioPublicaDoc&quot;);&#xd;
	      var wsPass = configServer.getValue(posValues,&quot;senhaPublicaDoc&quot;);&#xd;
	     }&#xd;
    } catch (e) {&#xd;
    	log.error(&quot;Falha ao utilizar o objAnexo, não encontrado dataSet configServer.&quot;);&#xd;
    }&#xd;
	var wsCompany = 1;&#xd;
&#xd;
	&#xd;
	var PROCESSO_CADASTRO_FORNECEDOR = &quot;cadastroFornecedor&quot;;&#xd;
	&#xd;
	var matriculaResponsavel = getValue(&quot;WKUser&quot;);&#xd;
	var codMunicipio = &quot; &quot;;&#xd;
	var nmCidade = &quot;&quot;;&#xd;
	var telefone = &quot;&quot;;&#xd;
	var ddd = &quot;&quot;;&#xd;
	var fax = &quot;&quot;;&#xd;
	var incricaEstadual = &quot;&quot;;&#xd;
	var isento = &quot;&quot;;&#xd;
	var hiddenFilial = hAPI.getCardValue(&quot;filial_protheus&quot;);&#xd;
	var filial = hAPI.getCardValue(&quot;nmFilial&quot;);&#xd;
	&#xd;
	&#xd;
	/*&#xd;
	 * Inscrição Estadual&#xd;
	 * &#xd;
	 */&#xd;
	if(fornecedor.has(&quot;Inscricao_Estadual&quot;)){&#xd;
		if(fornecedor.get(&quot;Inscricao_Estadual&quot;) == &quot;&quot; || fornecedor.get(&quot;Inscricao_Estadual&quot;) == &quot;isento&quot;){&#xd;
			isento = &quot;on&quot;;&#xd;
		}else{&#xd;
			incricaEstadual = fornecedor.get(&quot;Inscricao_Estadual&quot;) ;&#xd;
		}&#xd;
	} &#xd;
&#xd;
	/*&#xd;
	 * nome e cód Cidade&#xd;
	 * &#xd;
	 */&#xd;
	var cidadeFormatada = formataNomeCidade(fornecedor.get(&quot;Cidade&quot;));&#xd;
	codMunicipio = buscaCodigoMunicipio(datasetMunicipios, cidadeFormatada);&#xd;
	if(fornecedor.has(&quot;Cidade&quot;) &amp;&amp;  codMunicipio != &quot;&quot;){&#xd;
		nmCidade = cidadeFormatada;&#xd;
	}else{&#xd;
		nmCidade = &quot;&quot;;&#xd;
		codMunicipio = &quot;&quot;;&#xd;
	}&#xd;
	&#xd;
	/*&#xd;
	 * &#xd;
	 * Telefone e DDD&#xd;
	 */&#xd;
	if(fornecedor.has(&quot;Telefone&quot;) &amp;&amp; fornecedor.get(&quot;Telefone&quot;) != &quot;&quot;){&#xd;
		telefone = fornecedor.get(&quot;Telefone&quot;);&#xd;
		if(telefone.indexOf(&quot;(&quot;) &gt; -1){&#xd;
			ddd = telefone.substring(0,telefone.indexOf(&quot; &quot;));&#xd;
			ddd = ddd.replace(&quot;(&quot;,&quot;&quot;);&#xd;
			ddd = ddd.replace(&quot;)&quot;,&quot;&quot;);&#xd;
			telefone = telefone.substring(telefone.indexOf(&quot; &quot;),(telefone+&quot;&quot;).length -1);&#xd;
			telefone = tiraEspacoesEmBranco(telefone);&#xd;
			ddd = tiraEspacoesEmBranco(ddd);&#xd;
		}&#xd;
	}&#xd;
&#xd;
	&#xd;
	/*&#xd;
	 * &#xd;
	 * Fax&#xd;
	 * &#xd;
	 */&#xd;
	if(fornecedor.has(&quot;Fax&quot;) &amp;&amp; fornecedor.get(&quot;Fax&quot;) != &quot;&quot;){&#xd;
		fax = fornecedor.get(&quot;Fax&quot;);&#xd;
		if(fax != null) {&#xd;
			if(fax.indexOf(&quot;(&quot;) &gt; -1){&#xd;
				fax = fax.substring(fax.indexOf(&quot; &quot;),(fax+&quot;&quot;).length -1);&#xd;
				fax = tiraEspacoesEmBranco(fax);&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
    try {&#xd;
    	&#xd;
    	var workflowServiceProvider = ServiceManager.getServiceInstance(&quot;WorkflowService&quot;);&#xd;
		var workflowServiceLocator = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ECMWorkflowEngineServiceServiceLocator&quot;);				&#xd;
	    var workflowService = workflowServiceLocator.getWorkflowEngineServicePort();&#xd;
	    var users = workflowServiceProvider.instantiate(&quot;net.java.dev.jaxb.array.StringArray&quot;);&#xd;
	    var userAux = new Array(getValue(&quot;WKUser&quot;));	    &#xd;
	    users.setItem(userAux);&#xd;
	    &#xd;
	    var keyValueDtoArray = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDtoArray&quot;);	    	    &#xd;
	    var listaCampos = new Array();		&#xd;
	    &#xd;
	    var keyValueDto1 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto1.setKey(&quot;hiddenFilial&quot;);&#xd;
	    keyValueDto1.setValue(hiddenFilial);&#xd;
	    listaCampos.push(keyValueDto1);&#xd;
	    &#xd;
	    var keyValueDto1a = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto1a.setKey(&quot;filial&quot;);&#xd;
	    keyValueDto1a.setValue(filial);&#xd;
	    listaCampos.push(keyValueDto1a);&#xd;
	    &#xd;
	    var keyValueDto1b = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto1b.setKey(&quot;analyticsNmFilial&quot;);&#xd;
	    keyValueDto1b.setValue(hiddenFilial);&#xd;
	    listaCampos.push(keyValueDto1b);&#xd;
	    &#xd;
	    var keyValueDto2 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto2.setKey(&quot;tipodeSolicitacao&quot;);&#xd;
	    keyValueDto2.setValue(&quot;novoFornecedor&quot;);&#xd;
	    listaCampos.push(keyValueDto2);&#xd;
	    &#xd;
	    var keyValueDto3 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto3.setKey(&quot;A2_TIPO&quot;);&#xd;
	    keyValueDto3.setValue(&quot;J&quot;);&#xd;
	    listaCampos.push(keyValueDto3);&#xd;
	    &#xd;
	    var A2_CGC = fornecedor.has(&quot;CNPJ&quot;) ? fornecedor.get(&quot;CNPJ&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto4 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto4.setKey(&quot;A2_CGC_HIDDEN&quot;);&#xd;
	    keyValueDto4.setValue(A2_CGC);&#xd;
	    listaCampos.push(keyValueDto4);&#xd;
	    &#xd;
	    var keyValueDto5 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto5.setKey(&quot;A2_CGC&quot;);&#xd;
	    keyValueDto5.setValue(A2_CGC);&#xd;
	    listaCampos.push(keyValueDto5);&#xd;
	    &#xd;
	    var A2_NOME =fornecedor.has(&quot;Razao_Social&quot;) ? fornecedor.get(&quot;Razao_Social&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto6 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto6.setKey(&quot;A2_NOME&quot;);&#xd;
	    keyValueDto6.setValue(A2_NOME);&#xd;
	    listaCampos.push(keyValueDto6);&#xd;
	    &#xd;
	    var A2_NREDUZ = fornecedor.has(&quot;Nome_Fantasia&quot;) ? fornecedor.get(&quot;Nome_Fantasia&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto7 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto7.setKey(&quot;A2_NREDUZ&quot;);&#xd;
	    keyValueDto7.setValue(A2_NREDUZ);&#xd;
	    listaCampos.push(keyValueDto7);&#xd;
&#xd;
	    var A2_CEP = fornecedor.has(&quot;CEP&quot;) ? fornecedor.get(&quot;CEP&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto8 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto8.setKey(&quot;A2_CEP_HIDDEN&quot;);&#xd;
	    keyValueDto8.setValue(A2_CEP);&#xd;
	    listaCampos.push(keyValueDto8);&#xd;
	    &#xd;
	    var keyValueDto9 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto9.setKey(&quot;A2_CEP&quot;);&#xd;
	    keyValueDto9.setValue(A2_CEP);&#xd;
	    listaCampos.push(keyValueDto9);&#xd;
	    &#xd;
	    &#xd;
	    var A2_END = fornecedor.has(&quot;Logradouro&quot;) ? fornecedor.get(&quot;Logradouro&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto10 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto10.setKey(&quot;A2_END&quot;);&#xd;
	    keyValueDto10.setValue(A2_END);&#xd;
	    listaCampos.push(keyValueDto10);&#xd;
	&#xd;
	    var A2_EST = fornecedor.has(&quot;Estado_Sigla&quot;) ? fornecedor.get(&quot;Estado_Sigla&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto11 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto11.setKey(&quot;A2_EST&quot;);&#xd;
	    keyValueDto11.setValue(A2_EST);&#xd;
	    listaCampos.push(keyValueDto11);&#xd;
	    &#xd;
	    var PAIS_DESC = fornecedor.has(&quot;Pais&quot;) ? fornecedor.get(&quot;Pais&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto12 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto12.setKey(&quot;PAIS_DESC&quot;);&#xd;
	    keyValueDto12.setValue(PAIS_DESC);&#xd;
	    listaCampos.push(keyValueDto12);&#xd;
	    &#xd;
	    var A2_PAIS = fornecedor.has(&quot;Pais_Sigla&quot;) ? fornecedor.get(&quot;Pais_Sigla&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto14 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto14.setKey(&quot;A2_PAIS&quot;);&#xd;
	    keyValueDto14.setValue(A2_PAIS);&#xd;
	    listaCampos.push(keyValueDto14);&#xd;
	    &#xd;
	    var A2_EMAIL = fornecedor.has(&quot;Email&quot;) ? fornecedor.get(&quot;Email&quot;) : &quot;&quot;;&#xd;
	    var keyValueDto15 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto15.setKey(&quot;A2_EMAIL&quot;);&#xd;
	    keyValueDto15.setValue(A2_EMAIL);&#xd;
	    listaCampos.push(keyValueDto15);&#xd;
	    &#xd;
	    var keyValueDto16 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto16.setKey(&quot;A2_INSCR&quot;);&#xd;
	    keyValueDto16.setValue(incricaEstadual);&#xd;
	    listaCampos.push(keyValueDto16);&#xd;
	    &#xd;
	    var keyValueDto17 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto17.setKey(&quot;isento&quot;);&#xd;
	    keyValueDto17.setValue(isento);&#xd;
	    listaCampos.push(keyValueDto17);&#xd;
	    &#xd;
	    var keyValueDto18 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto18.setKey(&quot;MUNICIPIO_DESC&quot;);&#xd;
	    keyValueDto18.setValue(nmCidade);&#xd;
	    listaCampos.push(keyValueDto18);&#xd;
	    &#xd;
	    var keyValueDto19 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto19.setKey(&quot;A2_COD_MUN&quot;);&#xd;
	    keyValueDto19.setValue(codMunicipio);&#xd;
	    listaCampos.push(keyValueDto19);&#xd;
	    &#xd;
	    var keyValueDto20 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto20.setKey(&quot;A2_DDD&quot;);&#xd;
	    keyValueDto20.setValue(ddd);&#xd;
	    listaCampos.push(keyValueDto20);&#xd;
	    &#xd;
	    var keyValueDto21 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto21.setKey(&quot;A2_TEL&quot;);&#xd;
	    keyValueDto21.setValue(telefone);&#xd;
	    listaCampos.push(keyValueDto21);&#xd;
	    &#xd;
		var keyValueDto22 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto22.setKey(&quot;A2_TEL_HIDDEN&quot;);&#xd;
	    keyValueDto22.setValue(telefone);&#xd;
	    listaCampos.push(keyValueDto22);&#xd;
	    &#xd;
	    var keyValueDto23 = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
	    keyValueDto23.setKey(&quot;A2_FAX&quot;);&#xd;
	    keyValueDto23.setValue(fax);&#xd;
	    listaCampos.push(keyValueDto23);&#xd;
	    &#xd;
	    keyValueDtoArray.setItem(listaCampos);&#xd;
	    &#xd;
	    var processTaskAppointmentDtoArray = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ProcessTaskAppointmentDtoArray&quot;);&#xd;
	    var processAttachmentDtoArray = workflowServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ProcessAttachmentDtoArray&quot;);&#xd;
	    var keyValueDtoArrayResult = workflowService.startProcessClassic(wsUser, wsPass, wsCompany, PROCESSO_CADASTRO_FORNECEDOR, new java.lang.Integer(40), users, &quot;Processo Iniciado atrav?s da solicita??o de compras &quot;+getValue(&quot;WKNumProces&quot;), matriculaResponsavel, false, processAttachmentDtoArray, keyValueDtoArray, processTaskAppointmentDtoArray, false);&#xd;
	    &#xd;
	    var iProcess = &quot;&quot;;&#xd;
	    if (keyValueDtoArrayResult.getItem().length &gt; 0) {&#xd;
		    var listResult = keyValueDtoArrayResult.getItem();&#xd;
		    for (var i=0; i&lt; listResult.length; i++) {&#xd;
		    	if (listResult[i].getKey() == &quot;iProcess&quot;) {&#xd;
		    		iProcess = listResult[i].getValue();;&#xd;
		    	}&#xd;
		    	&#xd;
		    }&#xd;
	    }&#xd;
	    return iProcess;&#xd;
    } catch (e) {&#xd;
    	log.info(&quot;_-------------------ERRO------&quot;+e.message);&#xd;
    }&#xd;
}&#xd;
&#xd;
function tiraEspacoesEmBranco(palavra){&#xd;
	while(palavra.indexOf(&quot; &quot;) &gt; -1){&#xd;
		palavra = palavra.replace(&quot; &quot;,&quot;&quot;);&#xd;
	}&#xd;
	&#xd;
	return palavra;&#xd;
}&#xd;
&#xd;
&#xd;
function buscaCodigoMunicipio(datasetMunicipios, municipio){&#xd;
	var codMunicipio = &quot;&quot;;&#xd;
	for (var i = 0; i &lt; datasetMunicipios.length; i++) {&#xd;
		if(datasetMunicipios[i][1] != undefined &amp;&amp; (datasetMunicipios[i][1]).trim() == municipio){&#xd;
			codMunicipio = datasetMunicipios[i][0];&#xd;
			break;&#xd;
		}&#xd;
	}&#xd;
	return codMunicipio;&#xd;
}&#xd;
&#xd;
function formataNomeCidade(palavra) {&#xd;
	var nova = &quot;&quot;;&#xd;
	var com_acento = &quot;??????????????????????????????????????????????&quot;;&#xd;
	var sem_acento = &quot;aaaaaeeeeiiiiooooouuuucAAAAAEEEEIIIIOOOOOUUUUC&quot;;&#xd;
	nova = &quot;&quot;;&#xd;
	for(i=0;i&lt;(&quot;&quot;+palavra).length;i++) {&#xd;
	    if (com_acento.indexOf(palavra.substr(i,1))&gt;=0)&#xd;
	        nova += sem_acento.substr(com_acento.indexOf(palavra.substr(i,1)),1);&#xd;
	    else &#xd;
	        nova += palavra.substr(i,1);&#xd;
	}&#xd;
	&#xd;
	nova = nova.toUpperCase();&#xd;
	&#xd;
	return nova;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask219</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask219(attempt, message) {&#xd;
  var arrPedidosCompras = JSON.parse(hAPI.getCardValue(&apos;numPedido&apos;));&#xd;
  anexarPedido(arrPedidosCompras);&#xd;
}&#xd;
&#xd;
function anexarPedido(arrPedidosCompras){&#xd;
  var numProcess = getValue(&quot;WKNumProces&quot;);&#xd;
  var numFilial = hAPI.getCardValue(&quot;filial_protheus&quot;);&#xd;
  var arrBase64 = [];&#xd;
  for (var i = 0; i &lt; arrPedidosCompras.length; i++) {&#xd;
    var constraintDs_pdfPedidoCompra = DatasetFactory.createConstraint(&apos;FILIAL&apos;, numFilial, numFilial, ConstraintType.MUST);&#xd;
    var constraintDs_pdfPedidoCompra1 = DatasetFactory.createConstraint(&apos;PEDIDO&apos;, arrPedidosCompras[i], arrPedidosCompras[i], ConstraintType.MUST);&#xd;
    var ds_pdfPedidoCompra = DatasetFactory.getDataset(&apos;ds_pdfPedidoCompra&apos;, null, [constraintDs_pdfPedidoCompra,constraintDs_pdfPedidoCompra1], null);&#xd;
    if (ds_pdfPedidoCompra) {&#xd;
      arrBase64.push(ds_pdfPedidoCompra.getValue(0, &apos;PDF&apos;));&#xd;
    } else {&#xd;
      throw &apos;Erro ao consultar o pedido de compra [&apos;+arrPedidosCompras[i]+&apos;] no protheus&apos;;&#xd;
    }&#xd;
  }&#xd;
  enviaAnexoSolicitacao(numProcess, &apos;219&apos;, arrBase64, arrPedidosCompras, numFilial);&#xd;
}&#xd;
&#xd;
/**&#xd;
*Envia anexo para uma solicitação&#xd;
*@codSolicitacao - Codigo da solicitção&#xd;
*@atividade - número da atividade em que será anexado o documento&#xd;
*@arrBase64 - Array contendo os arquivos convertidos em base64&#xd;
**/&#xd;
function enviaAnexoSolicitacao(codSolicitacao, atividade, arrBase64, arrPedidosCompras, numFilial){&#xd;
  try {&#xd;
  	// Obtém a instância do serviço &apos;WorkflowEngineService&apos;&#xd;
  	var workflowEngineServiceProvider = ServiceManager.getServiceInstance(&quot;ECMWorkflowEngineService&quot;);&#xd;
  	var processAttachmentDtoArray =  workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ProcessAttachmentDtoArray&apos;);&#xd;
  	var keyValueDtoArray = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.KeyValueDtoArray&apos;);&#xd;
  	var processTaskAppointmentDtoArray = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ProcessTaskAppointmentDtoArray&apos;);&#xd;
  	var stringArray =  workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.StringArray&apos;);&#xd;
&#xd;
    //Consulta o DataSet ProcessTask para recuperar o usuário executor da aitivade de Definir Vencedor,&#xd;
    //Que de acordo com o diagrama deve ser o responsavel pela atividade de Enviar E-mail com Pedido de Compras&#xd;
    var constraintDsProcessTask = DatasetFactory.createConstraint(&apos;processTaskPK.processInstanceId&apos;, codSolicitacao, codSolicitacao, ConstraintType.MUST);&#xd;
    var constraintDsProcessTask2 = DatasetFactory.createConstraint(&apos;choosedSequence&apos;, 6, 6, ConstraintType.MUST);&#xd;
    var arrConstraintsDsProcessTask = [constraintDsProcessTask,constraintDsProcessTask2]&#xd;
    var dsProcessTask = DatasetFactory.getDataset(&apos;processTask&apos;, null, arrConstraintsDsProcessTask, null);&#xd;
    var usuarioResponsavel = dsProcessTask.getValue(0, &apos;processTaskPK.colleagueId&apos;);&#xd;
  	stringArray.getItem().add(usuarioResponsavel);&#xd;
&#xd;
    for (var o = 0; o &lt; arrPedidosCompras.length; o++) {&#xd;
     var pedidoCompraAttachmentDto = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ProcessAttachmentDto&apos;);&#xd;
     pedidoCompraAttachmentDto.setAttachmentSequence(o);&#xd;
     pedidoCompraAttachmentDto.setCompanyId(1);&#xd;
     pedidoCompraAttachmentDto.setFileName(&quot;Pedido_Compras_&quot;+numFilial+&quot;_&quot;+arrPedidosCompras[o]+&quot;.pdf&quot;);&#xd;
     pedidoCompraAttachmentDto.setDescription(&quot;Pedido_Compras_&quot;+numFilial+&quot;_&quot;+arrPedidosCompras[o]+&quot;.pdf&quot;);&#xd;
     pedidoCompraAttachmentDto.setNewAttach(true);&#xd;
     pedidoCompraAttachmentDto.setVersion(1000);&#xd;
     var attachment =  workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.Attachment&apos;);&#xd;
     attachment.setAttach(true);&#xd;
     attachment.setFileName(&quot;Pedido_Compras_&quot;+numFilial+&quot;_&quot;+arrPedidosCompras[o]+&quot;.pdf&quot;);&#xd;
     attachment.setFilecontent(java.util.Base64.getDecoder().decode(new java.lang.String(arrBase64[o]).getBytes(&quot;UTF-8&quot;)));&#xd;
     pedidoCompraAttachmentDto.getAttachments().add(attachment);&#xd;
     processAttachmentDtoArray.getItem().add(pedidoCompraAttachmentDto);&#xd;
   }&#xd;
&#xd;
    var constraintColleague = DatasetFactory.createConstraint(&apos;mail&apos;, &apos;integrador.fluig@oncoclinicas.com&apos;, &apos;integrador.fluig@oncoclinicas.com&apos;, ConstraintType.MUST);&#xd;
    var ds_colleague = DatasetFactory.getDataset(&apos;colleague&apos;, null, [constraintColleague], null);&#xd;
    var userIntegrador = ds_colleague.getValue(0, &quot;colleaguePK.colleagueId&quot;);&#xd;
&#xd;
    if(userIntegrador == undefined || userIntegrador == null || userIntegrador == &apos;&apos;){&#xd;
      throw &apos;Falha ao consultar o Usuário Integrador do Fluig, contate a equipe de Sistemas&apos;;&#xd;
    }&#xd;
&#xd;
  	// Instancia o serviço&#xd;
  	var workflowEngineServiceLocator = workflowEngineServiceProvider.instantiate(&quot;br.com.oncoclinicas.fluig.ECMWorkflowEngineServiceService&quot;);&#xd;
  	var workflowEngineService = workflowEngineServiceLocator.getWorkflowEngineServicePort();&#xd;
  	var servico = workflowEngineService.saveAndSendTaskClassic(&quot;integrador.fluig@oncoclinicas.com&quot;,&#xd;
  		   	&quot;hUbust*7&quot;,&#xd;
  		   	1,&#xd;
  		   	parseInt(codSolicitacao),&#xd;
  		   	parseInt(atividade),&#xd;
  		  	stringArray,&#xd;
  		   	&quot;&quot;,&#xd;
  		   	userIntegrador,//DEV &amp; TST:m8a5hsboaihse9u31522084847088; Produção:imwn2dyhbuywfa0f1522083830483&#xd;
  		   	false,&#xd;
  		  	processAttachmentDtoArray,&#xd;
  			 	keyValueDtoArray,&#xd;
  				processTaskAppointmentDtoArray,&#xd;
  				true,&#xd;
  				0);&#xd;
&#xd;
  	//Verifica erro na integração do anexo&#xd;
      for (var p = 0; p &lt; servico.getItem().size(); p++) {&#xd;
      	if(servico.getItem().get(p).getKey() == &quot;ERROR&quot;){&#xd;
      		throw &quot;Erro para anexar o arquivo. - &quot;+ servico.getItem().get(p).getValue();&#xd;
      	}&#xd;
    	}&#xd;
&#xd;
  	return true;&#xd;
  } catch (e) {&#xd;
    throw &quot;Erro ao anexar pedidos de compras na solicitação &quot;+codSolicitacao+&quot; :&quot;+e;&#xd;
  }&#xd;
}&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>SLA</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function GETSLA() {&#xd;
    var active = getValue(&apos;WKNumState&apos;)&#xd;
&#xd;
    if (active == 0 || active == getStartActive().getValue(0, &quot;processStatePK.sequence&quot;)) {&#xd;
&#xd;
        var codigo = hAPI.getCardValue(&apos;COD_SOLICITACAO&apos;);&#xd;
        var dataSLA;&#xd;
        // verifica se o processo foi iniciado com o campo COD_SOLICITACAO para consultar o sla&#xd;
        // do contrario consulta o sla do processo default&#xd;
        if (codigo != &apos;&apos; &amp;&amp; codigo != undefined) {&#xd;
            dataSLA = getSlaById(codigo)&#xd;
            if (dataSLA.rowsCount &lt;= 0) {&#xd;
                dataSLA = getSlaDefault()&#xd;
                hAPI.setCardValue(&apos;ISDEFAULT&apos;, &apos;&apos; + true)&#xd;
            }&#xd;
        } else {&#xd;
            dataSLA = getSlaDefault();&#xd;
            hAPI.setCardValue(&apos;ISDEFAULT&apos;, &apos;&apos; + true)&#xd;
        }&#xd;
        // valida se o chamado possui SLA&#xd;
        if (dataSLA.rowsCount &gt; 0) {&#xd;
&#xd;
            // seta o valor id do documento e a versao&#xd;
            hAPI.setCardValue(&apos;COD_SOLICITACAO&apos;, &apos;&apos; + dataSLA.getValue(0, &apos;documentid&apos;))&#xd;
            hAPI.setCardValue(&apos;VERSAO&apos;, &apos;&apos; + dataSLA.getValue(0, &apos;version&apos;))&#xd;
            // converte a string JsonSla em objeto e popula os campos&#xd;
            dataSLA = dataSLA.getValue(0, &apos;jsonSLA&apos;)&#xd;
            dataSLA = JSON.parse(dataSLA)&#xd;
            hAPI.setCardValue(&apos;SLA_TOTAL&apos;, &apos;&apos; + dataSLA.slaTotal)&#xd;
&#xd;
&#xd;
            for (var key in dataSLA.SLA) {&#xd;
                var sla = dataSLA.SLA[key]&#xd;
                hAPI.setCardValue(&apos;SLA&apos; + sla.codAtividade, sla.sla)&#xd;
            }&#xd;
&#xd;
        } else {&#xd;
&#xd;
            throw &quot;Não foi encontrado um registro de SLA para essa solicitacao,&quot; +&#xd;
                &quot; portanto ela nao pode ser iniciada!!! Contate a equipe de melhorias Continuas&quot;&#xd;
&#xd;
        }&#xd;
&#xd;
    }&#xd;
}&#xd;
&#xd;
// consulta o sla pelo codigo da solicitaçã&#xd;
function getSlaById(id) {&#xd;
&#xd;
    var cons = []&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;metadata#active&apos;, &apos;true&apos;, &apos;true&apos;, ConstraintType.MUST))&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;isActive&apos;, &apos;true&apos;, &apos;true&apos;, ConstraintType.MUST))&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;documentid&apos;, id, id, ConstraintType.MUST))&#xd;
    return DatasetFactory.getDataset(&apos;ds_ficharioSLA&apos;, null, cons, null);&#xd;
}&#xd;
// consulta o SLA pelo codigo do processo&#xd;
function getSlaDefault() {&#xd;
    var codProcess = getValue(&quot;WKDef&quot;);&#xd;
&#xd;
    var cons = []&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;metadata#active&apos;, &apos;true&apos;, &apos;true&apos;, ConstraintType.MUST))&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;idProcesso&apos;, codProcess, codProcess, ConstraintType.MUST))&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;isActive&apos;, true, true, ConstraintType.MUST))&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;isDefault&apos;, true, true, ConstraintType.MUST))&#xd;
    return DatasetFactory.getDataset(&apos;ds_ficharioSLA&apos;, null, cons, null);&#xd;
&#xd;
}&#xd;
// consulta qual o Id da atividade inicial do fluxo()&#xd;
function getStartActive() {&#xd;
    var idProcess = getValue(&quot;WKDef&quot;)&#xd;
    var versionProcess = getValue(&quot;WKVersDef&quot;)&#xd;
&#xd;
    var cons = []&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;initialState&apos;, &apos;true&apos;, &apos;true&apos;, ConstraintType.MUST))&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;processStatePK.processId&apos;, idProcess, idProcess, ConstraintType.MUST))&#xd;
    cons.push(DatasetFactory.createConstraint(&apos;processStatePK.version&apos;, versionProcess, versionProcess, ConstraintType.MUST))&#xd;
    return DatasetFactory.getDataset(&apos;processState&apos;, null, cons, null);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_fluig_1-3-2</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/*&#xd;
 * Arquivo respons�vel por fun��es de manipula��o comum entre Events e Scripts do Workflow. &#xd;
 */&#xd;
&#xd;
/**&#xd;
 * M�todo para retornar os parametros defaults do Fluig&#xd;
 * &#xd;
 * @param servico&#xd;
 *            Nome do servi�o do Fluig&#xd;
 * &#xd;
 * @returns Valor do servi�o&#xd;
 */&#xd;
 function getParametro(servico) {&#xd;
	return getValue(servico);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * M�todo para gravar o valor no name informado&#xd;
 * &#xd;
 * @param form&#xd;
 *            Informar o form do displayFields e validateForm&#xd;
 * @param nomeCampo&#xd;
 *            Informar o name do Campo&#xd;
 * @param valorCampo&#xd;
 *            Infromar o valor do Campo&#xd;
 */&#xd;
function setValorCampo(form, nomeCampo, valorCampo) {&#xd;
	form.setValue(nomeCampo, valorCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Método para retornar valor de campo do formulario&#xd;
 * &#xd;
 * @param form&#xd;
 * 			Informar o form do displayFields e validateForm&#xd;
 * @param nomeCampo&#xd;
 * 			Informar o name do Campo&#xd;
 * @returns&#xd;
 * 		Valor do campo solicitado&#xd;
 */&#xd;
function getValorCampo(form, nomeCampo) {&#xd;
	return form.getValue(nomeCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Método para retornar o valor de um campo de formulário em scripts de workflow&#xd;
 * &#xd;
 * @param nomeCampo&#xd;
 * 				Nome do campo que se deseja recuperar o valor&#xd;
 * &#xd;
 * @returns Valor do campo solicitado&#xd;
 */&#xd;
function getWFParametro(nomeCampo){&#xd;
	return hAPI.getCardValue(nomeCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Método para setar o valor de um campo de formulário em scripts de workflow&#xd;
 * &#xd;
 * @param nomeCampo&#xd;
 * 				Nome do campo que se deseja setar o valor&#xd;
 * @param valorCampo&#xd;
 * 				Valor do campo&#xd;
 * &#xd;
 * @returns Campo do formulário com o valor setado&#xd;
 */&#xd;
function setWFParametro(nomeCampo, valorCampo){&#xd;
	return hAPI.setCardValue(nomeCampo, valorCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id do Usu�rio Logado&#xd;
 * &#xd;
 * @returns Id do Usu�rio logado&#xd;
 */&#xd;
function buscarUsuarioLogado() {&#xd;
	return getParametro(&quot;WKUser&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna Nome do Usu�rio&#xd;
 * &#xd;
 * @param user&#xd;
 *            Id do Usu�rio Logado&#xd;
 * &#xd;
 * @returns Nome do Usu�rio&#xd;
 */&#xd;
function buscarNomeUsuario(user) {&#xd;
	var userName = &quot;&quot;;&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;colleaguePK.colleagueId&quot;, user,&#xd;
			user, ConstraintType.MUST);&#xd;
	var dataset = DatasetFactory.getDataset(&quot;colleague&quot;, null, [ c1 ], null);&#xd;
	if (dataset.rowsCount == 1) {&#xd;
		userName = dataset.getValue(0, &quot;colleagueName&quot;);&#xd;
	}&#xd;
	return userName;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna Nome do Usu�rio Logado&#xd;
 * &#xd;
 * @returns Nome do Usu�rio Logado&#xd;
 */&#xd;
function buscarNomeUsuarioLogado() {&#xd;
	return buscarNomeUsuario(buscarUsuarioLogado());&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna Id da Atividade Atual&#xd;
 * &#xd;
 * @returns Id da Atividade Atual&#xd;
 */&#xd;
function buscarAtividadeAtual() {&#xd;
	return getParametro(&quot;WKNumState&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna: &quot;True&quot; para Transferir &quot;False&quot; para Salvar&#xd;
 * &#xd;
 * @returns Tarefa completada&#xd;
 */&#xd;
function buscarTarefaCompletada() {&#xd;
	return getParametro(&quot;WKCompletTask&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Rotina que retorna: O Id da Pr�xima Atividade (destino)&#xd;
 * &#xd;
 * @returns Id da Pr�xima Atividade&#xd;
 */&#xd;
function buscarProximaAtividade() {&#xd;
	return getParametro(&quot;WKNextState&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id da Empresa&#xd;
 * &#xd;
 * @returns Id da Empresa&#xd;
 */&#xd;
function buscarEmpresa() {&#xd;
	return getParametro(&quot;WKCompany&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id da Solicita��o&#xd;
 * &#xd;
 * @returns Id da Solicita��o&#xd;
 */&#xd;
function buscarIdSolicitacao() {&#xd;
	return getParametro(&quot;WKNumProces&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id do Formul�rio do Processo&#xd;
 * &#xd;
 * @returns Id do Formul�rio do Processo&#xd;
 */&#xd;
function buscarForm() {&#xd;
	return getParametro(&quot;WKCardId&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id do Processo&#xd;
 * &#xd;
 * @returns Id do Processo&#xd;
 */&#xd;
function buscarIdProcesso() {&#xd;
	return getParametro(&quot;WKDef&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Buscar Vers�o do Processo&#xd;
 * &#xd;
 * @returns Vers�o do Processo&#xd;
 */&#xd;
function buscarVersaoProcesso() {&#xd;
	return getParametro(&quot;WKVersDef&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o C�digo da defini��o de formul�rio do processo&#xd;
 * &#xd;
 * @returns C�digo da defini��o de formul�rio do processo&#xd;
 */&#xd;
function buscarCodDefFormulario() {&#xd;
	return getParametro(&quot;WKFormId&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna Identificador da Empresa selecionada para Experi�ncias de uso TOTVS&#xd;
 * &#xd;
 * @returns Id da Empresa selecionada para Experi�ncias de uso TOTVS&#xd;
 */&#xd;
function buscarIdEmpresaTotvs() {&#xd;
	return getParametro(&quot;WKIdentityCompany&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna N�mero da atividade atual (verificar se buscarAtividadeAtual() te&#xd;
 * atende)&#xd;
 * &#xd;
 * @returns N�mero da atividade atual&#xd;
 */&#xd;
function buscarNumAtividadeAtual() {&#xd;
	return getParametro(&quot;WKCurrentState&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna C�digo do modo do form&#xd;
 * &#xd;
 * @returns C�digo do modo do form&#xd;
 */&#xd;
function buscarModoFormulario(form) {&#xd;
	return form.getFormMode();&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna dia, m�s e ano atual (verificar se buscarAtividadeAtual() te atende)&#xd;
 * &#xd;
 * @returns N�mero da Data Atual&#xd;
 */&#xd;
&#xd;
function buscarData() {&#xd;
	return new Date();&#xd;
}&#xd;
&#xd;
function buscarDiaAtual() {&#xd;
	return buscarData().getDate().toString();&#xd;
}&#xd;
&#xd;
function buscarMesAtual() {&#xd;
	return (buscarData().getMonth() + 1).toString();&#xd;
}&#xd;
&#xd;
function buscarAnoAtual() {&#xd;
	return buscarData().getFullYear().toString();&#xd;
}&#xd;
&#xd;
function buscarDataAtualSistema() {&#xd;
	return formatarData(buscarDiaAtual(), buscarMesAtual(), buscarAnoAtual());&#xd;
}&#xd;
&#xd;
function formatarData(dia, mes, ano) {&#xd;
	if (dia.length == 1)&#xd;
		dia = 0 + dia;&#xd;
	if (mes.length == 1)&#xd;
		mes = 0 + mes;&#xd;
	return dia + &quot;/&quot; + mes + &quot;/&quot; + ano;&#xd;
}&#xd;
&#xd;
function retiraEspacoTag() {&#xd;
	var retirarEspaco = hAPI.getCardValue(&quot;solicitante&quot;);&#xd;
	return retirarEspaco.replace(&quot; &quot;, &quot;_&quot;);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>buscaAlcadaMatMed</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function buscaAlcadaMatMed(filialSolic){&#xd;
	&#xd;
	var usuarioFarmacia;&#xd;
	var usuarioClinica;&#xd;
	var valorClinica;&#xd;
	var usuarioCompras;&#xd;
	var valorCompras;&#xd;
	var usuarioDiretores;&#xd;
	var valorDiretores;&#xd;
	var existeAlcada = false;&#xd;
	var filialparam = new String(filialSolic);&#xd;
	var filialFiltro = new Array(filialparam); &#xd;
	var datasetMatMed = DatasetFactory.getDataset(&quot;ds_alcadas_matmed_2&quot;, filialFiltro, null, null);&#xd;
		&#xd;
	if (datasetMatMed.rowsCount &gt; 0)&#xd;
		{&#xd;
			existeAlcada     = true;		&#xd;
			usuarioFarmacia  = datasetMatMed.getValue(0, &quot;usuarioFarmacia&quot;);&#xd;
			usuarioClinica   = datasetMatMed.getValue(0, &quot;usuarioClinica&quot;);&#xd;
			valorClinica     = datasetMatMed.getValue(0, &quot;valorClinica&quot;);&#xd;
			usuarioCompras   = datasetMatMed.getValue(0, &quot;usuarioCompras&quot;);&#xd;
			valorCompras     = datasetMatMed.getValue(0, &quot;valorCompras&quot;);&#xd;
			usuarioDiretores = datasetMatMed.getValue(0, &quot;usuarioDiretores&quot;);&#xd;
			valorDiretores   = datasetMatMed.getValue(0, &quot;valorDiretores&quot;);&#xd;
		}&#xd;
	else&#xd;
		{&#xd;
			existeAlcada     = false;&#xd;
			usuarioFarmacia  = &quot;&quot;;&#xd;
			usuarioClinica   = &quot;&quot;;&#xd;
			valorClinica     = &quot;&quot;;&#xd;
			usuarioCompras   = &quot;&quot;;&#xd;
			valorCompras     = &quot;&quot;;&#xd;
			usuarioDiretores = &quot;&quot;;&#xd;
			valorDiretores   = &quot;&quot;;&#xd;
		}&#xd;
	&#xd;
	var alcadasMatMed = {&quot;retornoAlcada&quot;:    existeAlcada,&#xd;
			             &quot;usuarioFarmacia&quot;:  usuarioFarmacia,&#xd;
						 &quot;usuarioClinica&quot;:   usuarioClinica,&#xd;
			   			 &quot;valorClinica&quot;:     valorClinica,&#xd;
			   			 &quot;usuarioCompras&quot;:   usuarioCompras,&#xd;
			   			 &quot;valorCompras&quot;:     valorCompras,&#xd;
			   			 &quot;usuarioDiretores&quot;: usuarioDiretores,&#xd;
			   			 &quot;valorDiretores&quot;:   valorDiretores};&#xd;
	return alcadasMatMed;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_inicSolic-1.0.0</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var objInicSolic = &#xd;
&#xd;
&#xd;
function(company ,processId, destinyActivity, colleagueSender, obs, completeTask, managerMode, threadSequence){&#xd;
	&#xd;
	/*&#xd;
	 * VariÃ¡veis de acesso ao Web Service&#xd;
	 */&#xd;
	var companyWS;&#xd;
	var usuarioPublicaDoc = &quot;&quot;;&#xd;
	var senhaPublicaDoc = &quot;&quot;;&#xd;
	var linkWorkflowEngineServiceLocator = &quot;&quot;;&#xd;
	var linkTokenServiceLocator = &quot;&quot;;&#xd;
	&#xd;
	/*&#xd;
	 * VariÃ¡veis do WebService&#xd;
	 */&#xd;
	var workflowEngineServiceProvider = &apos;&apos;;&#xd;
	var workflowEngineServiceLocator = &apos;&apos;;&#xd;
	var workflowEngineService = &apos;&apos;;&#xd;
	var tokenServiceProvider = &apos;&apos;;&#xd;
	var tokenServiceLocator = &apos;&apos;;&#xd;
	var tokenService = &apos;&apos;;&#xd;
	var tokenGerado = &apos;&apos;;&#xd;
	var attachmets;&#xd;
	var apointments;&#xd;
	var cardData;&#xd;
	var colleagueRecipient;&#xd;
	var processId;&#xd;
	var destinyActivity;&#xd;
	var obs;&#xd;
	var colleagueSender;&#xd;
	var completeTask;&#xd;
	var managerMode;&#xd;
	var threadSequence;&#xd;
	var atividadeDestino;&#xd;
	var listFields;&#xd;
	&#xd;
	&#xd;
	/*&#xd;
	 * MÃ©todos do Web Service&#xd;
	 */&#xd;
	var iniciarWorkflowEngineService = function() {&#xd;
		workflowEngineServiceProvider = ServiceManager&#xd;
				.getServiceInstance(&quot;WorkflowService&quot;);&#xd;
	};&#xd;
	var iniciarServiceLocator = function() {&#xd;
		workflowEngineServiceLocator = workflowEngineServiceProvider&#xd;
				.instantiate(linkWorkflowEngineServiceLocator);&#xd;
	};&#xd;
	var iniciarPortas = function() {&#xd;
		workflowEngineService = workflowEngineServiceLocator.getWorkflowEngineServicePort();&#xd;
	};&#xd;
	&#xd;
	var getToken = function(){&#xd;
		iniciarTokenService();&#xd;
		iniciarServiceLocatorToken();&#xd;
		iniciarPortasToken();&#xd;
		instantiateToken();&#xd;
	};&#xd;
	&#xd;
	var iniciarTokenService = function() {&#xd;
		tokenServiceProvider = ServiceManager&#xd;
				.getServiceInstance(&quot;ECMTokenService&quot;);&#xd;
	};&#xd;
	&#xd;
	var iniciarServiceLocatorToken = function() {&#xd;
		tokenServiceLocator = tokenServiceProvider&#xd;
				.instantiate(linkTokenServiceLocator);&#xd;
	};&#xd;
	&#xd;
	var iniciarPortasToken = function() {&#xd;
		tokenService = tokenServiceLocator.getTokenServicePort();&#xd;
	};&#xd;
	&#xd;
	var instantiateToken = function (){&#xd;
		tokenGerado = tokenService.getToken(usuarioPublicaDoc,senhaPublicaDoc);&#xd;
	};&#xd;
&#xd;
	var createAttachments = function(){&#xd;
		attachmets = workflowEngineServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ProcessAttachmentDtoArray&quot;);&#xd;
	};&#xd;
	&#xd;
	var createAppointments = function(){&#xd;
		apointments = workflowEngineServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ProcessTaskAppointmentDtoArray&quot;);&#xd;
	};&#xd;
	&#xd;
	var createColleagueRecipient = function(){&#xd;
		colleagueRecipient = workflowEngineServiceProvider.instantiate(&quot;net.java.dev.jaxb.array.StringArray&quot;);&#xd;
	};&#xd;
	&#xd;
	var createCardData = function(){&#xd;
		cardData = workflowEngineServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDtoArray&quot;);&#xd;
		cardData.setItem(listFields);&#xd;
	};&#xd;
	&#xd;
	var setParametros = function(companyRef , processIdRef, destinyActivityRef ,colleagueSenderRef, obsRef, completeTaskRef,managerModeRef, threadSequenceRef){&#xd;
		companyWS = companyRef;&#xd;
		processId = processIdRef;&#xd;
		destinyActivity = destinyActivityRef;&#xd;
		colleagueSender = colleagueSenderRef;&#xd;
		obs = obsRef;&#xd;
		completeTask = completeTaskRef;&#xd;
		managerMode = managerModeRef;&#xd;
		threadSequence = threadSequenceRef;&#xd;
		listFields = new Array();&#xd;
		iniciarWorkflowEngineService();&#xd;
		iniciarServiceLocator();&#xd;
		iniciarPortas();&#xd;
		createColleagueRecipient();&#xd;
	};&#xd;
	&#xd;
	this.setColleagueRecipient = function(colleagueEnrollment){&#xd;
		var userAux = new Array(colleagueEnrollment);&#xd;
		colleagueRecipient.setItem(userAux);&#xd;
	};&#xd;
	&#xd;
	this.setCardData = function(campo,valor){&#xd;
		var keyValueDto = workflowEngineServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
		keyValueDto.setKey(campo);&#xd;
		keyValueDto.setValue(valor);&#xd;
		listFields.push(keyValueDto);&#xd;
		&#xd;
	};&#xd;
	&#xd;
	&#xd;
	&#xd;
	this.inicProcess = function(){&#xd;
		createAppointments();&#xd;
		createAttachments();&#xd;
		createCardData();&#xd;
		log.info(&quot;Param user &quot; + usuarioPublicaDoc + &quot; senha &quot; + senhaPublicaDoc + &quot; company &quot; + companyWS + &quot; process &quot; + processId + &quot; atividade &quot; + destinyActivity + &quot; colleagueRec &quot; + colleagueRecipient + &quot; observa &quot; + obs + &quot; colleagueSed &quot; + colleagueSender + &quot; completeTask &quot; + completeTask + &quot; attach &quot; + attachmets + &quot; cardData &quot; + cardData + &quot; appoin &quot; + apointments + &quot; manager &quot; + managerMode);&#xd;
		var keyValueDtoArrayResult = workflowEngineService.startProcessClassic(usuarioPublicaDoc, senhaPublicaDoc, companyWS, processId, destinyActivity ,colleagueRecipient, obs, colleagueSender, completeTask, attachmets, cardData, apointments, managerMode);&#xd;
		&#xd;
	};&#xd;
	&#xd;
	var setConfigServer = function() {&#xd;
		var config = new objDataSet(&quot;configServer&quot;);&#xd;
		config.buscar();&#xd;
		var configServer = config.getDados();&#xd;
&#xd;
		try {&#xd;
			for ( var posValues in configServer.values) {&#xd;
				usuarioPublicaDoc = configServer.getValue(posValues,&#xd;
						&quot;usuarioPublicaDoc&quot;);&#xd;
				senhaPublicaDoc = configServer.getValue(posValues,&#xd;
						&quot;senhaPublicaDoc&quot;);&#xd;
				linkTokenServiceLocator = configServer.getValue(posValues,&#xd;
				&quot;tokenServiceLocator&quot;);&#xd;
				&#xd;
				linkWorkflowEngineServiceLocator = configServer.getValue(posValues,&#xd;
				&quot;workflowEngineServiceLocator&quot;);&#xd;
&#xd;
				erroConfigServer = false;&#xd;
			}&#xd;
		} catch (e) {&#xd;
			throw &apos;Falha ao utilizar o objInicSolic, n~ça encontrado dataSet configServer. CÃ³digo Erro: 40.&apos;;&#xd;
		}&#xd;
	};&#xd;
	&#xd;
	/**&#xd;
	 * Construtor&#xd;
	 * &#xd;
	 * @author rodrigo.neto&#xd;
	 */&#xd;
	__construct = function(company, processId, destinyActivity, colleagueSender, obs ,completeTask, managerMode, threadSequence) {&#xd;
		setConfigServer();&#xd;
		getToken();&#xd;
		setParametros(company, processId, destinyActivity, colleagueSender, obs, completeTask, managerMode, threadSequence);&#xd;
	}(company, processId, destinyActivity, colleagueSender, obs, completeTask, managerMode, threadSequence);&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_objAnexo_1-2-0</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
 * Objeto com funcionalidade de gerenciar o Nome do Diret�rio&#xd;
 * &#xd;
 * @param type&#xd;
 *            1-nomeDiretorio informado, espera string; 2-Ano/Mes atual, n�o&#xd;
 *            necess�rio informar nomeDiretorios&#xd;
 * @param nomeDiretorio&#xd;
 *            Informar a string do nome do diret�rio, necess�rio type ser 1&#xd;
 */&#xd;
 var objParametro = function(type, nomeDiretorio) {&#xd;
	var tipo = &apos;&apos;;&#xd;
	var nomePasta = &apos;&apos;;&#xd;
	/**&#xd;
	 * Retonar o Tipo&#xd;
	 * &#xd;
	 * @returns tipo Retonar o Tipo&#xd;
	 */&#xd;
	this.getTipo = function() {&#xd;
		return tipo;&#xd;
	};&#xd;
	/**&#xd;
	 * Retonar o nomePasta&#xd;
	 * &#xd;
	 * @returns nomePasta Retonar o nomePasta&#xd;
	 */&#xd;
	this.getNomePasta = function() {&#xd;
		return nomePasta;&#xd;
	};&#xd;
	/**&#xd;
	 * Retornar o Tipo&#xd;
	 * &#xd;
	 * @returns tipo Retornar o tipo&#xd;
	 */&#xd;
	this.getTipo = function() {&#xd;
		return tipo;&#xd;
	};&#xd;
	/**&#xd;
	 * Cadastrar o Parametro de nome de Pasta&#xd;
	 * &#xd;
	 * @param type&#xd;
	 *            1-nomeDiretorio informado, espera string; 2-Ano/Mes atual, n�o&#xd;
	 *            necess�rio informar nomeDiretorios&#xd;
	 * @param nomeDiretorio&#xd;
	 *            Informar a string do nome do diret�rio, necess�rio type ser 1&#xd;
	 */&#xd;
	var setPasta = function(type, nomeDiretorio) {&#xd;
		/*&#xd;
		 * type = 1 (Espera string no nomeDiretorio)&#xd;
		 */&#xd;
		if (type == 1) {&#xd;
			if (nomeDiretorio == &apos;&apos;) {&#xd;
				throw &apos;Falha ao utilizar o objAnexo.setParametro, necessário string para nomeDiretorio.&apos;;&#xd;
			}&#xd;
&#xd;
			tipo = type;&#xd;
			nomePasta = nomeDiretorio;&#xd;
		}&#xd;
		/*&#xd;
		 * type = 2 (Gera automaticamente o nomeDiretorio com Ano/Mes - YYYY/mm)&#xd;
		 */&#xd;
		else if (type == 2) {&#xd;
			tipo = type;&#xd;
&#xd;
			nomePasta = getAnoMes();&#xd;
		} else {&#xd;
			throw &apos;Falha ao utilizar o objAnexo.setParametro, necessário type válido.&apos;;&#xd;
		}&#xd;
&#xd;
	};&#xd;
	var getAnoMes = function() {&#xd;
		var dataAtual = new Date();&#xd;
		var mes = (&apos;0&apos; + (dataAtual.getMonth() + 1)).slice(-2);&#xd;
		var ano = dataAtual.getFullYear();&#xd;
		var mesAno = ano + &quot;/&quot; + mes;&#xd;
&#xd;
		return mesAno;&#xd;
	};&#xd;
	var __construct = function(type, nomeDiretorio) {&#xd;
		setPasta(type, nomeDiretorio);&#xd;
	}(type, nomeDiretorio);&#xd;
};&#xd;
&#xd;
/**&#xd;
 * Objeto criado para efetuar a publica��o de Documentos e Anexos&#xd;
 */&#xd;
var objAnexo = function(diretorioRaiz) {&#xd;
	/*&#xd;
	 * Vari�veis de acesso ao Web Service&#xd;
	 */&#xd;
	var usuarioPublicaDoc = &quot;&quot;;&#xd;
	var senhaPublicaDoc = &quot;&quot;;&#xd;
	var linkFolderServiceLocator = &quot;&quot;;&#xd;
	var linkDocumentServiceLocator = &quot;&quot;;&#xd;
&#xd;
	/*&#xd;
	 * Vari�veis de Propriedade do Anexo&#xd;
	 */&#xd;
	var comentario = &quot;Teste&quot;;&#xd;
	var palavraschave = &quot;Teste&quot;;&#xd;
	var desc_versaorevisao = &quot;Versão Inicial&quot;;&#xd;
	var versaoRevisao = &quot;1.000&quot;;&#xd;
	var dtValido = &quot;14/08/2014&quot;;&#xd;
	var doc_expira = false;&#xd;
	var dtExpira = &quot;14/08/2014&quot;;&#xd;
	var tipo_docto_H = &quot;Contratos&quot;;&#xd;
	var notificaEMail = false;&#xd;
	var permiteDownload = true;&#xd;
	var existeNivel = false;&#xd;
	var idPastaCriada = 0;&#xd;
	var assunto_H = &quot;1&quot;;&#xd;
	var usuarioLogado = buscarUsuarioLogado();&#xd;
	var empresa = buscarEmpresa();&#xd;
	var idSolicitacao = buscarIdSolicitacao();&#xd;
&#xd;
	/*&#xd;
	 * Vari�veis do WebService&#xd;
	 */&#xd;
	var folderServiceProvider = &apos;&apos;;&#xd;
	var folderServiceLocator = &apos;&apos;;&#xd;
	var folderService = &apos;&apos;;&#xd;
	var listDiretorios = [];&#xd;
	var pastaRaiz = &apos;&apos;;&#xd;
	var pastaPublicacao = &apos;&apos;;&#xd;
&#xd;
	/*&#xd;
	 * M�todos do Web Service&#xd;
	 */&#xd;
	var iniciarFolderService = function() {&#xd;
		folderServiceProvider = ServiceManager&#xd;
				.getServiceInstance(&quot;FolderService&quot;);&#xd;
	};&#xd;
	var iniciarServiceLocator = function() {&#xd;
		folderServiceLocator = folderServiceProvider&#xd;
				.instantiate(linkFolderServiceLocator);&#xd;
	};&#xd;
	var iniciarPortas = function() {&#xd;
		folderService = folderServiceLocator.getFolderServicePort();&#xd;
	};&#xd;
	var buscarPastaPublicacao = function() {&#xd;
		if (!checkListDiretorios()) {&#xd;
			throw &apos;Falha ao utilizar a publicação de Documentos, necessário cadastrar paramentros usando objAnexo.setParametro&apos;;&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		if (!checkPastaRaiz()) {&#xd;
			throw &apos;Falha ao utilizar objAnexo sem informar Pasta Pai para publicação do anexo. Código Erro: 30.&apos;;&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		var folders = &apos;&apos;;&#xd;
		var idPasta = &apos;&apos;;&#xd;
&#xd;
		var idPastaCriadaNova = &apos;&apos;;&#xd;
		var nome_pasta = &apos;&apos;;&#xd;
		var nome_pasta_publicacao = &apos;&apos;;&#xd;
&#xd;
		// for ( var x = 0; x &lt; listDiretorios.length; x++) {&#xd;
		for ( var x in listDiretorios) {&#xd;
			idPasta = (idPastaCriada != 0) ? idPastaCriada : pastaRaiz;&#xd;
			folders = folderService.getSubFolders(usuarioPublicaDoc,&#xd;
					senhaPublicaDoc, empresa, idPasta, usuarioLogado);&#xd;
&#xd;
			if (folders.getItem() != null) {&#xd;
				listDiretorios: for ( var y = 0; y &lt; folders.getItem().length; y++) {&#xd;
					nome_pasta = &apos;&apos;;&#xd;
					nome_pasta_publicacao = &apos;&apos;;&#xd;
&#xd;
					var pasta = folders.getItem(y);&#xd;
					nome_pasta = pasta.getDocumentDescription();&#xd;
&#xd;
					if (nome_pasta != listDiretorios[x].getNomePasta()) {&#xd;
						existeNivel = false;&#xd;
						nome_pasta_publicacao = listDiretorios[x]&#xd;
								.getNomePasta();&#xd;
					} else {&#xd;
						existeNivel = true;&#xd;
						idPastaCriada = pasta.getDocumentId();&#xd;
						break listDiretorios;&#xd;
					}&#xd;
				}&#xd;
			} else {&#xd;
				nome_pasta_publicacao = listDiretorios[x].getNomePasta();&#xd;
			}&#xd;
&#xd;
			if (existeNivel == false) {&#xd;
				idPastaCriadaNova = folderService.createSimpleFolder(&#xd;
						usuarioPublicaDoc, senhaPublicaDoc, java.lang&#xd;
								.Integer(empresa), java.lang.Integer(idPasta),&#xd;
						usuarioLogado, nome_pasta_publicacao);&#xd;
				idPastaCriada = idPastaCriadaNova.getItem(0).getDocumentId();&#xd;
			}&#xd;
		}&#xd;
&#xd;
		return idPastaCriada;&#xd;
	};&#xd;
	var checkPastaRaiz = function() {&#xd;
		return (pastaRaiz != &apos;&apos;);&#xd;
	};&#xd;
	var checkListDiretorios = function() {&#xd;
		try {&#xd;
			if (typeof listDiretorios[0].getTipo()) {&#xd;
				return true;&#xd;
			}&#xd;
		} catch (e) {&#xd;
			return false;&#xd;
		}&#xd;
	};&#xd;
	var buscarAnexos = function() {&#xd;
		// var pastaPublicacao = idPastaCriada;&#xd;
		// pastaPublicacao = buscarPastaPublicacao_antigo();&#xd;
		pastaPublicacao = buscarPastaPublicacao();&#xd;
&#xd;
		if (!pastaPublicacao) {&#xd;
			throw &apos;Falha ao selecionar o diret�rio para publicação do anexo. Código Erro: 10.&apos;;&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		var cal = java.util.Calendar.getInstance();&#xd;
		if (dtExpira == &quot;&quot;) {&#xd;
			cal.add(java.util.Calendar.YEAR, 1);&#xd;
		} else {&#xd;
			cal.setTime(new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;)&#xd;
					.parse(dtExpira));&#xd;
		}&#xd;
		dtExpira = cal;&#xd;
&#xd;
		var cal = java.util.Calendar.getInstance();&#xd;
		cal.setTime(new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;)&#xd;
				.parse(dtValido));&#xd;
		dtValido = cal;&#xd;
		var processConstraint = DatasetFactory.createConstraint(&#xd;
				&quot;processAttachmentPK.processInstanceId&quot;, idSolicitacao,&#xd;
				idSolicitacao, ConstraintType.MUST);&#xd;
		var companyConstraint = DatasetFactory.createConstraint(&#xd;
				&quot;processAttachmentPK.companyId&quot;, empresa, empresa,&#xd;
				ConstraintType.MUST);&#xd;
		var attachFields = new Array(&quot;documentId&quot;,&#xd;
				&quot;processAttachmentPK.attachmentSequence&quot;, &quot;version&quot;);&#xd;
		var attachConstList = new Array(processConstraint, companyConstraint);&#xd;
&#xd;
		var attachDataset = DatasetFactory.getDataset(&quot;processAttachment&quot;,&#xd;
				attachFields, attachConstList, new Array(&#xd;
						&quot;processAttachmentPK.attachmentSequence&quot;));&#xd;
&#xd;
		publicarAnexos(attachDataset);&#xd;
	};&#xd;
	var publicarAnexos = function(attachDataset) {&#xd;
		var fichario = &apos;&apos;;&#xd;
&#xd;
		for ( var i = 0; i &lt; attachDataset.rowsCount; i++) {&#xd;
			if (attachDataset.getValue(i,&#xd;
					&quot;processAttachmentPK.attachmentSequence&quot;) == 1) {&#xd;
				fichario = attachDataset.getValue(i, &quot;documentId&quot;);&#xd;
			}&#xd;
&#xd;
			if (attachDataset.getValue(i, &quot;documentId&quot;) != fichario) {&#xd;
				var documentServiceProvider = ServiceManager&#xd;
						.getServiceInstance(&quot;DocumentService&quot;);&#xd;
				var documentServiceLocator = documentServiceProvider&#xd;
						.instantiate(linkDocumentServiceLocator);&#xd;
				var documentService = documentServiceLocator&#xd;
						.getDocumentServicePort();&#xd;
				var document = documentService.getDocumentVersion(&#xd;
						usuarioPublicaDoc, senhaPublicaDoc, empresa,&#xd;
						attachDataset.getValue(i, &quot;documentId&quot;), attachDataset&#xd;
								.getValue(i, &quot;version&quot;), usuarioLogado);&#xd;
				var doc = document.getItem(0);&#xd;
&#xd;
				// Documento novo, seta o documentId e version para 0 para n�o&#xd;
				// criar duplicado com o mesmo n�mero de documento&#xd;
				doc.setDocumentId(0);&#xd;
				doc.setVersion(0);&#xd;
				doc.setParentDocumentId(new java.lang.Integer(pastaPublicacao));&#xd;
&#xd;
				// doc.setDocumentDescription(codificacao +&#xd;
				// hAPI.getCardValue(&quot;textDescricao&quot;));&#xd;
				doc.setAdditionalComments(comentario);&#xd;
				doc.setKeyWord(palavraschave);&#xd;
				doc.setVersionDescription(desc_versaorevisao);&#xd;
				doc.setDocumentTypeId(tipo_docto_H);&#xd;
				doc.setDownloadEnabled(permiteDownload);&#xd;
				doc.setExpires(doc_expira);&#xd;
				doc.setExpirationDate(dtExpira);&#xd;
				doc.setUserNotify(notificaEMail);&#xd;
				doc.setValidationStartDate(dtValido);&#xd;
				doc.setTopicId(new java.lang.Integer(assunto_H));&#xd;
				doc.setPublisherId(usuarioLogado);&#xd;
				doc.setColleagueId(usuarioLogado);&#xd;
				doc.setInheritSecurity(true);&#xd;
				var pos = versaoRevisao.indexOf(&quot;.&quot;);&#xd;
				doc.setVersion(new java.lang.Integer(versaoRevisao.substring(0,&#xd;
						pos)&#xd;
						+ versaoRevisao.substring(pos + 1)));&#xd;
&#xd;
				doc.setVersionOption(&quot;0&quot;);&#xd;
&#xd;
				doc.setVolumeId(&quot;Default&quot;);&#xd;
				try {&#xd;
					doc.setUpdateIsoProperties(false);&#xd;
				} catch (e) {&#xd;
				}&#xd;
				document.setItem(0, doc);&#xd;
&#xd;
				var fContent = documentService.getDocumentContent(&#xd;
						usuarioPublicaDoc, senhaPublicaDoc, empresa,&#xd;
						attachDataset.getValue(i, &quot;documentId&quot;), usuarioLogado,&#xd;
						attachDataset.getValue(i, &quot;version&quot;), doc&#xd;
								.getPhisicalFile());&#xd;
&#xd;
				// Se��o para atachar o arquivo ao documento&#xd;
				var attach = documentServiceProvider&#xd;
						.instantiate(&quot;com.totvs.technology.ecm.dm.ws.Attachment&quot;);&#xd;
				attach.setFileName(doc.getPhisicalFile());&#xd;
				attach.setFilecontent(fContent);&#xd;
				attach.setPrincipal(true);&#xd;
&#xd;
				var listAttach = new Array();&#xd;
				listAttach[0] = attach;&#xd;
				attachArray = documentServiceProvider&#xd;
						.instantiate(&quot;com.totvs.technology.ecm.dm.ws.AttachmentArray&quot;);&#xd;
				attachArray.setItem(listAttach);&#xd;
&#xd;
				var relatedArr = documentServiceProvider&#xd;
						.instantiate(&quot;com.totvs.technology.ecm.dm.ws.RelatedDocumentDtoArray&quot;);&#xd;
				// Cria o documento no Webdesk&#xd;
				var createDoc = documentService.createDocument(&#xd;
						usuarioPublicaDoc, senhaPublicaDoc, empresa, document,&#xd;
						attachArray, null, null, relatedArr);&#xd;
&#xd;
				createDoc.getItem(0);&#xd;
			}&#xd;
		}&#xd;
	};&#xd;
	var setPastaRaiz = function(diretorioRaiz) {&#xd;
		if (diretorioRaiz == &apos;&apos; || diretorioRaiz == undefined) {&#xd;
			throw &apos;Falha ao utilizar o método objAnexo sem informar o Diretório Raiz. Código Erro: 20.&apos;;&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		pastaRaiz = diretorioRaiz;&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para cadastro de Parametros, poder� ser registrado N parametros e&#xd;
	 * ser� efetuado a publica��o a ordem respectivamente cadastrada.&#xd;
	 * &#xd;
	 * @param type&#xd;
	 *            1-nomeDiretorio informado, espera string; 2-Ano/Mes atual, n�o&#xd;
	 *            necess�rio informar nomeDiretorios&#xd;
	 * @param nomeDiretorio&#xd;
	 *            Informar a string do nome do diret�rio, necess�rio type ser 1&#xd;
	 */&#xd;
	this.setParametro = function(type, nomeDiretorio) {&#xd;
		listDiretorios.push(new objParametro(type, nomeDiretorio));&#xd;
	};&#xd;
	this.publicar = function() {&#xd;
		iniciarFolderService();&#xd;
		iniciarServiceLocator();&#xd;
		iniciarPortas();&#xd;
		buscarAnexos();&#xd;
	};&#xd;
	var setConfigServer = function() {&#xd;
		var config = new objDataSet(&quot;configServer&quot;);&#xd;
		config.buscar();&#xd;
		var configServer = config.getDados();&#xd;
&#xd;
		try {&#xd;
			for ( var posValues in configServer.values) {&#xd;
				usuarioPublicaDoc = configServer.getValue(posValues,&#xd;
						&quot;usuarioPublicaDoc&quot;);&#xd;
				senhaPublicaDoc = configServer.getValue(posValues,&#xd;
						&quot;senhaPublicaDoc&quot;);&#xd;
				linkFolderServiceLocator = configServer.getValue(posValues,&#xd;
						&quot;folderServiceLocator&quot;);&#xd;
				linkDocumentServiceLocator = configServer.getValue(posValues,&#xd;
						&quot;documentServiceLocator&quot;);&#xd;
&#xd;
				erroConfigServer = false;&#xd;
			}&#xd;
		} catch (e) {&#xd;
			throw &apos;Falha ao utilizar o objAnexo, não encontrado dataSet configServer. Código Erro: 40.&apos;;&#xd;
		}&#xd;
	}&#xd;
	var __construct = function(diretorioRaiz) {&#xd;
		// listDiretorios = parametros;&#xd;
		setPastaRaiz(diretorioRaiz);&#xd;
		setConfigServer();&#xd;
	}(diretorioRaiz);&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_dataSet_1-5-0</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
 * Objeto para efetuar a consulta de DataSet&apos;s&#xd;
 * &#xd;
 * @param nomeDataSet&#xd;
 *            Informar o Nome do DataSet que deseja efetuar a busca&#xd;
 * @author sergio.santos&#xd;
 */&#xd;
 var objDataSet = function(nomeDataSet) {&#xd;
	var metodoFiltroAnd = &apos;&apos;;&#xd;
	var metodoFiltroOr = &apos;&apos;;&#xd;
	var nameDataSet = &apos;&apos;;&#xd;
	var filtros = [];&#xd;
	var ordenacao = [];&#xd;
	var campos = [];&#xd;
	var dados = &apos;&apos;;&#xd;
&#xd;
	var setMetodoFiltro = function() {&#xd;
		metodoFiltroAnd = ConstraintType.MUST;&#xd;
		metodoFiltroOr = ConstraintType.SHOULD;&#xd;
	};&#xd;
	var setNameDataSet = function(nomeDataSet) {&#xd;
		if (nomeDataSet == &apos;&apos;) {&#xd;
			throw &apos;Nome do dataSet não informado.&apos;;&#xd;
		}&#xd;
&#xd;
		nameDataSet = nomeDataSet;&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo para cadastrar filtro na busca do DataSet&#xd;
	 * &#xd;
	 * @param nomeColuna&#xd;
	 *            Informar a string com o Nome da coluna que ser? usado para&#xd;
	 *            filtro&#xd;
	 * @param filtroInicio&#xd;
	 *            Informar o valor que seja filtrar, se omitido o filtroFim ser?&#xd;
	 *            filtrado com valor ?nico&#xd;
	 * @param filtroFim&#xd;
	 *            Informar o valor que seja filtrar como fim de&#xd;
	 *            intervalo/between, n?o obrigat?rio, caso deseja filtro com&#xd;
	 *            valor ?nico. Exemplo: carro = 1&#xd;
	 * @param metodoFiltroAnd&#xd;
	 *            Informar True ou False, em caso de omiss?o ser? conderado True&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.setFiltro = function(nomeColuna, filtroInicio, filtroFim, condicaoAnd) {&#xd;
		if (nomeColuna == &apos;&apos;) {&#xd;
			throw &apos;Nome da Coluna não informado.&apos;;&#xd;
		}&#xd;
&#xd;
		/*&#xd;
		 * Em caso de n?o ser informado o metodo do Filtro ser? atribuido a&#xd;
		 * condi??o AND&#xd;
		 */&#xd;
		var metodoFiltro = (condicaoAnd || condicaoAnd == null) ? metodoFiltroAnd&#xd;
				: metodoFiltroOr;&#xd;
&#xd;
		if (filtroFim == null &amp;&amp; filtroInicio != null) {&#xd;
			filtroFim = filtroInicio;&#xd;
		}&#xd;
&#xd;
		filtros.push(DatasetFactory.createConstraint(nomeColuna, filtroInicio,&#xd;
				filtroFim, metodoFiltro));&#xd;
	};&#xd;
	var clearFiltro = function() {&#xd;
		filtros = [];&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo para cadastrar a ordem desejada&#xd;
	 * &#xd;
	 * @param order&#xd;
	 *            Informar a ordem desejada&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.setOrdenacao = function(order) {&#xd;
		if (order == &apos;&apos;) {&#xd;
			throw &apos;Order não informado.&apos;;&#xd;
		}&#xd;
&#xd;
		ordenacao.push(order);&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo para cadastrar os campos que deseja exibi??o&#xd;
	 * &#xd;
	 * @param nomeCampo&#xd;
	 *            Informar o Nome do Campo&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.setCampo = function(nomeCampo) {&#xd;
		/*&#xd;
		 * if (nomeCampo == &apos;&apos;) { throw &apos;Nome do Campo n?o informado.&apos;; }&#xd;
		 */&#xd;
&#xd;
		campos.push(nomeCampo);&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo para buscar os dados do DataSet&#xd;
	 * &#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.buscar = function() {&#xd;
		/*&#xd;
		 * campos = null; filtros = null;&#xd;
		 */&#xd;
		ordenacao = null;&#xd;
&#xd;
		dados = DatasetFactory.getDataset(nameDataSet, campos, filtros,&#xd;
				ordenacao);&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo para filtrar os dados do DataSet no &quot;Server Client&quot; conforme&#xd;
	 * solicitado no setFilter, como o sistema n?o est? filtrando nativamente&#xd;
	 * este m?todo faz o filtro ap?s o retorno completo do dataSet.&#xd;
	 * &#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.filtrarBusca = function() {&#xd;
		this.buscar();&#xd;
&#xd;
		var novoDados = [];&#xd;
		var nomeCampos = [];&#xd;
		var valorDataSet = &apos;&apos;;&#xd;
		var nomeCampoFiltrado = &apos;&apos;;&#xd;
&#xd;
		if (filtros.length &gt; 0) {&#xd;
			for ( var i in filtros) {&#xd;
				if (filtros[i]._type == 1) {&#xd;
					nomeCampoFiltrado = filtros[i]._field;&#xd;
&#xd;
					for ( var posValues in dados.values) {&#xd;
						valorDataSet = eval(&quot;dados.values[posValues].&quot;&#xd;
								+ nomeCampoFiltrado);&#xd;
&#xd;
						if (filtros[i]._initialValue == filtros[i]._finalValue&#xd;
								&amp;&amp; valorDataSet == filtros[i]._initialValue) {&#xd;
							novoDados.push(dados.values[posValues]);&#xd;
						} else if (valorDataSet &gt;= filtros[i]._initialValue&#xd;
								&amp;&amp; valorDataSet &lt;= filtros[i]._finalValue) {&#xd;
							novoDados.push(dados.values[posValues]);&#xd;
						}&#xd;
					}&#xd;
				}&#xd;
			}&#xd;
&#xd;
			dados.values = novoDados;&#xd;
		}&#xd;
&#xd;
		return dados;&#xd;
	};&#xd;
	/**&#xd;
	 * Metodo de uso interno para retirar os campos que não foram passados como&#xd;
	 * parametro&#xd;
	 */&#xd;
	this.filtrarCampos = function() {&#xd;
&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo de uso interno para retirar os campos do filtro&#xd;
	 * &#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	popularDadosFiltrados = function() {&#xd;
&#xd;
		return;&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo para buscar o valor de um campo&#xd;
	 * &#xd;
	 * @param campoBuscar&#xd;
	 *            string com nome do campo que ir? informar o valor do filtro&#xd;
	 * @param valorBuscar&#xd;
	 *            string com o valor do campo que deseja filtrar&#xd;
	 * @param campoRetorno&#xd;
	 *            string com o nome do campo que deseja o retorno&#xd;
	 * @returns string com valor do campo&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.buscarCampo = function(campoBuscar, valorBuscar, campoRetorno) {&#xd;
		var encontrado = false;&#xd;
		var valorRetornado = &apos;&apos;;&#xd;
		this.setCampo(campoRetorno);&#xd;
&#xd;
		this.buscar();&#xd;
&#xd;
		dadosLoop: for ( var posValues in dados.values) {&#xd;
			if (dados.getValue(posValues, campoBuscar) == valorBuscar) {&#xd;
				valorRetornado = dados.getValue(posValues, campoRetorno);&#xd;
				encontrado = true;&#xd;
				break dadosLoop;&#xd;
			}&#xd;
		}&#xd;
&#xd;
		if (!encontrado) {&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		return valorRetornado;&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo para verificar se valor informado existe no dataSet. Este m?todo&#xd;
	 * limpa todo o filtro de dataSet e inicia novamente em caso de chamar mais&#xd;
	 * de uma vez o mesmo objeto.&#xd;
	 * &#xd;
	 * @param nomeCampo&#xd;
	 *            Informar o nome do campo que deseja verificar&#xd;
	 * @param valorCampoArray&#xd;
	 *            Informar um array com o valor ou valores de campos que dejesa&#xd;
	 *            que seja encontrado, qualquer identifica??o ser? retornado&#xd;
	 *            true&#xd;
	 * @returns Ser? retornado se o campo informado foi localizado na lista do&#xd;
	 *          dataSet&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.isExists = function(nomeCampo, valorCampoArray) {&#xd;
		clearFiltro();&#xd;
&#xd;
		var existe = false;&#xd;
&#xd;
		for ( var posCampo in valorCampoArray) {&#xd;
			this.setFiltro(nomeCampo, valorCampoArray[posCampo],&#xd;
					valorCampoArray[posCampo], false);&#xd;
		}&#xd;
&#xd;
		this.buscar();&#xd;
&#xd;
		dadosLoop: for ( var posValues in dados.values) {&#xd;
			for ( var posCampo in valorCampoArray) {&#xd;
				if (dados.getValue(posValues, nomeCampo) == valorCampoArray[posCampo]) {&#xd;
					existe = true;&#xd;
					break dadosLoop;&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
&#xd;
		clearFiltro();&#xd;
&#xd;
		return existe;&#xd;
	};&#xd;
	/**&#xd;
	 * M?todo para buscar a ?ltima atividade executada. Lembrando que se existir&#xd;
	 * Exclusivo dever? ser contado na hora de informar o campo numPosicao&#xd;
	 * &#xd;
	 * @param solicitacaoId&#xd;
	 *            C?digo da Solicita??o&#xd;
	 * @param numPosicao&#xd;
	 *            Informar o n?mero de posi??es que devemos localizar, caso&#xd;
	 *            queira a atual informar 0, ?ltima informar 1, penultima&#xd;
	 *            informar 2 e etc.&#xd;
	 * @returns valor Retonar o valor do campo solicitado, em caso de n?o&#xd;
	 *          identificado ? retornado NULL&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.getAtividadeIdAnterior = function(solicitacaoId, numPosicao) {&#xd;
		if (nomeDataSet == &apos;&apos;) {&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		clearFiltro();&#xd;
&#xd;
		this.setFiltro(&apos;processHistoryPK.processInstanceId&apos;, solicitacaoId,&#xd;
				solicitacaoId, true);&#xd;
&#xd;
		this.setCampo(&apos;stateSequence&apos;);&#xd;
&#xd;
		this.setOrdenacao(&apos;processHistoryPK.movementSequence&apos;);&#xd;
&#xd;
		this.buscar();&#xd;
&#xd;
		var qtd = dados.values.length;&#xd;
		var posicao;&#xd;
&#xd;
		clearFiltro();&#xd;
&#xd;
		posicao = qtd - numPosicao - 1;&#xd;
&#xd;
		if (posicao &lt; 0) {&#xd;
			return null;&#xd;
		}&#xd;
&#xd;
		return dados.getValue(posicao, &apos;stateSequence&apos;);&#xd;
	};&#xd;
	this.getDados = function() {&#xd;
		return dados;&#xd;
	}&#xd;
	var __construct = function(nomeDataSet) {&#xd;
		setMetodoFiltro();&#xd;
		setNameDataSet(nomeDataSet);&#xd;
	}(nomeDataSet);&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterProcessCreate</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterProcessCreate(processId){&#xd;
    log.info(&apos;\n$$$$$$$$$$ afterProcessCreate SolicitacaoCompras $$$$$$$$$$&apos;);&#xd;
    var primeiraCompra = false;&#xd;
    var indexesItens = hAPI.getChildrenIndexes(&quot;tbItens&quot;);&#xd;
    for(var i = 0; i &lt; indexesItens.length; i++){&#xd;
        var tdSelectPrimeiraCompra = hAPI.getCardValue(&quot;tdSelectPrimeiraCompra___&quot; + indexesItens[i]);&#xd;
        log.info(&quot;Primeira Compra Item &quot; + i + &quot; :&quot; + tdSelectPrimeiraCompra);&#xd;
        if(tdSelectPrimeiraCompra == &quot;sim&quot;){&#xd;
            primeiraCompra = true;&#xd;
        }&#xd;
    }&#xd;
    log.info(&quot;Primeira Compra: &quot;+primeiraCompra);&#xd;
    if(primeiraCompra == true){&#xd;
        var workflowEngineServiceProvider = ServiceManager.getServiceInstance(&quot;ECMWorkflowEngineService&quot;);&#xd;
        var attachments = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ProcessAttachmentDtoArray&apos;);&#xd;
        var appointment = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ProcessTaskAppointmentDtoArray&apos;);&#xd;
        var colleagueIds = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.StringArray&apos;);&#xd;
        colleagueIds.getItem().add(&apos;Pool:Group:GCRN_Assistencial&apos;);&#xd;
        var workflowEngineServiceLocator = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ECMWorkflowEngineServiceService&apos;);&#xd;
        var workflowEngineService = workflowEngineServiceLocator.getWorkflowEngineServicePort();&#xd;
        var cardData = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.StringArrayArray&apos;);&#xd;
        var arrayCampos = [];&#xd;
&#xd;
        var inputSolicitacaoPrincipal = &quot;inputSolicitacaoPrincipal&quot;;&#xd;
        arrayCampos.push([inputSolicitacaoPrincipal, processId]);&#xd;
&#xd;
        var inputDataSolicitacao = &quot;inputDataSolicitacao&quot;;&#xd;
        var data = new Date();&#xd;
        var dia  = data.getDate();&#xd;
        var mes  = data.getMonth() + 1;&#xd;
        var ano  = data.getFullYear();&#xd;
        dia = (dia&lt;=9 ? &quot;0&quot;+dia : dia);&#xd;
        mes = (mes&lt;=9 ? &quot;0&quot;+mes : mes);&#xd;
        var dataLocal = dia+&quot;/&quot;+mes+&quot;/&quot;+ano;&#xd;
        arrayCampos.push([inputDataSolicitacao, dataLocal]);&#xd;
&#xd;
        var inputCodigoFilial = &quot;inputCodigoFilial&quot;;&#xd;
        var filial_protheus = hAPI.getCardValue(&quot;filial_protheus&quot;);&#xd;
        arrayCampos.push([inputCodigoFilial, filial_protheus]);&#xd;
&#xd;
        var inputNomeFilial = &quot;inputNomeFilial&quot;;&#xd;
        var hiddenFilial = hAPI.getCardValue(&quot;hiddenFilial&quot;);&#xd;
        arrayCampos.push([inputNomeFilial, hiddenFilial]);&#xd;
&#xd;
        var inputCNPJFilial = &quot;inputCNPJFilial&quot;;&#xd;
        var cnpjFilialEnt = hAPI.getCardValue(&quot;cnpjFilialEnt&quot;);&#xd;
        arrayCampos.push([inputCNPJFilial, cnpjFilialEnt]);&#xd;
&#xd;
        var indexes = hAPI.getChildrenIndexes(&quot;tbItens&quot;);&#xd;
        for(var i = 0; i &lt; indexes.length; i++){&#xd;
            var tdSelectPrimeiraCompra = hAPI.getCardValue(&quot;tdSelectPrimeiraCompra___&quot; + indexes[i]);&#xd;
            if(tdSelectPrimeiraCompra == &quot;sim&quot;){&#xd;
                var txtCodItemProduto = hAPI.getCardValue(&quot;txtCodItemProduto___&quot; + indexes[i]);&#xd;
                var inputTdCodigoProduto = &quot;inputTdCodigoProduto___&quot;+ parseInt(i) + 1;&#xd;
                arrayCampos.push([inputTdCodigoProduto, txtCodItemProduto]);&#xd;
                var txtDescProduto = hAPI.getCardValue(&quot;txtDescProduto___&quot; + indexes[i]);&#xd;
                var inputTdNomeProduto = &quot;inputTdNomeProduto___&quot;+ parseInt(i) + 1;&#xd;
                arrayCampos.push([inputTdNomeProduto, txtDescProduto]);&#xd;
                var txtQuantidadeProduto = hAPI.getCardValue(&quot;txtQuantidadeProduto___&quot; + indexes[i]);&#xd;
                var inputTdQuantidade = &quot;inputTdQuantidade___&quot;+ parseInt(i) + 1;&#xd;
                arrayCampos.push([inputTdQuantidade, txtQuantidadeProduto]);&#xd;
            }&#xd;
        }&#xd;
        for(var i = 0; i &lt; arrayCampos.length; i++){&#xd;
            var campoValor = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.StringArrayArray&apos;);&#xd;
            var campoX = arrayCampos[i][0];&#xd;
            var valorX = arrayCampos[i][1];&#xd;
            if(valorX == null) valorX = &quot; &quot;;&#xd;
            if(!isNaN(valorX)) valorX = valorX.toString();&#xd;
            campoValor.getItem().add(campoX);&#xd;
            campoValor.getItem().add(valorX);&#xd;
            cardData.getItem().add(campoValor);&#xd;
        }&#xd;
&#xd;
        log.info(&quot;arrayCampos!&quot;);&#xd;
        log.dir(arrayCampos);&#xd;
&#xd;
        var username = &quot;integrador.fluig@oncoclinicas.com&quot;;&#xd;
        var password = &quot;hUbust*7&quot;;&#xd;
        var companyId = getValue(&quot;WKCompany&quot;);&#xd;
        var processIdName = &quot;ativacao_vinculacao_produtos_matmed&quot;;&#xd;
        var choosedState = 0;&#xd;
        var comments = &quot;Solicitação inicializada pela Solicitação de Compras MatMed&quot;;&#xd;
        var userId = &quot;imwn2dyhbuywfa0f1522083830483&quot;;&#xd;
        var completeTask = true;&#xd;
        var managerMode = false;&#xd;
        var response = workflowEngineService.startProcess(&#xd;
            username,&#xd;
            password,&#xd;
            companyId,&#xd;
            processIdName,&#xd;
            choosedState,&#xd;
            colleagueIds,&#xd;
            comments,&#xd;
            userId,&#xd;
            completeTask,&#xd;
            attachments,&#xd;
            cardData,&#xd;
            appointment,&#xd;
            managerMode&#xd;
        );&#xd;
        log.info(&quot;\n$$$$$$$$$$ Response $$$$$$$$$$&quot;);&#xd;
        log.dir(response);&#xd;
        var iProcess = &quot;&quot;;&#xd;
        for(var i = 0; i &lt; response.getItem().size(); i++){&#xd;
            var item = response.getItem().get(i).getItem();&#xd;
            var key = item.get(0);&#xd;
            var value = item.get(1);&#xd;
            if(key == &quot;iProcess&quot;) iProcess = value;&#xd;
        }&#xd;
        log.info(&quot;\n$$$$$$$$$$ iProcess: &quot;+iProcess);&#xd;
        var user = getValue(&quot;WKUser&quot;);&#xd;
        var obs = &quot;Ativação e Vinculação de Produtos MatMed: &quot;+iProcess;&#xd;
        hAPI.setTaskComments(user, processId, 0, obs);&#xd;
    }&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>buscaAlcadaDiversos</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function buscaAlcadaDiversos(filialSolic){&#xd;
&#xd;
	var usuarioGerente;&#xd;
	var valorGerente;&#xd;
	var usuarioOperacoes;&#xd;
	var valorOperacoes;&#xd;
	var usuarioFinanceiro;&#xd;
	var valorFinanceiro;&#xd;
	var usuarioGeral;&#xd;
	var UtilizaCentroCusto;&#xd;
		&#xd;
	//var filialSolic = hAPI.getCardValue(&quot;hiddenFilial&quot;);	&#xd;
	&#xd;
	&#xd;
	var existeAlcada = false;&#xd;
	&#xd;
	var filialparam = new String(filialSolic);&#xd;
	var filialFiltro = new Array(filialparam); &#xd;
	var datasetDiversos = DatasetFactory.getDataset(&quot;ds_alcadas_diversos_2&quot;, filialFiltro, null, null);&#xd;
	if (datasetDiversos.rowsCount &gt; 0)&#xd;
		{&#xd;
				&#xd;
			existeAlcada       = true;		&#xd;
			usuarioGerente     = datasetDiversos.getValue(0, &quot;usuarioGerente&quot;);&#xd;
			valorGerente       = datasetDiversos.getValue(0, &quot;valorGerente&quot;);&#xd;
			usuarioOperacoes   = datasetDiversos.getValue(0, &quot;usuarioOperacoes&quot;);&#xd;
			valorOperacoes     = datasetDiversos.getValue(0, &quot;valorOperacoes&quot;);&#xd;
			usuarioFinanceiro  = datasetDiversos.getValue(0, &quot;usuarioFinanceiro&quot;);&#xd;
			valorFinanceiro    = datasetDiversos.getValue(0, &quot;valorFinanceiro&quot;);&#xd;
			usuarioGeral 	   = datasetDiversos.getValue(0, &quot;usuarioGeral&quot;);&#xd;
			UtilizaCentroCusto = datasetDiversos.getValue(0, &quot;UtilizaCentroCusto&quot;);&#xd;
			if (UtilizaCentroCusto==&quot;sim&quot;){&#xd;
				var codCentroCusto = hAPI.getCardValue(&quot;txtCodCentroCusto&quot;);&#xd;
&#xd;
			    //var consCentro = DatasetFactory.createConstraint(&quot;CTT_CUSTO&quot;, CodCentroCusto, CodCentroCusto, ConstraintType.MUST);        &#xd;
				var constraintCentro = new Array(codCentroCusto);		&#xd;
				var datasetCentro = DatasetFactory.getDataset(&quot;ds_alcadas_cc_2&quot;, constraintCentro, null, null);&#xd;
&#xd;
				&#xd;
				if (datasetCentro.rowsCount &gt; 0){&#xd;
					usuarioGerente = datasetCentro.getValue(0, &quot;usuarioGerenteCentro&quot;);&#xd;
					usuarioOperacoes = datasetCentro.getValue(0, &quot;usuarioDirOperacoesCentro&quot;);&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
	else&#xd;
		{&#xd;
			existeAlcada       = false;&#xd;
			usuarioGerente     = &quot;&quot;;&#xd;
			valorGerente       = &quot;&quot;;&#xd;
			usuarioOperacoes   = &quot;&quot;;&#xd;
			valorOperacoes     = &quot;&quot;;&#xd;
			usuarioFinanceiro  = &quot;&quot;;&#xd;
			valorFinanceiro    = &quot;&quot;;&#xd;
			usuarioGeral 	   = &quot;&quot;;&#xd;
			UtilizaCentroCusto = &quot;&quot;;&#xd;
		}&#xd;
	&#xd;
	var alcadasDiversos = {&quot;retornoAlcada&quot;:     existeAlcada,&#xd;
						   &quot;usuarioGerente&quot;:    usuarioGerente,&#xd;
						   &quot;valorGerente&quot;:      valorGerente,&#xd;
						   &quot;usuarioOperacoes&quot;:  usuarioOperacoes,&#xd;
						   &quot;valorOperacoes&quot;:    valorOperacoes,&#xd;
						   &quot;usuarioFinanceiro&quot;: usuarioFinanceiro,&#xd;
						   &quot;valorFinanceiro&quot;:   valorFinanceiro,&#xd;
						   &quot;usuarioGeral&quot;: 	    usuarioGeral};&#xd;
	return alcadasDiversos;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>buscaAprovadoresAlcada</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
*Busca os aprovadores de alçada&#xd;
*&#xd;
*/&#xd;
var tipoMatMed = &apos;matmed&apos;;&#xd;
var tipoDiversos = &apos;diversos&apos;;&#xd;
&#xd;
/**&#xd;
 * Retorna um objeco com os aprovadores da alcada&#xd;
 * @param filialAlcada&#xd;
 * @parm grupo Grupo da analise de comprador&#xd;
 * @codCentroCusto código do centodo de custo selecionado&#xd;
 * @returns&#xd;
 */&#xd;
function getAprovadoresAlcada(filialAlcada, grupo, codCentroCusto){&#xd;
	&#xd;
	var tipo = tipoMaterial(grupo);&#xd;
	&#xd;
	if(tipo == tipoMatMed){&#xd;
		return buscaAprovadoresMatMed(filialAlcada);&#xd;
	}else if(tipo == tipoDiversos){&#xd;
		return buscaAprovadoresDiversos(filialAlcada,codCentroCusto);&#xd;
	}&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Função já existente que verifica se o produto é matmed ou diversos.&#xd;
 * @returns {String} informando se matmed ou diversos&#xd;
 */&#xd;
function tipoMaterial(grupo){&#xd;
	if(grupo == &quot;Pool:Group:MEMBER_Demandas-Suprimentos-Diretos&quot; || grupo == &quot;Pool:Group:MEMBER_Demandas-Oncoprod&quot;){&#xd;
		return &quot;matmed&quot;;&#xd;
	}else{&#xd;
		return &quot;diversos&quot;;&#xd;
	}&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Busca todos os aprovadores das alçadas de aprovaçao de matme&#xd;
 * @param filialSolic - Filial&#xd;
 * @returns retornar um objeto com os aprovadores, valores de aprovação e flag de somente conhecimento&#xd;
 */&#xd;
function buscaAprovadoresMatMed(filialSolic){&#xd;
		&#xd;
	var aprovadores = {&#xd;
		tipo: &apos;matmed&apos;,&#xd;
		existeAlcada: false,&#xd;
		usuarioFarmacia: &apos;&apos;,&#xd;
		usuarioClinica: [],&#xd;
		usuarioCompras: [],&#xd;
		usuarioDiretor: []&#xd;
	}&#xd;
&#xd;
	var datasetMatMed = DatasetFactory.getDataset(&quot;ds_alcadas_matmed_2&quot;, new Array(filialSolic), null, null);&#xd;
	if (datasetMatMed.rowsCount &gt; 0){&#xd;
		aprovadores.existeAlcada     = true;		&#xd;
		aprovadores.usuarioFarmacia  = datasetMatMed.getValue(0, &quot;usuarioFarmacia&quot;);&#xd;
		aprovadores.usuarioClinica.push(datasetMatMed.getValue(0, &quot;usuarioClinica&quot;), datasetMatMed.getValue(0, &quot;valorClinica&quot;), datasetMatMed.getValue(0, &quot;clinicaSomenteConhecimento&quot;) == &quot;true&quot; ? true : false);&#xd;
		aprovadores.usuarioCompras.push(datasetMatMed.getValue(0, &quot;usuarioCompras&quot;), datasetMatMed.getValue(0, &quot;valorCompras&quot;), datasetMatMed.getValue(0, &quot;comprasSomenteConhecimento&quot;) == &quot;true&quot; ? true : false);&#xd;
		aprovadores.usuarioDiretor.push(datasetMatMed.getValue(0, &quot;usuarioDiretores&quot;), datasetMatMed.getValue(0, &quot;valorDiretores&quot;),datasetMatMed.getValue(0, &quot;diretoresSomenteConhecimento&quot;) == &quot;true&quot; ? true : false);&#xd;
	}&#xd;
	&#xd;
	return aprovadores;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Busca todos os aprovadores das alçadas de aprovaçao de diversos&#xd;
 * @param filialSolic - Filial&#xd;
 * @returns retornar um objeto com os aprovadores, valores de aprovação e flag de somente conhecimento&#xd;
 */&#xd;
function buscaAprovadoresDiversos(filialSolic, codCentroCusto){&#xd;
	var aprovadores = {&#xd;
		tipo: &apos;diversos&apos;,&#xd;
		existeAlcada: false,&#xd;
		UtilizaCentroCusto: &apos;&apos;,&#xd;
		usuarioGerente: [],&#xd;
		usuarioGerente2: [],&#xd;
		usuarioGerente3:[],&#xd;
		usuarioOperacoes:[],&#xd;
		usuarioFinanceiro:[],&#xd;
		usuarioGeral: []&#xd;
	}&#xd;
	//busca o dataset&#xd;
	var datasetDiversos = DatasetFactory.getDataset(&quot;ds_alcadas_diversos_2&quot;, new Array(filialSolic), null, null);&#xd;
&#xd;
	if (datasetDiversos.rowsCount &gt; 0){&#xd;
		try{&#xd;
			aprovadores.existeAlcada = true;&#xd;
			aprovadores.UtilizaCentroCusto = datasetDiversos.getValue(0, &quot;UtilizaCentroCusto&quot;);&#xd;
			aprovadores.usuarioOperacoes.push(datasetDiversos.getValue(0, &quot;usuarioOperacoes&quot;),datasetDiversos.getValue(0, &quot;valorOperacoes&quot;),datasetDiversos.getValue(0, &quot;operacoesSomenteConhecimento&quot;) == &quot;true&quot; ? true : false);&#xd;
			aprovadores.usuarioFinanceiro.push(datasetDiversos.getValue(0, &quot;usuarioFinanceiro&quot;),datasetDiversos.getValue(0, &quot;valorFinanceiro&quot;),datasetDiversos.getValue(0, &quot;financeiroSomenteConhecimento&quot;) == &quot;true&quot; ? true : false);&#xd;
			aprovadores.usuarioGeral.push(datasetDiversos.getValue(0, &quot;usuarioGeral&quot;), datasetDiversos.getValue(0, &quot;geralSomenteConhecimento&quot;));&#xd;
			if (aprovadores.UtilizaCentroCusto ==&quot;sim&quot;){&#xd;
			    //consulta o centro de custo       &#xd;
				var constraintCentro = new Array(codCentroCusto+&quot; &quot;);		&#xd;
				var datasetCentro = DatasetFactory.getDataset(&quot;ds_alcadas_cc_2&quot;, constraintCentro, null, null);&#xd;
				if(datasetCentro != undefined){&#xd;
					if (datasetCentro.rowsCount &gt; 0){&#xd;
						//Verifica se existe um usuario cadastrado para cada centro de custo&#xd;
						if(datasetCentro.getValue(0, &quot;usuarioGerenteCentro&quot;) != &quot;&quot; &amp;&amp; datasetCentro.getValue(0, &quot;usuarioGerenteCentro&quot;) != undefined &amp;&amp; datasetCentro.getValue(0, &quot;usuarioGerenteCentro&quot;) != null){&#xd;
							aprovadores.usuarioGerente.push(datasetCentro.getValue(0, &quot;usuarioGerenteCentro&quot;), datasetCentro.getValue(0, &quot;valorGerenteCentro&quot;),datasetCentro.getValue(0,&quot;gerCentroSomenteConhecimento&quot;) == &quot;true&quot; ? true : false,&apos;centroCusto&apos;);&#xd;
						} else {&#xd;
							aprovadores.usuarioGerente.push(datasetDiversos.getValue(0, &quot;usuarioGerente&quot;), datasetDiversos.getValue(0, &quot;valorGerente&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento&quot;)  == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
						}&#xd;
						&#xd;
						if(datasetCentro.getValue(0, &quot;usuarioGerenteCentro2&quot;) != &quot;&quot; &amp;&amp; datasetCentro.getValue(0, &quot;usuarioGerenteCentro2&quot;) != undefined &amp;&amp; datasetCentro.getValue(0, &quot;usuarioGerenteCentro2&quot;) != null){&#xd;
							aprovadores.usuarioGerente2.push(datasetCentro.getValue(0, &quot;usuarioGerenteCentro2&quot;), datasetCentro.getValue(0, &quot;valorGerenteCentro2&quot;), datasetCentro.getValue(0, &quot;gerCentroSomenteConhecimento2&quot;) == &quot;true&quot; ? true : false,&apos;centroCusto&apos;);&#xd;
						} else {&#xd;
							aprovadores.usuarioGerente2.push(datasetDiversos.getValue(0, &quot;usuarioGerente2&quot;),datasetDiversos.getValue(0, &quot;valorGerente2&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento2&quot;) == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
						}&#xd;
						&#xd;
						if(datasetCentro.getValue(0, &quot;usuarioDirOperacoesCentro&quot;) != &quot;&quot; &amp;&amp; datasetCentro.getValue(0, &quot;usuarioDirOperacoesCentro&quot;) != undefined &amp;&amp; datasetCentro.getValue(0, &quot;usuarioDirOperacoesCentro&quot;) != null){&#xd;
							aprovadores.usuarioGerente3.push(datasetCentro.getValue(0, &quot;usuarioDirOperacoesCentro&quot;), datasetDiversos.getValue(0, &quot;valorGerente3&quot;), datasetCentro.getValue(0, &quot;dirOpSomenteConhecimento&quot;) == &quot;true&quot; ? true : false,&apos;centroCusto&apos;);&#xd;
						} else {&#xd;
							aprovadores.usuarioGerente3.push(datasetDiversos.getValue(0, &quot;usuarioGerente3&quot;), datasetDiversos.getValue(0, &quot;valorGerente3&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento3&quot;) == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
						}&#xd;
					} else {&#xd;
						aprovadores.usuarioGerente.push(datasetDiversos.getValue(0, &quot;usuarioGerente&quot;), datasetDiversos.getValue(0, &quot;valorGerente&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento&quot;)  == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
						aprovadores.usuarioGerente2.push(datasetDiversos.getValue(0, &quot;usuarioGerente2&quot;),datasetDiversos.getValue(0, &quot;valorGerente2&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento2&quot;) == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
						aprovadores.usuarioGerente3.push(datasetDiversos.getValue(0, &quot;usuarioGerente3&quot;), datasetDiversos.getValue(0, &quot;valorGerente3&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento3&quot;) == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
					}&#xd;
				}&#xd;
			} else {&#xd;
				aprovadores.usuarioGerente.push(datasetDiversos.getValue(0, &quot;usuarioGerente&quot;), datasetDiversos.getValue(0, &quot;valorGerente&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento&quot;)  == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
				aprovadores.usuarioGerente2.push(datasetDiversos.getValue(0, &quot;usuarioGerente2&quot;),datasetDiversos.getValue(0, &quot;valorGerente2&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento2&quot;) == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
				aprovadores.usuarioGerente3.push(datasetDiversos.getValue(0, &quot;usuarioGerente3&quot;), datasetDiversos.getValue(0, &quot;valorGerente3&quot;), datasetDiversos.getValue(0, &quot;gerenteSomenteConhecimento3&quot;) == &quot;true&quot; ? true : false,&apos;filial&apos;);&#xd;
			}&#xd;
		}catch(e){&#xd;
			log.info(&quot;ERRO Class: Busca Aprovadores Alçadas: &quot;+ e)&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	return aprovadores;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>regraFluxoJustificativa</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function regraFluxoJustificativa(){&#xd;
	var indexes = hAPI.getChildrenIndexes(&quot;tbItens&quot;);	&#xd;
&#xd;
	var result = 0;&#xd;
	for (var i = 0; i &lt; indexes.length; i++) {&#xd;
		&#xd;
		if(hAPI.getCardValue(&quot;justAjusteCotacao___&quot; + indexes[i]) != &quot;&quot;){&#xd;
			result = 1;&#xd;
			break;&#xd;
		}&#xd;
		&#xd;
	}&#xd;
&#xd;
	return result;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>getDataAtual</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function getDataAtual(){&#xd;
    var now     = new Date(); &#xd;
    var year    = now.getFullYear();&#xd;
    var month   = addZero(now.getMonth()+1,2); &#xd;
    var day     = addZero(now.getDate(),2);&#xd;
    var hour    = addZero(now.getHours(),2);&#xd;
    var minute  = addZero(now.getMinutes(),2);&#xd;
    var second  = addZero(now.getSeconds(),2); &#xd;
    var millisecond  = addZero(now.getMilliseconds(),3); &#xd;
    var dateTime = day+&apos;/&apos;+month+&apos;/&apos;+year+&apos; &apos;+hour+&apos;:&apos;+minute+&apos;:&apos;+second+&apos;,&apos;+millisecond;   &#xd;
     return dateTime;&#xd;
}&#xd;
&#xd;
function addZero(x,n) {&#xd;
    if (x.toString().length &lt; n) {&#xd;
        x = &quot;0&quot; + x;&#xd;
    }&#xd;
    return x;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>encerraAglutinada</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function encerraAglutinada(numSolicitacao){&#xd;
	&#xd;
	&#xd;
	// se solic escolhida  nao estiver mais no pool fazer throw passando o numero da solicitacao que precisa ser removida do pai x filho&#xd;
	    &#xd;
    var config = new objDataSet(&quot;configServer&quot;);&#xd;
    config.buscar();&#xd;
    var configServer = config.getDados();&#xd;
    try {&#xd;
	     for ( var posValues in configServer.values) {&#xd;
	      var wsUser = configServer.getValue(posValues,&quot;usuarioPublicaDoc&quot;);&#xd;
	      var wsPass = configServer.getValue(posValues,&quot;senhaPublicaDoc&quot;);&#xd;
	     }&#xd;
    } catch (e) {&#xd;
    	log.error(&quot;Falha ao utilizar o objAnexo, não encontrado dataSet configServer.&quot;);&#xd;
    }&#xd;
    &#xd;
    &#xd;
    var idcolleague = findColleagueIDByMail(wsUser);&#xd;
    &#xd;
    if(!idcolleague){&#xd;
    	throw &quot;Não foi encontrado usuário integrador responsável pela finalização da solicitação aglutinada &quot;+numSolicitacao+&quot;!&quot;;&#xd;
    }&#xd;
    &#xd;
    var wsCompany = 1;&#xd;
	var serviceProvider = ServiceManager.getServiceInstance(&quot;WorkflowService&quot;);&#xd;
	var serviceLocator = serviceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ECMWorkflowEngineServiceServiceLocator&quot;);&#xd;
	&#xd;
	var workflow = { &#xd;
		userId : wsUser,&#xd;
		password : wsPass,&#xd;
		companyId : wsCompany,&#xd;
		processId : parseInt(numSolicitacao),&#xd;
		choosedState : FIM_AGLUTINADA, // fim&#xd;
		colleaguesRecipient : serviceProvider.instantiate(&quot;net.java.dev.jaxb.array.StringArray&quot;),&#xd;
		comment : &quot;Solicitação aglutinada na solicitação número &quot;+numSolicitacao,&#xd;
		colleagueSender : idcolleague,&#xd;
		completeTask : true,&#xd;
		atachments : serviceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ProcessAttachmentDtoArray&quot;),&#xd;
		cardData : serviceProvider.instantiate(&quot;net.java.dev.jaxb.array.StringArrayArray&quot;),&#xd;
		apointment : serviceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ProcessTaskAppointmentDtoArray&quot;),&#xd;
		managerMode : true,&#xd;
		threadSequence : 0,&#xd;
		service : serviceLocator.getWorkflowEngineServicePort()&#xd;
	};&#xd;
		&#xd;
    var userAux = new Array(idcolleague);		&#xd;
	workflow.colleaguesRecipient.setItem(userAux);	&#xd;
	&#xd;
	try{&#xd;
		var wsMessage = workflow.service.saveAndSendTask(&#xd;
			workflow.userId, workflow.password, workflow.companyId, workflow.processId, workflow.choosedState,&#xd;
			workflow.colleaguesRecipient, workflow.comment, workflow.colleagueSender, workflow.completeTask,&#xd;
			workflow.atachments, workflow.cardData, workflow.apointment, workflow.managerMode, workflow.threadSequence&#xd;
		);&#xd;
&#xd;
	} catch(e){&#xd;
		log.error(&quot;AGLUTINACAO - saveAndSendTask - Teste a movimentação no soapUI - &quot; + workflow + &quot; - &quot;  + e);&#xd;
	}&#xd;
&#xd;
	// se solic escolhida  nao estiver mais no pool fazer throw passando o numero da solicitacao que precisa ser removida do pai x filho&#xd;
	&#xd;
}&#xd;
&#xd;
function findColleagueIDByMail(mail){&#xd;
	var userMail = DatasetFactory.createConstraint(&quot;mail&quot;, mail, mail,	ConstraintType.MUST);&#xd;
    var userCompanyId = DatasetFactory.createConstraint(&quot;colleaguePK.companyId&quot;, getValue(&quot;WKCompany&quot;),	getValue(&quot;WKCompany&quot;), ConstraintType.MUST);&#xd;
    &#xd;
    // Define os campos para ordenação&#xd;
    var sortingFields = new Array(&quot;colleaguePK.colleagueId&quot;);&#xd;
    &#xd;
    var colleague = DatasetFactory.getDataset(&quot;colleague&quot;, null,new Array(userCompanyId,userMail), sortingFields);&#xd;
    if(colleague &amp;&amp; colleague.rowsCount &gt; 0 &amp;&amp; colleague.getValue(0, &quot;colleaguePK.colleagueId&quot;)){&#xd;
    	return colleague.getValue(0, &quot;colleaguePK.colleagueId&quot;);&#xd;
    }else{&#xd;
    	return null;&#xd;
    }&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>itensDesvinculados</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function itensDesvinculados() {&#xd;
    // verificar se item itensDesvinculados&#xd;
    if (hAPI.getCardValue(&quot;txtCodItemProdutoDesv___1&quot;) == &quot;&quot; || hAPI.getCardValue(&quot;txtCodItemProdutoDesv___1&quot;) == null) {&#xd;
        return 1;&#xd;
    } else&#xd;
        return 2;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>criaDesvinculados</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function criaDesvinculados() {&#xd;
    &#xd;
        var processId = &quot;SolicitacaoCompras&quot;;&#xd;
        var ativDest = 0;&#xd;
        //var COLABORADOR = new Array(hAPI.getCardValue(&apos;idRequisitante&apos;));&#xd;
        //SM2 alterado a forma de declaração do usuário solicitante 16.02.24&#xd;
        var COLABORADOR = new java.util.ArrayList();&#xd;
        COLABORADOR.add(hAPI.getCardValue(&apos;idRequisitante&apos;));&#xd;
&#xd;
        var SOLICITACAO = getValue(&apos;WKNumProces&apos;);&#xd;
            SOLICITACAO = SOLICITACAO.toString();&#xd;
        var obs = &quot;Aberto a solicitação de Compras dos itens desvinculados Nº &quot; + SOLICITACAO + &quot;.&quot;;&#xd;
        var campos = hAPI.getCardData(SOLICITACAO);&#xd;
&#xd;
        var completarTarefa = true;&#xd;
        var modoGestor = false;&#xd;
&#xd;
        // MAPA COM OS VALORES DO FORMULÁRIO DO PROCESSO&#xd;
        var valoresForm = new java.util.HashMap();&#xd;
&#xd;
        valoresForm.put(&apos;cntProcesso&apos;, SOLICITACAO);&#xd;
&#xd;
        valoresForm.put(&apos;filial&apos;, hAPI.getCardValue(&quot;filial&quot;));&#xd;
        valoresForm.put(&apos;filial_protheus&apos;, hAPI.getCardValue(&quot;filial_protheus&quot;));&#xd;
        valoresForm.put(&apos;idRequisitante&apos;, hAPI.getCardValue(&quot;idRequisitante&quot;));&#xd;
        valoresForm.put(&apos;txtNmRequisitante&apos;, hAPI.getCardValue(&quot;txtNmRequisitante&quot;));&#xd;
        valoresForm.put(&apos;cdSolicitante&apos;, hAPI.getCardValue(&quot;cdSolicitante&quot;));&#xd;
        valoresForm.put(&apos;hiddenFilial&apos;, hAPI.getCardValue(&quot;hiddenFilial&quot;));&#xd;
        valoresForm.put(&apos;zoomFilial&apos;, hAPI.getCardValue(&quot;zoomFilial&quot;));&#xd;
        valoresForm.put(&apos;txtCodCentroCusto&apos;, hAPI.getCardValue(&quot;txtCodCentroCusto&quot;));&#xd;
        valoresForm.put(&apos;txtNomeCentroCusto&apos;, hAPI.getCardValue(&quot;txtNomeCentroCusto&quot;));&#xd;
        valoresForm.put(&apos;nmFilial&apos;, hAPI.getCardValue(&quot;nmFilial&quot;));&#xd;
        valoresForm.put(&apos;txtNmRequisitante&apos;, hAPI.getCardValue(&quot;txtNmRequisitante&quot;));&#xd;
        valoresForm.put(&apos;txtComprador&apos;, hAPI.getCardValue(&quot;txtComprador&quot;));&#xd;
        valoresForm.put(&apos;hiddenComprador&apos;, hAPI.getCardValue(&quot;hiddenComprador&quot;));&#xd;
        valoresForm.put(&apos;nmFilialEntrega&apos;, hAPI.getCardValue(&quot;nmFilialEntrega&quot;));&#xd;
        valoresForm.put(&apos;hiddenFilialEntrega&apos;, hAPI.getCardValue(&quot;hiddenFilialEntrega&quot;));&#xd;
        valoresForm.put(&apos;txtLocalEntrega&apos;, hAPI.getCardValue(&quot;txtLocalEntrega&quot;));&#xd;
        valoresForm.put(&apos;rdContrato&apos;, hAPI.getCardValue(&quot;rdContrato&quot;));&#xd;
        valoresForm.put(&apos;ckImportado&apos;, hAPI.getCardValue(&quot;ckImportado&quot;));&#xd;
        valoresForm.put(&apos;dtValidadeCotacao&apos;, hAPI.getCardValue(&quot;dtValidadeCotacao&quot;));&#xd;
        valoresForm.put(&apos;txtCodFormaPagamento&apos;, hAPI.getCardValue(&quot;txtCodFormaPagamento&quot;));&#xd;
        valoresForm.put(&apos;txtNomeFormaPagamento&apos;, hAPI.getCardValue(&quot;txtNomeFormaPagamento&quot;));&#xd;
        valoresForm.put(&apos;hrValidadeCotacao&apos;, hAPI.getCardValue(&quot;hrValidadeCotacao&quot;));&#xd;
        valoresForm.put(&apos;grupoAnaliseComprador&apos;, hAPI.getCardValue(&quot;grupoAnaliseComprador&quot;));&#xd;
        valoresForm.put(&apos;dtEmissao&apos;, hAPI.getCardValue(&quot;dtEmissao&quot;));&#xd;
        valoresForm.put(&apos;FilialAlcada&apos;, hAPI.getCardValue(&quot;FilialAlcada&quot;));&#xd;
        valoresForm.put(&apos;codigo_filial&apos;, hAPI.getCardValue(&quot;codigo_filial&quot;));&#xd;
        valoresForm.put(&apos;codigo&apos;, hAPI.getCardValue(&quot;codigo&quot;));&#xd;
        valoresForm.put(&apos;analyticsNmFilial&apos;, hAPI.getCardValue(&quot;analyticsNmFilial&quot;));&#xd;
        valoresForm.put(&apos;cdSolicitante&apos;, hAPI.getCardValue(&quot;cdSolicitante&quot;));&#xd;
        valoresForm.put(&apos;prioridadeGeral&apos;, hAPI.getCardValue(&quot;prioridadeGeral&quot;));&#xd;
        valoresForm.put(&apos;hiddenPrioridadeGeral&apos;, hAPI.getCardValue(&quot;hiddenPrioridadeGeral&quot;));&#xd;
        valoresForm.put(&apos;hiddenPrioridadeGeralOrig&apos;, hAPI.getCardValue(&quot;hiddenPrioridadeGeralOrig&quot;));&#xd;
        valoresForm.put(&apos;isProdutoTI&apos;, hAPI.getCardValue(&quot;isProdutoTI&quot;));&#xd;
        valoresForm.put(&apos;txtAInfoAdicionais&apos;, hAPI.getCardValue(&quot;txtAInfoAdicionais&quot;));&#xd;
        valoresForm.put(&apos;poolAbertura&apos;, hAPI.getCardValue(&quot;poolAbertura&quot;));&#xd;
&#xd;
        var contador = campos.keySet().iterator();&#xd;
        var count = 0;&#xd;
&#xd;
        while (contador.hasNext()) {&#xd;
            var id = contador.next();&#xd;
&#xd;
            if (id.match(/txtCodItemProdutoDesv___/)) {&#xd;
                var seq = id.split(&quot;___&quot;);&#xd;
&#xd;
                valoresForm.put(&quot;sPrioridadeProduto___&quot; + seq[1], hAPI.getCardValue(&quot;sPrioridadeProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;hiddenPrioridade___&quot; + seq[1], hAPI.getCardValue(&quot;hiddenPrioridadeDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtSeqItemProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtSeqItemProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtCodItemProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtCodItemProdutoDesv___&quot; + seq[1]));&#xd;
                //valoresForm.put(&quot;tdSelectPrimeiraCompra___&quot; + seq[1], hAPI.getCardValue(&quot;tdSelectPrimeiraCompra___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtDescProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtDescProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtUnidMedProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtUnidMedProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtQuantidadeProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtQuantidadeProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtSaldoProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtSaldoProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;dtNecessidadeProduto___&quot; + seq[1], hAPI.getCardValue(&quot;dtNecessidadeProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtArmazemProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtArmazemProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;prazoProduto___&quot; + seq[1], hAPI.getCardValue(&quot;prazoProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtObsProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtObsProdutoDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;nmFabricante___&quot; + seq[1], hAPI.getCardValue(&quot;nmFabricanteDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtConsumoMedio___&quot; + seq[1], hAPI.getCardValue(&quot;txtConsumoMedioDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;txtContaContabil___&quot; + seq[1], hAPI.getCardValue(&quot;txtContaContabilDesv___&quot; + seq[1]));&#xd;
                valoresForm.put(&quot;tipoProduto___&quot; + seq[1], hAPI.getCardValue(&quot;tipoProdutoDesv___&quot; + seq[1]))&#xd;
&#xd;
                count++;&#xd;
            }&#xd;
        }&#xd;
&#xd;
        log.info(&apos;servicetask228 - criaDesvinculados SC: &apos; + processId + &apos;/&apos; + ativDest + &apos;/&apos; + COLABORADOR + &apos;/&apos; + obs + &apos;/&apos; + completarTarefa + &apos;/&apos; + valoresForm + &apos;/&apos; + modoGestor);&#xd;
&#xd;
        // INICIAR NOVO PROCESSO&#xd;
    try {&#xd;
        hAPI.startProcess(processId, ativDest, COLABORADOR, obs, completarTarefa, valoresForm, modoGestor);&#xd;
    } catch (error) {&#xd;
        log.error(&quot;servicetask228 - criaDesvinculados SC: &quot;);&#xd;
        log.dir(error);&#xd;
        throw &quot;Falha na criação da nova solicitação de itens desvinculados! Favor acionar o suporte (servicetask228 - criaDesvinculados) &quot; + error.message;&#xd;
    }&#xd;
}&#xd;
&#xd;
function pad(num) {&#xd;
    var numRet = num;&#xd;
    if (parseInt(num) &lt;= 9)&#xd;
        numRet = &quot;0&quot; + num;&#xd;
    return numRet;&#xd;
}&#xd;
&#xd;
function formatDate(date) {&#xd;
    var day = date.getDate();&#xd;
    if (day &lt; 10) {&#xd;
        day = &quot;0&quot; + day;&#xd;
    }&#xd;
    var month = date.getMonth() + 1;&#xd;
    if (month &lt; 10) {&#xd;
        month = &quot;0&quot; + month;&#xd;
    }&#xd;
    var year = date.getFullYear();&#xd;
    return day + &quot;/&quot; + month + &quot;/&quot; + year;&#xd;
}&#xd;
&#xd;
function criaDesvinculados_old() {&#xd;
    var processo = getValue(&quot;WKNumProces&quot;);&#xd;
    var campos = hAPI.getCardData(processo);&#xd;
    var idRequisitante = hAPI.getCardValue(&apos;idRequisitante&apos;);&#xd;
&#xd;
    var workflowEngineServiceProvider = ServiceManager.getServiceInstance(&quot;ECMWorkflowEngineService&quot;);&#xd;
    var processAttachmentDtoArray = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ProcessAttachmentDtoArray&apos;);&#xd;
    var processTaskAppointmentDtoArray = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ProcessTaskAppointmentDtoArray&apos;);&#xd;
    // var stringArray = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.StringArray&apos;);&#xd;
    // stringArray.getItem().add(hAPI.getCardValue(&apos;cdSolicitante&apos;));&#xd;
&#xd;
    // Lista das matrículas de usuários que irão receber a atividade. Normalmente é um usuário, mas no caso de um consenso podem ser vários&#xd;
    var colleagueIds = serviceHelper.instantiate(&apos;br.com.oncoclinicas.fluig.StringArray&apos;);&#xd;
    colleagueIds.getItem().add(hAPI.getCardValue(&apos;cdSolicitante&apos;));&#xd;
&#xd;
    var workflowEngineServiceLocator = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.ECMWorkflowEngineServiceService&apos;);&#xd;
    var workflowEngineService = workflowEngineServiceLocator.getWorkflowEngineServicePort();&#xd;
    var cardData = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.StringArrayArray&apos;);&#xd;
&#xd;
    var arrayCampos = [];&#xd;
    arrayCampos.push([&apos;filial&apos;, hAPI.getCardValue(&quot;filial&quot;)]);&#xd;
    arrayCampos.push([&apos;filial_protheus&apos;, hAPI.getCardValue(&quot;filial_protheus&quot;)]);&#xd;
    arrayCampos.push([&apos;hiddenFilial&apos;, hAPI.getCardValue(&quot;hiddenFilial&quot;)]);&#xd;
    arrayCampos.push([&apos;zoomFilial&apos;, hAPI.getCardValue(&quot;zoomFilial&quot;)]);&#xd;
    arrayCampos.push([&apos;txtCodCentroCusto&apos;, hAPI.getCardValue(&quot;txtCodCentroCusto&quot;)]);&#xd;
    arrayCampos.push([&apos;txtNomeCentroCusto&apos;, hAPI.getCardValue(&quot;txtNomeCentroCusto&quot;)]);&#xd;
    arrayCampos.push([&apos;nmFilial&apos;, hAPI.getCardValue(&quot;nmFilial&quot;)]);&#xd;
    arrayCampos.push([&apos;txtNmRequisitante&apos;, hAPI.getCardValue(&quot;txtNmRequisitante&quot;)]);&#xd;
    arrayCampos.push([&apos;txtComprador&apos;, hAPI.getCardValue(&quot;txtComprador&quot;)]);&#xd;
    arrayCampos.push([&apos;hiddenComprador&apos;, hAPI.getCardValue(&quot;hiddenComprador&quot;)]);&#xd;
    arrayCampos.push([&apos;nmFilialEntrega&apos;, hAPI.getCardValue(&quot;nmFilialEntrega&quot;)]);&#xd;
    arrayCampos.push([&apos;hiddenFilialEntrega&apos;, hAPI.getCardValue(&quot;hiddenFilialEntrega&quot;)]);&#xd;
    arrayCampos.push([&apos;txtLocalEntrega&apos;, hAPI.getCardValue(&quot;txtLocalEntrega&quot;)]);&#xd;
    arrayCampos.push([&apos;rdContrato&apos;, hAPI.getCardValue(&quot;rdContrato&quot;)]);&#xd;
    arrayCampos.push([&apos;ckImportado&apos;, hAPI.getCardValue(&quot;ckImportado&quot;)]);&#xd;
    arrayCampos.push([&apos;dtValidadeCotacao&apos;, hAPI.getCardValue(&quot;dtValidadeCotacao&quot;)]);&#xd;
    arrayCampos.push([&apos;txtCodFormaPagamento&apos;, hAPI.getCardValue(&quot;txtCodFormaPagamento&quot;)]);&#xd;
    arrayCampos.push([&apos;txtNomeFormaPagamento&apos;, hAPI.getCardValue(&quot;txtNomeFormaPagamento&quot;)]);&#xd;
    arrayCampos.push([&apos;hrValidadeCotacao&apos;, hAPI.getCardValue(&quot;hrValidadeCotacao&quot;)]);&#xd;
    arrayCampos.push([&apos;grupoAnaliseComprador&apos;, hAPI.getCardValue(&quot;grupoAnaliseComprador&quot;)]);&#xd;
    arrayCampos.push([&apos;dtEmissao&apos;, hAPI.getCardValue(&quot;dtEmissao&quot;)]);&#xd;
    arrayCampos.push([&apos;FilialAlcada&apos;, hAPI.getCardValue(&quot;FilialAlcada&quot;)]);&#xd;
    arrayCampos.push([&apos;codigo_filial&apos;, hAPI.getCardValue(&quot;codigo_filial&quot;)]);&#xd;
    arrayCampos.push([&apos;codigo&apos;, hAPI.getCardValue(&quot;codigo&quot;)]);&#xd;
    arrayCampos.push([&apos;analyticsNmFilial&apos;, hAPI.getCardValue(&quot;analyticsNmFilial&quot;)]);&#xd;
    arrayCampos.push([&apos;cdSolicitante&apos;, hAPI.getCardValue(&quot;cdSolicitante&quot;)]);&#xd;
    arrayCampos.push([&apos;prioridadeGeral&apos;, hAPI.getCardValue(&quot;prioridadeGeral&quot;)]);&#xd;
    arrayCampos.push([&apos;hiddenPrioridadeGeral&apos;, hAPI.getCardValue(&quot;hiddenPrioridadeGeral&quot;)]);&#xd;
    arrayCampos.push([&apos;hiddenPrioridadeGeralOrig&apos;, hAPI.getCardValue(&quot;hiddenPrioridadeGeralOrig&quot;)]);&#xd;
    arrayCampos.push([&apos;isProdutoTI&apos;, hAPI.getCardValue(&quot;isProdutoTI&quot;)]);&#xd;
    arrayCampos.push([&apos;txtAInfoAdicionais&apos;, hAPI.getCardValue(&quot;txtAInfoAdicionais&quot;)]);&#xd;
    arrayCampos.push([&apos;poolAbertura&apos;, hAPI.getCardValue(&quot;poolAbertura&quot;)]);&#xd;
&#xd;
    var contador = campos.keySet().iterator();&#xd;
    var count = 0;&#xd;
&#xd;
    while (contador.hasNext()) {&#xd;
        var id = contador.next();&#xd;
&#xd;
        if (id.match(/txtCodItemProdutoDesv___/)) {&#xd;
            var campo = campos.get(id);&#xd;
            var seq = id.split(&quot;___&quot;);&#xd;
&#xd;
            arrayCampos.push([&quot;sPrioridadeProduto___&quot; + seq[1], hAPI.getCardValue(&quot;sPrioridadeProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;hiddenPrioridade___&quot; + seq[1], hAPI.getCardValue(&quot;hiddenPrioridadeDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtSeqItemProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtSeqItemProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtCodItemProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtCodItemProdutoDesv___&quot; + seq[1])]);&#xd;
            //arrayCampos.push([&quot;tdSelectPrimeiraCompra___&quot; + seq[1], hAPI.getCardValue(&quot;tdSelectPrimeiraCompra___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtDescProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtDescProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtUnidMedProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtUnidMedProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtQuantidadeProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtQuantidadeProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtSaldoProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtSaldoProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;dtNecessidadeProduto___&quot; + seq[1], hAPI.getCardValue(&quot;dtNecessidadeProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtArmazemProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtArmazemProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;prazoProduto___&quot; + seq[1], hAPI.getCardValue(&quot;prazoProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtObsProduto___&quot; + seq[1], hAPI.getCardValue(&quot;txtObsProdutoDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;nmFabricante___&quot; + seq[1], hAPI.getCardValue(&quot;nmFabricanteDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtConsumoMedio___&quot; + seq[1], hAPI.getCardValue(&quot;txtConsumoMedioDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;txtContaContabil___&quot; + seq[1], hAPI.getCardValue(&quot;txtContaContabilDesv___&quot; + seq[1])]);&#xd;
            arrayCampos.push([&quot;tipoProduto___&quot; + seq[1], hAPI.getCardValue(&quot;tipoProdutoDesv___&quot; + seq[1])]);&#xd;
&#xd;
            count++;&#xd;
        }&#xd;
    }&#xd;
&#xd;
    log.info(&quot;#### &quot; + processo + &quot; TOTAL DE FILHOS: &quot; + count);&#xd;
&#xd;
    for (var index = 0; index &lt; arrayCampos.length; index++) {&#xd;
        var campoValor = workflowEngineServiceProvider.instantiate(&apos;br.com.oncoclinicas.fluig.StringArrayArray&apos;);&#xd;
        var campoX = arrayCampos[index][0]&#xd;
        var valorX = arrayCampos[index][1]&#xd;
&#xd;
        campoValor.getItem().add(campoX);&#xd;
        campoValor.getItem().add(valorX);&#xd;
        cardData.getItem().add(campoValor);&#xd;
    }&#xd;
&#xd;
    log.info(processo + &apos; colleagueIds&apos;);&#xd;
    log.dir(colleagueIds);&#xd;
    log.info(&apos;___________________________&apos;)&#xd;
    log.info(processo + &apos;  Dados para gerar itens devinculados:&apos;);&#xd;
    log.dir(cardData);&#xd;
&#xd;
&#xd;
    var rest = workflowEngineService.startProcess(&#xd;
        &quot;integrador.fluig@oncoclinicas.com&quot;,    // matrícula do usuário integrador&#xd;
        &quot;hUbust*7&quot;,                             // senha do usuário&#xd;
        1,                                      // código da empresa&#xd;
        &quot;SolicitacaoCompras&quot;,                   // código do processo&#xd;
        1,                                      // código da atividade para qual a solicitação vai ser movimentada&#xd;
        colleagueIds,&#xd;
        &quot;Aberto a solicitação de Compras dos itens desvinculados Nº &quot; + processo + &quot;.&quot;, // Comentário da movimentação&#xd;
        idRequisitante,                         // Usuário que ficará como o inicializador da solicitação. O usuário integrador precisa ter personificação caso seja um usuário diferente do integrador                           &#xd;
        true,                                   // Se vai completar a tarefa inicial (true) ou não, vai apenas salvar a solicitação para gerar um código e preencher o formulário, anexos e comentários&#xd;
        processAttachmentDtoArray,              // Lista de anexos. Mesmo que não seja enviado nenhum, é necessário enviar a lista vazia&#xd;
        cardData,                               // Dados do formulário. Mesmo que não tenha formulário ou não seja preenchido, é necessário enviar a lista vazia&#xd;
        processTaskAppointmentDtoArray,         // Apontamentos da solicitação. Não é mais utilizado, mas por compatibilidade é necessário enviar a lista vazia&#xd;
        false                                   // Se a movimentação é feita como usuário responsável pela atividade ou como gestor do processo&#xd;
    );&#xd;
&#xd;
    var iProcess = &quot;&quot;;&#xd;
    for (var j = 0; j &lt; rest.getItem().size(); j++) {&#xd;
        var item = rest.getItem().get(j).getItem();&#xd;
        var key = item.get(0);&#xd;
        var value = item.get(1);&#xd;
        if (key == &quot;iProcess&quot;) {&#xd;
            iProcess = value;&#xd;
        }&#xd;
    }&#xd;
&#xd;
    if (parseInt(iProcess) &gt; 0)&#xd;
        log.info(processo + &apos; gerou SolicitacaoCompras: &apos; + iProcess);&#xd;
    else {&#xd;
        log.error(&quot;servicetask228 - criaDesvinculados SC: &quot; + processo);&#xd;
        log.dir(rest);&#xd;
        var retorno = stringArrayArrayToSimpleObject(rest);&#xd;
        throw &quot;Falha na criação da nova solicitação de itens desvinculados! Favor acionar o suporte (servicetask228 - criaDesvinculados) &quot; + retorno.ERROR;&#xd;
    }&#xd;
}&#xd;
&#xd;
function stringArrayArrayToSimpleObject(stringArrayArray) {&#xd;
    var objeto = {};&#xd;
    for (var i = 0; i &lt; stringArrayArray.getItem().size(); i++) {&#xd;
        var item = stringArrayArray.getItem().get(i).getItem();&#xd;
        objeto[item.get(0)] = item.get(1);&#xd;
    }&#xd;
&#xd;
    return objeto;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask228</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask228(attempt, message) {&#xd;
    log.info(&apos;servicetask228 &apos;);&#xd;
&#xd;
    criaDesvinculados();&#xd;
&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_calculoSLA_1-0-4</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var mesesExtensoObj = {&#xd;
    &quot;01&quot;  : &quot;Janeiro&quot;,&#xd;
    &quot;02&quot;  : &quot;Fevereiro&quot;,&#xd;
    &quot;03&quot;  : &quot;Março&quot;,&#xd;
    &quot;04&quot;  : &quot;Abril&quot;,&#xd;
    &quot;05&quot;  : &quot;Maio&quot;,&#xd;
    &quot;06&quot;  : &quot;Junho&quot;,&#xd;
    &quot;07&quot;  : &quot;Julho&quot;,&#xd;
    &quot;08&quot;  : &quot;Agosto&quot;,&#xd;
    &quot;09&quot;  : &quot;Setembro&quot;,&#xd;
    &quot;10&quot; : &quot;Outubro&quot;,&#xd;
    &quot;11&quot; : &quot;Novembro&quot;,&#xd;
    &quot;12&quot; : &quot;Dezembro&quot;&#xd;
}&#xd;
&#xd;
var mesesObj = {&#xd;
		&apos;Jan&apos; : 1, &#xd;
		&apos;Feb&apos; : 2, &#xd;
		&apos;Mar&apos; : 3, &#xd;
		&apos;Apr&apos; : 4, &#xd;
		&apos;May&apos; : 5, &#xd;
		&apos;Jun&apos; : 6, &#xd;
		&apos;Jul&apos; : 7, &#xd;
		&apos;Aug&apos; : 8, &#xd;
		&apos;Sep&apos; : 9, &#xd;
		&apos;Oct&apos; : 10, &#xd;
		&apos;Nov&apos; : 11, &#xd;
		&apos;Dec&apos; : 12&#xd;
	    &#xd;
	}&#xd;
&#xd;
var mesesIngles = {&#xd;
		0 : &quot;January&quot;, &#xd;
		1 : &quot;February&quot;, &#xd;
		2 : &quot;March&quot;, &#xd;
		3 : &quot;April&quot;, &#xd;
		4 : &quot;May&quot;, &#xd;
		5 : &quot;June&quot;, &#xd;
		6 : &quot;July&quot;, &#xd;
		7 : &quot;August&quot;, &#xd;
		8 : &quot;September&quot;, &#xd;
		9 : &quot;October&quot;, &#xd;
		10 : &quot;November&quot;, &#xd;
		11 : &quot;December&quot;&#xd;
	    &#xd;
	}&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * @param dia&#xd;
 * @param mes&#xd;
 * @param ano&#xd;
 * @param hora&#xd;
 * @param minuto&#xd;
 * @returns Hora no formato dd/mm/aaaa hh:mm&#xd;
 */&#xd;
function formatarDataAnalytics(dia, mes, ano, hora, minuto,segundos){&#xd;
	if((dia+&quot;&quot;).length == 1)&#xd;
		dia = &quot;0&quot;+dia;	&#xd;
	if((mes+&quot;&quot;).length == 1)&#xd;
		mes = &quot;0&quot;+mes;&#xd;
	if((hora+&quot;&quot;).length == 1)&#xd;
		hora = &quot;0&quot;+hora;&#xd;
	if((minuto+&quot;&quot;).length == 1)&#xd;
		minuto = &quot;0&quot;+minuto;&#xd;
	if((segundos+&quot;&quot;).length == 1)&#xd;
		segundos = &quot;0&quot;+segundos;&#xd;
	return dia+&quot;/&quot;+mes+&quot;/&quot;+ano+&quot; &quot;+hora+&quot;:&quot;+minuto+&quot;:&quot;+segundos;&#xd;
}&#xd;
&#xd;
&#xd;
function buscaDataFormatada(campoData, campoHora){&#xd;
	var dataInicio = hAPI.getCardValue(campoData);&#xd;
	if (dataInicio == null) {&#xd;
		dataInicio=&quot;&quot;;&#xd;
	}&#xd;
	var dataFormatada = &quot; &quot;;&#xd;
	if(dataInicio == &quot;&quot; || dataInicio == null){&#xd;
		var dataAtual = new Date();&#xd;
		dataFormatada = formatarDataAnalytics(dataAtual.getDate(), (dataAtual.getMonth()+1), dataAtual.getFullYear(), dataAtual.getHours(), dataAtual.getMinutes(), dataAtual.getSeconds());&#xd;
	}else{&#xd;
		dataFormatada = hAPI.getCardValue(campoData)+&quot; &quot;+hAPI.getCardValue(campoHora);&#xd;
	}&#xd;
&#xd;
	return dataFormatada;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
function converteDateParaString(dataObj){&#xd;
	var dataFormatada = formatarDataAnalytics(dataObj.getDate(), (dataObj.getMonth()+1), dataObj.getFullYear(), dataObj.getHours(), dataObj.getMinutes(), dataObj.getSeconds());&#xd;
	return dataFormatada;&#xd;
}&#xd;
&#xd;
function montaTimeStamp(data, horario, tipoRetorno){&#xd;
	&#xd;
	var dia;&#xd;
	var mes;&#xd;
	var ano;&#xd;
	&#xd;
	dia = data.split(&quot; &quot;)[0].split(&quot;/&quot;)[0];&#xd;
	&#xd;
	mes = data.split(&quot; &quot;)[0].split(&quot;/&quot;)[1]+&quot;&quot;;&#xd;
	mes = parseInt(mes, 10);&#xd;
	mes = mes;&#xd;
	&#xd;
	ano = data.split(&quot; &quot;)[0].split(&quot;/&quot;)[2];&#xd;
	&#xd;
	var dataRetorno&#xd;
	if(tipoRetorno == &quot;string&quot;){&#xd;
		var hora = horario.split(&quot;:&quot;)[0];&#xd;
		var minuto = horario.split(&quot;:&quot;)[1];&#xd;
		var segundos = horario.split(&quot;:&quot;)[2];&#xd;
		dataRetorno = formatarDataAnalytics(dia, mes, ano, hora, minuto, segundos);&#xd;
	}else{&#xd;
		dataRetorno = new Date(mesesIngles[parseInt(mes)-1]+&quot; &quot;+dia+&quot;, &quot;+ano+&quot; &quot;+horario);&#xd;
		//dataRetorno.setSeconds(0);&#xd;
		//dataRetorno.setMilliseconds(0);&#xd;
	}&#xd;
	&#xd;
	return dataRetorno;&#xd;
	&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna o dataset com os valores do pré cadastro de prazos de SLA&#xd;
 * &#xd;
 * &#xd;
 */&#xd;
function buscaDatasetPrazosSLA(){&#xd;
	&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;metadata#active&quot;, &quot;true&quot;, &quot;true&quot;, ConstraintType.MUST);&#xd;
	var dataset = DatasetFactory.getDataset(&quot;ds_prazo_sla_form&quot;,null,new Array(c1),null);&#xd;
	&#xd;
	&#xd;
	return dataset;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o dataset com os valores do pré cadastro de um SLA especifico&#xd;
 * &#xd;
 * &#xd;
 */&#xd;
// function buscaDatasetPrazosSLAEspecifico(codigo_sla){&#xd;
	&#xd;
// 	var sla = {&#xd;
// 			codigo_sla : codigo_sla,&#xd;
// 			prazo_sla : &quot;&quot;,&#xd;
// 			medida_prazo : &quot;&quot;&#xd;
// 	};&#xd;
	&#xd;
// 	var c1 = DatasetFactory.createConstraint(&quot;metadata#active&quot;, &quot;true&quot;, &quot;true&quot;, ConstraintType.MUST);&#xd;
// 	var c2 = DatasetFactory.createConstraint(&quot;codigo_sla&quot;, codigo_sla, codigo_sla, ConstraintType.MUST);&#xd;
// 	var prazosSLA = DatasetFactory.getDataset(&quot;ds_prazo_sla_form&quot;,null,new Array(c1,c2),null);&#xd;
	&#xd;
// 	if(prazosSLA.rowsCount &gt; 0){&#xd;
// 		sla = {&#xd;
// 				codigo_sla : codigo_sla,&#xd;
// 				prazo_sla : prazosSLA.getValue(0,&quot;prazo_sla&quot;),&#xd;
// 				medida_prazo : prazosSLA.getValue(0,&quot;medida_prazo&quot;)&#xd;
// 		};&#xd;
// 	}&#xd;
	&#xd;
	&#xd;
// 	return sla;&#xd;
// }&#xd;
&#xd;
/**&#xd;
 * Retorno o objeto com os dados dos sla especifico&#xd;
 * &#xd;
 * @param codigoSLA código do sla especifico&#xd;
 * @param prazosSLA dataset com todos os dados&#xd;
 * @returns obejto sla&#xd;
 */&#xd;
&#xd;
// function buscaSLA(codigoSLA, prazosSLA){&#xd;
// 	var sla = null;&#xd;
// 	for (var i = 0; i &lt; prazosSLA.rowsCount; i++) {&#xd;
// 		if(prazosSLA.getValue(i,&quot;codigo_sla&quot;) == codigoSLA){&#xd;
			&#xd;
// 			sla = {&#xd;
// 					codigo_sla : codigoSLA,&#xd;
// 					prazo_sla : prazosSLA.getValue(i,&quot;prazo_sla&quot;),&#xd;
// 					medida_prazo : prazosSLA.getValue(i,&quot;medida_prazo&quot;)&#xd;
// 			};&#xd;
// 			break;&#xd;
// 		}&#xd;
// 	}&#xd;
	&#xd;
// 	return sla;&#xd;
// }&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * Metodo que lista as atividades que estão atrasadas em um processo&#xd;
 * &#xd;
 * @param tempoGasto&#xd;
 * @param codigoSLA&#xd;
 * @returns {String}&#xd;
 */&#xd;
&#xd;
function listaAtividadesAtrasadas(tempoGasto, codigoSLA){&#xd;
	var atividadeAtrasada = false;&#xd;
	var currentState = parseInt(getValue(&quot;WKNumState&quot;));&#xd;
	&#xd;
	var atividadesAtrasadas = hAPI.getCardValue(&quot;atividadesAtrasadas&quot;); &#xd;
	var atividadesAtrasadasArray = atividadesAtrasadas.split(&quot;,&quot;);&#xd;
&#xd;
	if(tempoGasto &gt; 3){&#xd;
		atividadeAtrasada = true;&#xd;
		&#xd;
		if(atividadesAtrasadas != &quot;&quot;){&#xd;
			var atividadeAtrasadaCadastrada = false;&#xd;
			&#xd;
			for (var i = 0; i &lt; atividadesAtrasadasArray.length; i++) {&#xd;
				if(atividadesAtrasadasArray[i] == currentState){&#xd;
					atividadeAtrasadaCadastrada = true;&#xd;
					break;&#xd;
				}&#xd;
			}&#xd;
			&#xd;
			if(atividadeAtrasadaCadastrada == false){&#xd;
				atividadesAtrasadas = atividadesAtrasadas + &quot;,&quot;+currentState;&#xd;
			}&#xd;
		}else{&#xd;
			atividadesAtrasadas = currentState;&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	return atividadesAtrasadas;&#xd;
	&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * Retorna o prazo do SLA em segundos &#xd;
 * &#xd;
 * &#xd;
 * @param sla objeto sla&#xd;
 * @returns prazo em minutos&#xd;
 */&#xd;
// function calculaPrazoSegundos(sla, expediente){&#xd;
	&#xd;
	&#xd;
// 	var	 prazo = 0;&#xd;
// 	var prazoSLA = sla.prazo_sla;&#xd;
	&#xd;
// 	if(sla.medida_prazo == &quot;minutos&quot;){&#xd;
// 		prazo = prazoSLA *60;&#xd;
// 	}else if(sla.medida_prazo == &quot;horas&quot;){&#xd;
// 		prazo = prazoSLA * 60 * 60;&#xd;
// 	}else if(sla.medida_prazo == &quot;dias&quot;){&#xd;
		&#xd;
// 		var c1 = DatasetFactory.createConstraint(&quot;businessPeriodPK.periodId&quot;, expediente, expediente, ConstraintType.MUST);&#xd;
// 		var c2 = DatasetFactory.createConstraint(&quot;businessPeriodPK.weekDay&quot;, &quot;2&quot;, &quot;2&quot;, ConstraintType.MUST);&#xd;
// 		var dataset_expediente = DatasetFactory.getDataset(&quot;businessPeriod&quot;, null, new Array(c1), null);&#xd;
		&#xd;
// 		var prazoDia = (parseInt(dataset_expediente.getValue(0,&quot;finalHour&quot;)) - parseInt(dataset_expediente.getValue(0,&quot;initialHour&quot;)));&#xd;
// 		prazoDia = prazoDia + (parseInt(dataset_expediente.getValue(1,&quot;finalHour&quot;)) - parseInt(dataset_expediente.getValue(1,&quot;initialHour&quot;)));&#xd;
		&#xd;
// 		prazo = prazoSLA * prazoDia;&#xd;
// 	}&#xd;
		&#xd;
// 	return prazo;&#xd;
		&#xd;
// }&#xd;
&#xd;
&#xd;
/**&#xd;
 * Calcula em segundos o tempo gasto da atividade, do prazo informado até a data atual ou até o prazo informado&#xd;
 * &#xd;
 * @param dataInicialCampo&#xd;
 * @param expediente&#xd;
 * @param dataPrazoFinal&#xd;
 * @returns tempo gasto&#xd;
 *  &#xd;
 */&#xd;
function calculaTempoGasto(dataInicialCampo ,expediente, dataPrazoFinal){&#xd;
	&#xd;
	//busca dataset de expediente e feriados&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;businessPeriodPK.periodId&quot;, expediente, expediente, ConstraintType.MUST);&#xd;
	var dataset_expediente = DatasetFactory.getDataset(&quot;businessPeriod&quot;, null, new Array(c1), null);&#xd;
	var dataset_feriados = DatasetFactory.getDataset(&quot;globalCalendar&quot;, null, null, null);&#xd;
	&#xd;
	//instancia data atual&#xd;
	var dataAtual;&#xd;
	if(dataPrazoFinal == undefined || dataPrazoFinal == null || dataPrazoFinal == &quot;&quot;){&#xd;
		dataAtual = new Date();&#xd;
		dataAtual.setSeconds(0);&#xd;
		dataAtual.setMilliseconds(0);&#xd;
	}else{&#xd;
		&#xd;
		dataAtual = montaTimeStamp(dataPrazoFinal.split(&quot; &quot;)[0], dataPrazoFinal.split(&quot; &quot;)[1], &quot;data&quot;);&#xd;
	}&#xd;
	&#xd;
&#xd;
	if(dataInicialCampo.split(&quot; &quot;)[0].indexOf(&quot;-&quot;) &gt; -1){&#xd;
		dataInicialCampo.replace(&quot;-&quot;,&quot;/&quot;);&#xd;
	}&#xd;
	&#xd;
	var dataInicial = montaTimeStamp(dataInicialCampo.split(&quot; &quot;)[0], dataInicialCampo.split(&quot; &quot;)[1], &quot;data&quot;);&#xd;
	var dataInicialOriginal = montaTimeStamp(dataInicialCampo.split(&quot; &quot;)[0], dataInicialCampo.split(&quot; &quot;)[1], &quot;data&quot;);&#xd;
	&#xd;
	var tentativas = 0;&#xd;
	var tempoGasto = 0;&#xd;
	&#xd;
	&#xd;
	&#xd;
	while ((dataAtual.getTime() != dataInicial.getTime()) &amp;&amp; tentativas &lt; 300){&#xd;
		tentativas = tentativas + 1;&#xd;
		&#xd;
		//validando dias uteis&#xd;
		var isWorkingDay = true;&#xd;
		var sabado_util = false;&#xd;
		var domingo_util = false;&#xd;
		var feriado = false;&#xd;
		&#xd;
		for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
			if (parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == 7) {&#xd;
				sabado_util = true;&#xd;
				break;&#xd;
			}&#xd;
		}&#xd;
		if (dataInicial.getDay() == 6 &amp;&amp; !(sabado_util)) {&#xd;
			isWorkingDay = false;&#xd;
		}&#xd;
		&#xd;
		for (var d = 0; d &lt; dataset_expediente.rowsCount; d++) {&#xd;
			if (parseInt(dataset_expediente.getValue(d,&quot;businessPeriodPK.weekDay&quot;)) == 1) {&#xd;
				domingo_util = true;&#xd;
				break;&#xd;
			}&#xd;
		}&#xd;
		if (dataInicial.getDay() == 0 &amp;&amp; !(domingo_util)) {&#xd;
			isWorkingDay = false;&#xd;
		}&#xd;
		&#xd;
		for (var f = 0; f &lt; dataset_feriados.rowsCount; f++) {&#xd;
			if (parseInt(dataset_feriados.getValue(f,&quot;holidayYear&quot;)) == 0 || dataInicial.getFullYear() == parseInt(dataset_feriados.getValue(f,&quot;holidayYear&quot;))) {&#xd;
				if ((dataInicial.getMonth() + 1) == parseInt(dataset_feriados.getValue(f,&quot;holidayMonth&quot;))) {&#xd;
					if (dataInicial.getDate() == parseInt(dataset_feriados.getValue(f,&quot;holidayDay&quot;))) {&#xd;
						feriado = true;&#xd;
						break;&#xd;
					}&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
		&#xd;
		if (feriado) {&#xd;
			isWorkingDay = false;&#xd;
		}&#xd;
		&#xd;
		if (!isWorkingDay) {&#xd;
			continue;&#xd;
		}&#xd;
		&#xd;
		if((dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &gt; dataInicial.getDate()	) ||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate())||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &lt; dataInicial.getDate() ||&#xd;
				&#xd;
				dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &lt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &gt; dataInicial.getDate()	) ||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &lt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate())||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &lt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &lt; dataInicial.getDate() ||&#xd;
				&#xd;
				dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &gt; dataInicial.getDate()	) ||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate())||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &lt; dataInicial.getDate()&#xd;
				&#xd;
				)&#xd;
			){&#xd;
				var horasCalculadas = retornaHorasUteisDia(dataInicialOriginal, dataInicial, dataset_expediente);&#xd;
				tempoGasto = tempoGasto + horasCalculadas;&#xd;
				dataInicial.setDate( dataInicial.getDate() +1 );&#xd;
				&#xd;
				var periodoInicial = buscaHoraInicial(dataInicial, dataset_expediente);&#xd;
				dataInicial.setHours(parseInt(periodoInicial.split(&quot;:&quot;)[0]));&#xd;
				dataInicial.setMinutes(parseInt(periodoInicial.split(&quot;:&quot;)[1]));&#xd;
				//setar hora inicial proximo dia&#xd;
		}else if((dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
			dataAtual.getDate() &gt; dataInicial.getDate()	) ||&#xd;
			&#xd;
			(dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
			dataAtual.getDate() == dataInicial.getDate())||&#xd;
			&#xd;
			(dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
			dataAtual.getDate() &lt; dataInicial.getDate())&#xd;
		){&#xd;
				var horasCalculadas = retornaHorasUteisDia(dataInicialOriginal, dataInicial, dataset_expediente);&#xd;
				tempoGasto = tempoGasto + horasCalculadas;&#xd;
				dataInicial.setDate( dataInicial.getDate() +1 );&#xd;
				var periodoInicial = buscaHoraInicial(dataInicial, dataset_expediente);&#xd;
				dataInicial.setHours(parseInt(periodoInicial.split(&quot;:&quot;)[0]));&#xd;
				dataInicial.setMinutes(parseInt(periodoInicial.split(&quot;:&quot;)[1]));&#xd;
		}else if(dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
			dataAtual.getDate() &gt; dataInicial.getDate()	)&#xd;
		{&#xd;
				var horasCalculadas = retornaHorasUteisDia(dataInicialOriginal, dataInicial, dataset_expediente);&#xd;
				tempoGasto = tempoGasto + horasCalculadas;&#xd;
				var periodoInicial = buscaHoraInicial(dataInicial, dataset_expediente);&#xd;
				dataInicial.setDate( dataInicial.getDate() +1 );&#xd;
				dataInicial.setHours(parseInt(periodoInicial.split(&quot;:&quot;)[0]+&quot;&quot;));&#xd;
				dataInicial.setMinutes(parseInt(periodoInicial.split(&quot;:&quot;)[1]+&quot;&quot;));&#xd;
		}else if(dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate() &amp;&amp;&#xd;
				dataAtual.getHours() &gt; dataInicial.getHours())&#xd;
		{&#xd;
			var horasCalculadas =  calculaHoraDoPeriodo(dataInicial, dataAtual, dataset_expediente, &quot;hora&quot;);&#xd;
			tempoGasto = tempoGasto + horasCalculadas;//horasCalculadas;&#xd;
			dataInicial.setHours( dataInicial.getHours() +1 );&#xd;
		}else if(dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate() &amp;&amp;&#xd;
				dataAtual.getHours() &lt; dataInicial.getHours())&#xd;
		{&#xd;
//			var horasCalculadas =  calculaHoraDoPeriodo(dataInicial, dataset_expediente, &quot;hora&quot;);&#xd;
//			segundos = segundos - horasCalculadas;//horasCalculadas;&#xd;
			dataInicial.setHours( dataInicial.getHours() -1 );&#xd;
		}else if(dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate() &amp;&amp;&#xd;
				dataAtual.getHours() == dataInicial.getHours() &amp;&amp;&#xd;
				dataAtual.getMinutes() &gt; dataInicial.getMinutes())&#xd;
		{&#xd;
			var horasCalculadas =  calculaMinutosDoPeriodo(dataInicial, dataset_expediente, &quot;minuto&quot;);&#xd;
			tempoGasto = tempoGasto + horasCalculadas;&#xd;
			dataInicial.setMinutes( dataInicial.getMinutes() +1 );&#xd;
		}&#xd;
		&#xd;
			&#xd;
			&#xd;
	}&#xd;
	&#xd;
	&#xd;
	return tempoGasto;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna a quantidade de horas uteis em um dia&#xd;
 * &#xd;
 * @param dataInicialOriginal &#xd;
 * @param data&#xd;
 * @param dataset_expediente&#xd;
 * @returns {Number}&#xd;
 */&#xd;
function retornaHorasUteisDia(dataInicialOriginal, data, dataset_expediente){&#xd;
	var segundos = 0;&#xd;
	&#xd;
	var horaInicio1 = 0;&#xd;
	var horaFim1 = 0;&#xd;
	var horaInicio2 = 0;&#xd;
	var horaFim2 = 0;&#xd;
	&#xd;
	for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
		&#xd;
		if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1){&#xd;
			&#xd;
			horaInicio1 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim1 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		&#xd;
		}else if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 2){&#xd;
			horaInicio2 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim2 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	&#xd;
	if(data.getDay() == dataInicialOriginal.getDay() &amp;&amp; &#xd;
			data.getMonth() == dataInicialOriginal.getMonth() &amp;&amp;&#xd;
			data.getFullYear() == dataInicialOriginal.getFullYear() ){&#xd;
		&#xd;
		var horaPrazo = (dataInicialOriginal.getMinutes() * 60) + (dataInicialOriginal.getHours() * 3600);&#xd;
		horaPrazo = parseInt(horaPrazo+&quot;&quot;);&#xd;
		&#xd;
		&#xd;
		//:::::::1::::::   :::::::::::::::::::::2:::::::::::::::::::	:::::::3::::::	   ::::::::::::::::::::4:::::::::::::::::::	:::::::5::::::&#xd;
		//			       ::horaInicio1::::::::::::::::::horaFim1::                       ::horaInicio2:::::::::::::::::horaFim2::&#xd;
		&#xd;
		if(horaPrazo &lt; horaInicio1){&#xd;
			&#xd;
			//////////1&#xd;
			segundos = segundos + (horaFim1 - horaInicio1);&#xd;
			segundos = segundos + (horaFim2 - horaInicio2);&#xd;
			&#xd;
		}else if(horaPrazo &gt;= horaInicio1 &amp;&amp; &#xd;
				horaPrazo &lt;= horaFim1 ){&#xd;
				&#xd;
			//////////2&#xd;
			segundos = segundos + (horaFim1 - horaPrazo);&#xd;
			segundos = segundos + (horaFim2 - horaInicio2);&#xd;
			&#xd;
		}else if(horaPrazo &gt; horaFim1 &amp;&amp; &#xd;
				horaPrazo &lt; horaInicio2 ){&#xd;
			&#xd;
			//////////3&#xd;
			segundos = segundos + (horaFim2 - horaInicio2);&#xd;
			&#xd;
		}else if(horaPrazo &gt;= horaInicio2 &amp;&amp; &#xd;
				horaPrazo &lt;= horaFim2 ){&#xd;
			&#xd;
			//////////5&#xd;
			segundos = segundos + (horaFim2 - horaPrazo);&#xd;
			&#xd;
		}&#xd;
	}else{&#xd;
		segundos = segundos + (horaFim1 - horaInicio1);&#xd;
		segundos = segundos + (horaFim2 - horaInicio2);&#xd;
	}&#xd;
	return segundos;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna (em segundos) as horas uteis em um período&#xd;
 * &#xd;
 * @param data - data inicial para calculo&#xd;
 * @param dataset_expediente&#xd;
 * @returns tempo gasto em segundos &#xd;
 */&#xd;
function calculaHoraDoPeriodo(data, dataFinal, dataset_expediente, tipoCalculo){&#xd;
	&#xd;
	var segundos = 0;&#xd;
	&#xd;
	var horaInicio1 = 0;&#xd;
	var horaFim1 = 0;&#xd;
	var horaInicio2 = 0;&#xd;
	var horaFim2 = 0;&#xd;
	&#xd;
	var multiplicador = 0;&#xd;
	var multiplicadorPrazo = 0;&#xd;
	&#xd;
	if(tipoCalculo == &quot;hora&quot;){&#xd;
		multiplicador = 3600;&#xd;
		multiplicadorPrazo = 3600;&#xd;
	}else{&#xd;
		multiplicador = 60;&#xd;
		multiplicadorPrazo = 1;&#xd;
	}	&#xd;
	&#xd;
	for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {		&#xd;
		&#xd;
		if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1){&#xd;
			&#xd;
			horaInicio1 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim1 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		&#xd;
		}else if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 2){&#xd;
			horaInicio2 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim2 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	var horaPrazo = (data.getMinutes() * 60) + (data.getHours() * 3600);&#xd;
	horaPrazo = parseInt(horaPrazo+&quot;&quot;);	&#xd;
&#xd;
	var horaFimPrazo = (data.getMinutes() * 60) + (data.getHours() * 3600) + 3600;&#xd;
	var horaFimPrazoOriginal = (dataFinal.getMinutes() * 60) + (dataFinal.getHours() * 3600);&#xd;
	horaFimPrazo = parseInt(horaFimPrazo+&quot;&quot;);&#xd;
	horaFimPrazoOriginal = parseInt(horaFimPrazoOriginal+&quot;&quot;);&#xd;
	&#xd;
	//         :::::::1::::::	:::::::2::::::	:::::::3::::::	:::::::4::::::	:::::::5::::::	:::::::6::::::	:::::::7::::::&#xd;
	//            ::horaInicio1::::::::::::::::::horaFim1::                        ::horaInicio2:::::::::::::::::horaFim2::&#xd;
	&#xd;
	if(horaPrazo &lt; horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaInicio1){&#xd;
		&#xd;
	}else if(horaPrazo &lt; horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &gt; horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaFim1 ){&#xd;
		&#xd;
		//////////1&#xd;
		segundos = horaFimPrazo - horaInicio1;&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaFim1 ){&#xd;
			&#xd;
		//////////2&#xd;
		//segundos = multiplicador;&#xd;
		if ((horaFimPrazoOriginal - horaPrazo) &gt; multiplicador) {&#xd;
			segundos = multiplicador;&#xd;
		} else {&#xd;
			segundos = horaFimPrazoOriginal - horaPrazo;&#xd;
		}&#xd;
		&#xd;
	}else if(horaPrazo &lt; horaFim1 &amp;&amp; &#xd;
			horaFimPrazo &gt; horaFim1 &amp;&amp; &#xd;
			horaPrazo &gt;= horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaInicio2){&#xd;
&#xd;
		//////////3&#xd;
		segundos = horaFim1 - horaPrazo;&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaFim1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaInicio2 ){&#xd;
		&#xd;
		//////////4&#xd;
		&#xd;
	}else if(horaPrazo &lt; horaInicio2 &amp;&amp; &#xd;
			horaFimPrazo &gt; horaInicio2 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaFim2 &amp;&amp;&#xd;
			horaPrazo &gt;= horaFim1){&#xd;
		&#xd;
		//////////5&#xd;
		segundos = horaFimPrazo - horaInicio2;&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaInicio2 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaFim2 ){		&#xd;
		//////////6&#xd;
		//segundos = multiplicador;&#xd;
		if ((horaFimPrazoOriginal - horaPrazo) &gt; multiplicador) {&#xd;
			segundos = multiplicador;&#xd;
		} else {&#xd;
			segundos = horaFimPrazoOriginal - horaPrazo;&#xd;
		}&#xd;
		&#xd;
	}else if(horaPrazo &gt; horaInicio2 &amp;&amp; &#xd;
			horaPrazo &lt; horaFim2 &amp;&amp; &#xd;
			horaFimPrazo &gt; horaFim2){&#xd;
		&#xd;
		//////////7&#xd;
		segundos = horaFim2 - horaPrazo;&#xd;
		&#xd;
	}&#xd;
&#xd;
	return segundos;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna (em segundos) os minutos uteis em um período&#xd;
 * &#xd;
 * @param data data inicial para calculo&#xd;
 * @param dataset_expediente&#xd;
 * @returns tempo gasto segundos&#xd;
 */&#xd;
function calculaMinutosDoPeriodo(data, dataset_expediente, tipoCalculo){&#xd;
	&#xd;
	var segundos = 0;&#xd;
	&#xd;
	var horaInicio1 = 0;&#xd;
	var horaFim1 = 0;&#xd;
	var horaInicio2 = 0;&#xd;
	var horaFim2 = 0;&#xd;
	&#xd;
	var multiplicador = 0;&#xd;
	var multiplicadorPrazo = 0;&#xd;
	&#xd;
	if(tipoCalculo == &quot;hora&quot;){&#xd;
		multiplicador = 3600;&#xd;
		multiplicadorPrazo = 3600;&#xd;
	}else{&#xd;
		multiplicador = 60;&#xd;
		multiplicadorPrazo = 1;&#xd;
	}	&#xd;
	&#xd;
	for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
		&#xd;
		if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1){&#xd;
			&#xd;
			horaInicio1 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim1 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		&#xd;
		}else if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 2){&#xd;
			horaInicio2 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim2 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	&#xd;
	&#xd;
	var horaPrazo = (data.getMinutes() * 60) + (data.getHours() * 3600);&#xd;
	horaPrazo = parseInt(horaPrazo+&quot;&quot;);&#xd;
	&#xd;
	//:::::::1::::::   :::::::::::::::::::::2:::::::::::::::::::	:::::::3::::::	   ::::::::::::::::::::4:::::::::::::::::::	:::::::5::::::&#xd;
	//			       ::horaInicio1::::::::::::::::::horaFim1::                       ::horaInicio2:::::::::::::::::horaFim2::&#xd;
	&#xd;
	if(horaPrazo &lt; horaInicio1){&#xd;
		&#xd;
		//////////1&#xd;
//		segundos = segundos + (horaFim1 - horaInicio1);&#xd;
//		segundos = segundos + (horaFim2 - horaInicio2);&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaInicio1 &amp;&amp; &#xd;
			horaPrazo &lt;= horaFim1 ){&#xd;
			&#xd;
		//////////2&#xd;
		segundos = 60;&#xd;
//		segundos = segundos + (horaFim1 - horaPrazo);&#xd;
//		segundos = segundos + (horaFim2 - horaInicio2);&#xd;
		&#xd;
	}else if(horaPrazo &gt; horaFim1 &amp;&amp; &#xd;
			horaPrazo &lt; horaInicio2 ){&#xd;
		&#xd;
		//////////3&#xd;
//		segundos = segundos + (horaFim2 - horaInicio2);&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaInicio2 &amp;&amp; &#xd;
			horaPrazo &lt;= horaFim2 ){&#xd;
		&#xd;
		//////////5&#xd;
		segundos = 60;&#xd;
//		segundos = segundos + (horaFim2 - horaPrazo);&#xd;
		&#xd;
	}&#xd;
	return segundos;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * retira os 0 para não dar problema no parseInt parseInt(&quot;09&quot;) / parseInt(&quot;9&quot;)&#xd;
 * &#xd;
 * @param valor para retirar os zeros&#xd;
 * @returns data sem zero&#xd;
 */&#xd;
function removeZeroEsquerdaData(valor){&#xd;
	if((valor+&quot;&quot;).indexOf(&quot;0&quot;) == 0){&#xd;
		valor = (valor+&quot;&quot;).substring(1,2);&#xd;
	}&#xd;
	&#xd;
	return valor;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * @returns Nome da atividade&#xd;
 */&#xd;
function buscaNomeAtividade(){&#xd;
	var nomeAtividade = &quot;&quot;;&#xd;
	var processo = getValue(&quot;WKDef&quot;);&#xd;
	var versao = getValue(&quot;WKVersDef&quot;);&#xd;
	var atividade = getValue(&quot;WKNextState&quot;);&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;processStatePK.processId&quot;, processo, processo, ConstraintType.MUST);&#xd;
	var c2 = DatasetFactory.createConstraint(&quot;processStatePK.version&quot;, versao , versao, ConstraintType.MUST);&#xd;
	var c3 = DatasetFactory.createConstraint(&quot;processStatePK.sequence&quot;, atividade , atividade, ConstraintType.MUST);&#xd;
	var dataset_atividades = DatasetFactory.getDataset(&quot;processState&quot;, null, new Array(c1,c2,c3), null);&#xd;
	&#xd;
	if(dataset_atividades != null &amp;&amp; dataset_atividades.rowsCount &gt; 0){&#xd;
		nomeAtividade = dataset_atividades.getValue(0,&quot;stateDescription&quot;);&#xd;
	}&#xd;
	return nomeAtividade;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o status da solicitação se ela esta no prazo ou atrasado&#xd;
 * &#xd;
 * @param tempoGasto  - tempo gasto em segundos pela atividade&#xd;
 * @param prazoSLAMinutos - prazo da atividade tambem em segundos&#xd;
 * @returns status (No Prazo / Atrasada)&#xd;
 */&#xd;
function validaSituacao(tempoGasto, prazoSLAMinutos){&#xd;
	&#xd;
	var situacao = &quot;&quot;;&#xd;
	&#xd;
	if(parseInt(tempoGasto) &gt; parseInt(prazoSLAMinutos)){&#xd;
		situacao = &quot;Atrasada&quot;;&#xd;
	}else{&#xd;
		situacao = &quot;No Prazo&quot;;&#xd;
	}&#xd;
	&#xd;
	return situacao;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * Retorna o mes por extenso para usar nos filtros&#xd;
 * &#xd;
 * @param data&#xd;
 * @returns mes por extenso&#xd;
 */&#xd;
function retornaMesExtenso(data){&#xd;
	var dataSplit;&#xd;
	var mesExtenso = &quot; &quot;;&#xd;
	if(data != null &amp;&amp; data != &quot;&quot;){&#xd;
		if(data.indexOf(&quot;-&quot;) != -1){&#xd;
			dataSplit = data.split(&quot;-&quot;);&#xd;
			mesExtenso = mesesExtensoObj[dataSplit[1]+&quot;&quot;]+&quot;/&quot;+dataSplit[0];&#xd;
		}else{&#xd;
			dataSplit = data.split(&quot;/&quot;);&#xd;
			mesExtenso = mesesExtensoObj[dataSplit[1]+&quot;&quot;]+&quot;/&quot;+dataSplit[2];&#xd;
		}&#xd;
	}&#xd;
	return mesExtenso;&#xd;
	&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Busca hora inicial do periodo conforme o expediente&#xd;
 * &#xd;
 * @param dataInicial - data a ser consultada&#xd;
 * @param dataset_expediente&#xd;
 * @returns hora inicio do periodo (8:00)&#xd;
 */&#xd;
function buscaHoraInicial(dataInicial, dataset_expediente){&#xd;
	var diaDaSemana = dataInicial.getDay();&#xd;
	var segundos = 0;&#xd;
	var periodoInicial;&#xd;
	var periodoInicialSplit;&#xd;
	var periodoInicialRetorno;&#xd;
	for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
		if (parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == diaDaSemana &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1) {&#xd;
				segundos = dataset_expediente.getValue(s,&quot;initialHour&quot;);&#xd;
			break;&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	periodoInicial = parseInt(segundos) / 3600;&#xd;
	&#xd;
	if((periodoInicial+&quot;&quot;).indexOf(&quot;.&quot;) &gt; -1){&#xd;
		periodoInicialSplit = (periodoInicial+&quot;&quot;).split(&quot;.&quot;);&#xd;
		periodoInicialSplit[1] = (parseInt(periodoInicialSplit[1]) * 60) / 100;&#xd;
		periodoInicialRetorno = periodoInicialSplit[0]+&quot;:&quot;+periodoInicialSplit[1];&#xd;
	}else{&#xd;
		periodoInicialRetorno = periodoInicial+&quot;:0&quot;;&#xd;
	}&#xd;
	&#xd;
	return periodoInicialRetorno;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * Converte o tempo gasto de segundos para o especificado no pre cadastro de sla (minutos/horas/dias)&#xd;
 * &#xd;
 * @param tempoGasto - tempo gasto em segundos na atividade&#xd;
 * @param sla - sla especifico do item&#xd;
 * @param dataset_expediente dataset de expediente&#xd;
 * @returns prazo na medida especifoca do sla&#xd;
 */&#xd;
// function converteTempoGasto(tempoGasto, sla, expediente){&#xd;
	&#xd;
// 	var c1 = DatasetFactory.createConstraint(&quot;businessPeriodPK.periodId&quot;, expediente, expediente, ConstraintType.MUST);&#xd;
// 	var dataset_expediente = DatasetFactory.getDataset(&quot;businessPeriod&quot;, null, new Array(c1), null);&#xd;
	&#xd;
// 	var prazo = 0;&#xd;
// 	if(sla.medida_prazo == &quot;minutos&quot;){&#xd;
// 		prazo = tempoGasto / 60;&#xd;
// 	}else if(sla.medida_prazo == &quot;horas&quot;){&#xd;
// 		prazo = tempoGasto / 3600;&#xd;
// 	}else if(sla.medida_prazo == &quot;dias&quot;){&#xd;
		&#xd;
// 		var horaInicio1 = 0;&#xd;
// 		var horaFim1 = 0;&#xd;
// 		var horaInicio2 = 0;&#xd;
// 		var horaFim2 = 0;&#xd;
		&#xd;
// 		for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
			&#xd;
// 			if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == 2  &amp;&amp; &#xd;
// 					parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1){&#xd;
				&#xd;
// 				horaInicio1 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
// 				horaFim1 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
			&#xd;
// 				break;&#xd;
// 			}else if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == 2  &amp;&amp; &#xd;
// 					parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 2){&#xd;
// 				horaInicio2 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
// 				horaFim2 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
// 				break;&#xd;
// 			}&#xd;
// 		}&#xd;
		&#xd;
// 		var horasDia = parseInt(((horaFim2 - horaInicio2) + (horaFim1 - horaInicio1)) / 3600);&#xd;
		&#xd;
		&#xd;
// 		prazo = (tempoGasto / 3600) / horasDia;&#xd;
// 	}	&#xd;
	&#xd;
// 	return prazo;&#xd;
// }&#xd;
&#xd;
&#xd;
// function calculaPrazoConclusao(sla, expediente, atividadesDescartadas, primeirasAtividadesDescartadas, dataInicioParam, horaIncioParam, sequenceId){&#xd;
	&#xd;
	&#xd;
// 	var dataInicio = montaTimeStamp(dataInicioParam, horaIncioParam, &quot;data&quot;);&#xd;
	&#xd;
// 	var segundosPrazoDepoisMeiaNoite = (dataInicio.getMinutes() * 60) + (dataInicio.getHours() * 3600);&#xd;
	&#xd;
// 	var prazoMinutos = 0;&#xd;
	&#xd;
// 	if(sla.medida_prazo == &quot;minutos&quot;){&#xd;
// 		prazoMinutos = sla.prazo_sla;&#xd;
// 	}else if(sla.medida_prazo == &quot;horas&quot;){&#xd;
// 		prazoMinutos = sla.prazo_sla * 60;&#xd;
// 	}else if(sla.medida_prazo == &quot;dias&quot;){&#xd;
		&#xd;
// 		var c1 = DatasetFactory.createConstraint(&quot;businessPeriodPK.periodId&quot;, expediente, expediente, ConstraintType.MUST);&#xd;
// 		var c2 = DatasetFactory.createConstraint(&quot;businessPeriodPK.weekDay&quot;, &quot;2&quot;, &quot;2&quot;, ConstraintType.MUST);&#xd;
// 		var dataset_expediente = DatasetFactory.getDataset(&quot;businessPeriod&quot;, null, new Array(c1,c2), null);&#xd;
		&#xd;
// 		var minutosDia = parseInt(dataset_expediente.getValue(0,&quot;finalHour&quot;)+&quot;&quot;) - parseInt(dataset_expediente.getValue(0,&quot;initialHour&quot;)+&quot;&quot;); &#xd;
// 		minutosDia = minutosDia + (parseInt(dataset_expediente.getValue(1,&quot;finalHour&quot;)+&quot;&quot;) - parseInt(dataset_expediente.getValue(1,&quot;initialHour&quot;)+&quot;&quot;));&#xd;
		&#xd;
// 		minutosDia = minutosDia / 60;&#xd;
		&#xd;
// 		prazoMinutos = sla.prazo_sla * minutosDia;&#xd;
// 	}&#xd;
	&#xd;
// 	if(atividadesDescartadas != &quot;&quot;){&#xd;
// 		var dataset_data_tarefas = DatasetFactory.getDataset(&quot;sql_consulta_ultimo_movto_atividade&quot;, new Array(getValue(&quot;WKNumProces&quot;),atividadesDescartadas),null, null);&#xd;
		&#xd;
// 		if(dataset_data_tarefas != null &amp;&amp; dataset_data_tarefas.rowsCount &gt; 0){&#xd;
// 			var minutosDesconsiderados = calculaHorasDesconsiderar(dataset_data_tarefas);&#xd;
// 			prazoMinutos = parseInt(prazoMinutos) + parseInt(minutosDesconsiderados);&#xd;
// 		}&#xd;
		&#xd;
// 	}&#xd;
	&#xd;
// 	if(primeirasAtividadesDescartadas != &quot;&quot;){&#xd;
// 		var primeirasAtividadesDescartadasArray;&#xd;
// 		if(primeirasAtividadesDescartadas.indexOf(&quot;,&quot;) != -1){&#xd;
// 			primeirasAtividadesDescartadasArray = primeirasAtividadesDescartadas.split(&quot;,&quot;);&#xd;
// 		}&#xd;
// 		else{&#xd;
// 			primeirasAtividadesDescartadasArray = [primeirasAtividadesDescartadas];&#xd;
// 		}&#xd;
// 		for (var i = 0; i &lt; primeirasAtividadesDescartadasArray.length; i++) {&#xd;
// 			var dataset_data_tarefas_sem_ultima = DatasetFactory.getDataset(&quot;sql_consulta_data_tarefas_ultima_descartada&quot;, new Array(getValue(&quot;WKNumProces&quot;),primeirasAtividadesDescartadasArray[i]),null, null);&#xd;
			&#xd;
// 			var minutosDesconsiderados = calculaHorasDesconsiderar(dataset_data_tarefas_sem_ultima);&#xd;
// 			prazoMinutos = parseInt(prazoMinutos) + parseInt(minutosDesconsiderados);&#xd;
// 		}&#xd;
		&#xd;
// 	}&#xd;
	&#xd;
// 	if(sla.medida_prazo == &quot;minutos&quot; &amp;&amp; sla.prazo_sla != prazoMinutos){		&#xd;
// 		hAPI.setCardValue(&apos;analyticsPrazoSLA&apos;, prazoMinutos);&#xd;
		&#xd;
// 	}else if(sla.medida_prazo == &quot;horas&quot; &amp;&amp; sla.prazo_sla != prazoMinutos){&#xd;
// 		var prazoHoras = prazoMinutos / 60;&#xd;
// 		hAPI.setCardValue(&apos;analyticsPrazoSLA&apos;, prazoHoras);&#xd;
// 	} &#xd;
// 	var objDataRetorno = hAPI.calculateDeadLineTime(dataInicio, segundosPrazoDepoisMeiaNoite, prazoMinutos, expediente, 1);&#xd;
// 	var dataArray = (objDataRetorno[0]+&quot;&quot;).split(&quot; &quot;);&#xd;
// 	var prazoSegundos = parseInt(objDataRetorno[1]+&quot;&quot;) / 3600;&#xd;
	&#xd;
// //	&quot;Fri Aug 21 10:43:15 BRT 2015&quot;;	&#xd;
	&#xd;
// 	if((dataArray[2]+&quot;&quot;).indexOf(&quot;0&quot;) == 0){&#xd;
// 		dataArray[2] = (dataArray[2]+&quot;&quot;).replace(&quot;0&quot;,&quot;&quot;);&#xd;
// 	}&#xd;
	&#xd;
// 	var dia = parseInt(dataArray[2]+&quot;&quot;);&#xd;
// 	var mes = parseInt(mesesObj[dataArray[1]]+&quot;&quot;);&#xd;
// 	var ano = dataArray[5];&#xd;
	&#xd;
// 	var segundos = parseInt(objDataRetorno[0].getSeconds());&#xd;
	&#xd;
// 	var prazoOrigianl = parseInt(objDataRetorno[1]+&quot;&quot;);&#xd;
// 	var prazoSegundos = prazoOrigianl / 3600;&#xd;
// 	var horas = parseInt((prazoSegundos+&quot;&quot;).split(&quot;.&quot;)[0]);&#xd;
	&#xd;
// 	var minutos = prazoOrigianl - (horas * 3600);&#xd;
&#xd;
	&#xd;
// 	minutos = Math.ceil(minutos / 60);&#xd;
	&#xd;
// 	var dataPrazo = montaTimeStamp(dia+&quot;/&quot;+mes+&quot;/&quot;+ano, horas+&quot;:&quot;+minutos+&quot;:&quot;+segundos, &quot;data&quot;);&#xd;
	&#xd;
// 	return dataPrazo;&#xd;
	&#xd;
// }&#xd;
&#xd;
function calculaHorasDesconsiderar(dataset){&#xd;
	&#xd;
var total = 0;&#xd;
	&#xd;
	var data1;&#xd;
	var data2;&#xd;
	var diferenca = 0; &#xd;
	var total = 0;&#xd;
	for (var i = 0; i &lt; dataset.rowsCount; i++) {&#xd;
			&#xd;
			var dataInicio = (dataset.getValue(i,&quot;DAT_INICIO&quot;)+&quot;&quot;).split(&quot;-&quot;);&#xd;
			var dataFim = (dataset.getValue(i,&quot;DAT_FIM&quot;)+&quot;&quot;).split(&quot;-&quot;);&#xd;
			var horarioInicio = (dataset.getValue(i,&quot;HRA_INICIO&quot;)+&quot;&quot;).split(&quot;:&quot;);&#xd;
			var horarioFim = (dataset.getValue(i,&quot;HRA_FIM&quot;)+&quot;&quot;).split(&quot;:&quot;);&#xd;
			&#xd;
			var dataForamatadaInicio = dataInicio[2]+&quot;/&quot;+dataInicio[1]+&quot;/&quot;+dataInicio[0]+&quot; &quot;+horarioInicio[0]+&quot;:&quot;+horarioInicio[1]+&quot;:&quot;+horarioInicio[2];&#xd;
			var dataForamatadaFim = dataFim[2]+&quot;/&quot;+dataFim[1]+&quot;/&quot;+dataFim[0]+&quot; &quot;+horarioFim[0]+&quot;:&quot;+horarioFim[1]+&quot;:&quot;+horarioFim[2];			&#xd;
			totalSegundos = calculaTempoGasto(dataForamatadaInicio, &quot;Default&quot;, dataForamatadaFim);&#xd;
			&#xd;
			total = total + (parseInt(totalSegundos) /60);		&#xd;
	}&#xd;
	return total;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>defined</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var INICIO = 0;&#xd;
var INICIO_1 = 1;&#xd;
var GERA_COTACAO = 2;&#xd;
var COTACAO = 4;&#xd;
var DEFINIR_VENCEDOR = 6;&#xd;
var APROVACAO_4A_ALCADA = 8;&#xd;
var EMITIR_PEDIDO_DE_COMPRA = 10;&#xd;
var ANALISE_COMPRADOR = 14;&#xd;
var FIM = 17;&#xd;
var AUTO_E_CONTRATO_ = 38;&#xd;
var PRREENCHER_FORMULARIO_OBJETO_REAJUSTE_RECISAO_VALOR_VALIDADE = 39;&#xd;
var ANEXAR_MINUTA = 42;&#xd;
var VALIDAR_MINUTA = 43;&#xd;
var AUTO_TEVE_DIVIRGENCIA_NO_CONTRATO_ = 44;&#xd;
var AJUSTAR_DIVIRGENCIA = 45;&#xd;
var RECOLHER_ASSINATURA_E_DIGITALIZAR_CONTRATO = 49;&#xd;
var GERAR_CONTRATO_PROTHEUS = 50;&#xd;
var FIM__ = 62;&#xd;
var APROVACAO_3A_ALCADA = 69;&#xd;
var APROVACAO_2A_ALCADA = 70;&#xd;
var APROVACAO_1A_ALCADA = 71;&#xd;
var AUTO_E_CONTRATO_ = 86;&#xd;
var AUTO_APROVADO_EM_1A_ALCADA = 90;&#xd;
var AUTO_APROVADO_EM_2A_ALCADA = 91;&#xd;
var AUTO_APROVADO_EM_3A_ALCADA = 92;&#xd;
var AUTO_APROVADO_4A_ALCADA = 93;&#xd;
var FIM___ = 94;&#xd;
var TERMINO_APROVACAO_SISTEMA = 103;&#xd;
var CORRECAO_SOLICITACAO = 133;&#xd;
var ENCAMINHAR_COMPRADOR = 137;&#xd;
var PARECER_SOLICITANTE = 149&#xd;
var VALIDAR_PARECER_SOLICITANTE = 151;&#xd;
var FIM____ = 161;&#xd;
var APROVACAO_SOLICITANTE = 164;&#xd;
var SOLUCAO_INCONSISTENCIA = 165;&#xd;
var ATUALIZAR_SLA_CORRECAO_SOLICITACAO = 173;&#xd;
var ATUALIZAR_SLA_APROVACAO_SOLICITANTE = 176;&#xd;
var FIM_AGLUTINADA = 198;&#xd;
var ERRO_GERAR_DESVINCULADA = 198;</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeCancelProcess</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeCancelProcess(colleagueId,processId){&#xd;
	&#xd;
	var dataAtual = new Date();&#xd;
	var dataFormatada = formatarDataAnalytics(dataAtual.getDate(), (dataAtual.getMonth()+1), dataAtual.getFullYear(), dataAtual.getHours(), dataAtual.getMinutes(), dataAtual.getSeconds());&#xd;
	&#xd;
	&#xd;
	hAPI.setCardValue(&quot;analyticsDtFim&quot;, dataFormatada.split(&quot; &quot;)[0]);&#xd;
	hAPI.setCardValue(&quot;analyticsHrFim&quot;, dataFormatada.split(&quot; &quot;)[1]);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeTaskSave</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeTaskSave(colleagueId, nextSequenceId, userList) {&#xd;
	GETSLA()&#xd;
	var ATIVIDADE_INICIO = 0;&#xd;
	var ATIVIDADE_INICIO_1 = 1;&#xd;
	var ATIVIDADE_COTACAO = 4;&#xd;
	var ATIVIDADE_DEFINIR_VENCEDOR = 6;&#xd;
	var ATIVIDADE_ANALISE_COMPRADOR = 14;&#xd;
	var ATIVIDADE_ANEXAR_MINUTA = 42;&#xd;
	var ATIVIDADE_VALIDAR_MINUTA = 43;&#xd;
	var ATIVIDADE_RECOLHER_ASSINATURA_E_DIGITALIZAR_CONTRATO = 49;&#xd;
	var ATIVIDADE_GERAR_CONTRATO_PROTHEUS = 50;&#xd;
	var PARECER_USUARIO = 149;&#xd;
	var ATIVIDADE_EMITIR_PEDIDO_COMPRA = 10;&#xd;
	var ATIVIDADE_FIM_PEDIDO_COMPRA = 62;&#xd;
	var ATIVIDADE_E_CONTRATO = 38;&#xd;
	var ATIVIDADE_TERMINO_APROVACAO = 103;&#xd;
	var ATIVIDADE_APROVACAO_ALCADA = 189;&#xd;
&#xd;
	var currentState = parseInt(getValue(&quot;WKNumState&quot;));&#xd;
&#xd;
	hAPI.setCardValue(&quot;txtSolicitacao&quot;, getValue(&quot;WKNumProces&quot;));&#xd;
&#xd;
	if (currentState == ATIVIDADE_INICIO || currentState == ATIVIDADE_INICIO_1) {&#xd;
		if (hAPI.getCardValue(&quot;isRegularizadora&quot;) == &quot;sim&quot;) {&#xd;
			var anexos = hAPI.listAttachments();&#xd;
			var qtdAnexos = anexos.size();&#xd;
			if (qtdAnexos == 0) {&#xd;
				throw &quot;É preciso anexar ao menos um documento para continuar o processo&quot;;&#xd;
			}&#xd;
		}&#xd;
		hAPI.setCardValue(&quot;contadorAlcada&quot;, &quot;1&quot;);&#xd;
	}&#xd;
	if (currentState == ATIVIDADE_COTACAO) {&#xd;
		//Verifica anexo obrigatório para cotação fechada&#xd;
		/* var prioridadeCotacao = &apos;EN&apos;;&#xd;
		if (prioridadeCotacao.indexOf(hAPI.getCardValue(&apos;hiddenPrioridadeSolicitacao&apos;)) != -1 &amp;&amp; hAPI.getCardValue(&apos;rdTipoCotacao&apos;) == &apos;fechada&apos; &amp;&amp; hAPI.getCardValue(&quot;grupoAnaliseComprador&quot;) != hAPI.getCardValue(&quot;poolAbertura&quot;)) {&#xd;
			var list_anexo = hAPI.listAttachments();&#xd;
			var anexoCotacao = false;&#xd;
			for (var i = 0; i &lt; list_anexo.size(); i++) {&#xd;
				var row = list_anexo.get(i);&#xd;
				if (row.getDocumentDescription().indexOf(&apos;Mapa de Cotação&apos;) != -1 &amp;&amp;&#xd;
					row.getDocumentDescription().indexOf(&apos;pdf&apos;) != -1) {&#xd;
					anexoCotacao = true;&#xd;
					break;&#xd;
				}&#xd;
			}&#xd;
			if (!anexoCotacao) {&#xd;
				throw &quot;É preciso anexar o Mapa de Cotação em pdf contendo o nome: Mapa de Cotação&quot;;&#xd;
			}&#xd;
		} */&#xd;
	}&#xd;
	if (currentState == ATIVIDADE_DEFINIR_VENCEDOR &amp;&amp; getValue(&quot;WKCompletTask&quot;) == &quot;true&quot;) {&#xd;
		//Busca todos os aprovadores das alcadas e seta no DOM&#xd;
		if (buscaTodosAprovadoresAlcadas() == true) {&#xd;
			aprovaAlcada(hAPI.getCardValue(&quot;contadorAlcada&quot;), getAprovadoresDom(), true);&#xd;
		}&#xd;
	} else if (currentState == PARECER_SOLICITANTE &amp;&amp; getValue(&quot;WKCompletTask&quot;) == &quot;true&quot; &amp;&amp;&#xd;
		(hAPI.getCardValue(&quot;motivoReprovacao&quot;) == &quot;centroCusto&quot; || hAPI.getCardValue(&quot;motivoReprovacao&quot;) == &quot;filial&quot; ||&#xd;
			hAPI.getCardValue(&quot;motivoReprovacao&quot;) == &quot;parecerSolicitante&quot;)) {&#xd;
		//Busca todos os aprovadores das alcadas e seta no DOM&#xd;
		if (buscaTodosAprovadoresAlcadas() == true) {&#xd;
			// reinicia alçada&#xd;
			hAPI.setCardValue(&quot;contadorAlcada&quot;, 1);&#xd;
			aprovaAlcada(1, getAprovadoresDom(), true);&#xd;
		}&#xd;
	} else if (currentState == PARECER_SOLICITANTE &amp;&amp; getValue(&quot;WKCompletTask&quot;) == &quot;true&quot;) {&#xd;
		var alcada = hAPI.getCardValue(&quot;contadorAlcada&quot;);&#xd;
		//seta o aprovador atual para o aprovador que reprovou&#xd;
		hAPI.setCardValue(&quot;aprovadorAtual&quot;, LISTA_APROVADORES_DOM[alcada - 1].id);&#xd;
	}&#xd;
&#xd;
	//FLUIG-93 Auto incremento para a ativide de repetição de aprovação de alçadas&#xd;
	if (currentState == ATIVIDADE_APROVACAO_ALCADA) {&#xd;
		var alcada = hAPI.getCardValue(&quot;contadorAlcada&quot;);&#xd;
		if (hAPI.getCardValue(&quot;rdAprovadoAlcada&quot; + alcada) != &quot;naprov&quot;) {&#xd;
			if (parseInt(alcada) &lt; LISTA_APROVADORES_DOM.length) {&#xd;
				var contadorAlcada = 1;&#xd;
				for (var i = alcada; i &lt; LISTA_APROVADORES_DOM.length; i++) {&#xd;
					var proximoAprovador = LISTA_APROVADORES_DOM[i];&#xd;
					var proximaAlcada = parseInt(alcada) + contadorAlcada;&#xd;
					var aprovadorRepitido = false;&#xd;
					for (var x = 0; x &lt; alcada; x++) {&#xd;
						if (LISTA_APROVADORES_DOM[x].id == proximoAprovador.id) {&#xd;
							aprovadorRepitido = true;&#xd;
							break;&#xd;
						}&#xd;
					}&#xd;
					if (proximoAprovador.conhecimento == &apos;true&apos; || proximoAprovador.aprovacaoExistente == &apos;true&apos; || aprovadorRepitido == true) {&#xd;
						aprovaAutomatico(proximaAlcada, proximoAprovador);&#xd;
						contadorAlcada++;&#xd;
					} else {&#xd;
						break;&#xd;
					}&#xd;
				}&#xd;
				hAPI.setCardValue(&quot;contadorAlcada&quot;, parseInt(alcada) + contadorAlcada);&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
}&#xd;
&#xd;
function buscaTodosAprovadoresAlcadas() {&#xd;
	var grupoAnaliseComprador = hAPI.getCardValue(&quot;grupoAnaliseComprador&quot;);&#xd;
	//Busca todos os aprovadores das alcadas e seta no DOM&#xd;
	var aprovadores = getAprovadoresAlcada(hAPI.getCardValue(&quot;FilialAlcada&quot;), grupoAnaliseComprador, hAPI.getCardValue(&quot;txtCodCentroCusto&quot;));&#xd;
	console.log(&quot;aprovadores&quot;);&#xd;
	console.log(aprovadores);&#xd;
	var listaAprovadores = retornaAprovadores(aprovadores);&#xd;
	console.log(&quot;listaAprovadores&quot;);&#xd;
	console.log(listaAprovadores);&#xd;
	console.log(&quot;tipoMatMed&quot;);&#xd;
	console.log(tipoMatMed);&#xd;
	if (listaAprovadores.length &gt; 0) {&#xd;
		setAprovadoresDOM(listaAprovadores);&#xd;
		return true;&#xd;
		//		aprovaAlcada(hAPI.getCardValue(&quot;contadorAlcada&quot;), getAprovadoresDom(), true);&#xd;
	} else if (tipoMaterial(grupoAnaliseComprador) == tipoMatMed) {&#xd;
		var existeAlcada = false;&#xd;
		for (var i in aprovadores) {&#xd;
			log.info(&quot;aprovadores for&quot;)&#xd;
			&#xd;
			if (aprovadores.existeAlcada == true) {&#xd;
				existeAlcada = true;&#xd;
				break;&#xd;
			}&#xd;
		}&#xd;
		if (!existeAlcada) {&#xd;
			throw &quot;Nehnuma Alçada de Mat/Med cadastrado para filial.&quot;;&#xd;
		}&#xd;
	} else {&#xd;
		throw &quot;Nehnuma Alçada ou Centro de custo cadastrado para filial.&quot;;&#xd;
	}&#xd;
}&#xd;
&#xd;
/*&#xd;
 * Função que torna anexos obrigatórios em qualquer atividade.&#xd;
 */&#xd;
function verificaAnexo(mensgem) {&#xd;
	var qtdAnexosCampo = parseInt(hAPI.getCardValue(&quot;qtdAnexos&quot;));&#xd;
	var instanceId = getValue(&apos;WKNumProces&apos;);&#xd;
	var constraintProcessAttachment = DatasetFactory.createConstraint(&apos;processAttachmentPK.processInstanceId&apos;, instanceId, instanceId, ConstraintType.MUST);&#xd;
	var datasetProcessAttachment = DatasetFactory.getDataset(&apos;processAttachment&apos;, null, [constraintProcessAttachment], null);&#xd;
	var documentId = datasetProcessAttachment.getValue(0, &apos;documentId&apos;);&#xd;
	var constraintProcessAttachment2 = DatasetFactory.createConstraint(&apos;documentId&apos;, documentId, documentId, ConstraintType.MUST_NOT);&#xd;
	datasetProcessAttachment = DatasetFactory.getDataset(&apos;processAttachment&apos;, null, [constraintProcessAttachment, constraintProcessAttachment2], null);&#xd;
&#xd;
	var qtdAnexos = datasetProcessAttachment.rowsCount;&#xd;
	if (qtdAnexos &gt; qtdAnexosCampo) {&#xd;
		hAPI.setCardValue(&quot;qtdAnexos&quot;, qtdAnexos);&#xd;
	} else {&#xd;
		throw mensgem;&#xd;
	}&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>proximaAlcada</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function proximaAlcada(isParecerSolicitante){&#xd;
	var retorno = false;&#xd;
	var alcada = hAPI.getCardValue(&quot;contadorAlcada&quot;);&#xd;
	var existeAlacada = hAPI.getCardValue(&quot;existeAlcadas&quot;);&#xd;
	var grupoAnaliseComprador = hAPI.getCardValue(&quot;grupoAnaliseComprador&quot;);&#xd;
	&#xd;
	var listaAprovadores = getAprovadoresDom();&#xd;
	var ultimoAprovadorManual = true;&#xd;
	&#xd;
	&#xd;
	//Se a compra for do tipo MATMED e não tiver aprovador pode ser encaminhado para Emitir Pedido&#xd;
	for (var i = alcada; i &lt; listaAprovadores.length; i++){&#xd;
		if(listaAprovadores[i].conhecimento != &apos;true&apos; &amp;&amp; listaAprovadores[i].aprovacaoExistente != &apos;true&apos;){&#xd;
			log.info(&quot;KAKAROTO AINDA EXISTE APROVADOR&quot;);&#xd;
			ultimoAprovadorManual = false;&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	if((existeAlacada == &apos;false&apos;) || (tipoMaterial(grupoAnaliseComprador) == tipoMatMed &amp;&amp; listaAprovadores.length == 1 &amp;&amp; listaAprovadores[0].conhecimento == &apos;true&apos;)){&#xd;
		log.info(&quot;KAKAROTO NAO EXISTE ALCADA&quot;);&#xd;
		retorno = false;&#xd;
	}else if(ultimoAprovadorManual){&#xd;
		log.info(&quot;KAKAROTO ULTIMO APROVADOR MANUAL: &quot;+ isParecerSolicitante);&#xd;
		if(isParecerSolicitante){&#xd;
			log.info(&quot;KAKAROTO É PARECER SOLICI&quot;);&#xd;
			retorno =  true;&#xd;
		}else{&#xd;
			log.info(&quot;KAKAROTO NAO PARECER SOLICI&quot;);&#xd;
			retorno =  false&#xd;
		}&#xd;
	}else{&#xd;
		log.info(&quot;KAKAROTO EXISTE ALCADA&quot;);&#xd;
		retorno =  true;&#xd;
	}&#xd;
	&#xd;
	return retorno;&#xd;
	&#xd;
}&#xd;
&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>startPesquisaDeSatisfacao</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function startPesquisaDeSatisfacao(targetUserCode){&#xd;
	var processId = buscarIdProcesso();&#xd;
	var processIdPesquisa = &quot;PesquisaDeSatisfacao&quot;;&#xd;
	var numProcess = buscarIdSolicitacao();&#xd;
	var empresa = buscarEmpresa();&#xd;
	var atividadeDestino = 2;&#xd;
	var usuarioEnvio = targetUserCode;&#xd;
	var atividadeCompletada = true;&#xd;
	var modoGestor = false;&#xd;
	var sequenciaThread = 0;&#xd;
//	var pesquisaCardData = new java.util.HashMap();&#xd;
	&#xd;
	var processName = getProcessName(processId);&#xd;
	var obs = &quot;Solicitação iniciada automaticamente pelo processo &quot; + processName + &quot; Nº &quot; + numProcess;&#xd;
	var inicSolic = new objInicSolic(empresa, processIdPesquisa, atividadeDestino, usuarioEnvio, obs, atividadeCompletada, modoGestor, sequenciaThread);&#xd;
	&#xd;
	inicSolic.setColleagueRecipient(targetUserCode);&#xd;
	&#xd;
	var fieldFrom = null;&#xd;
	var fieldTo = null;&#xd;
	var fieldFromValue = null;&#xd;
&#xd;
	var parentFields = null;&#xd;
	var parentConstraints = [];&#xd;
	var parentOrder = null;&#xd;
&#xd;
	parentConstraints.push(DatasetFactory.createConstraint(&quot;metadata#active&quot;,&quot;true&quot;,&quot;true&quot;,ConstraintType.MUST));&#xd;
	parentConstraints.push(DatasetFactory.createConstraint(&quot;processoOrigem&quot;,processId,processId,ConstraintType.MUST));&#xd;
&#xd;
	var parentDataset = DatasetFactory.getDataset(&quot;ds_de_para_pesquisa_satisfacao&quot;,parentFields,parentConstraints,parentOrder);&#xd;
&#xd;
	if(parentDataset != null &amp;&amp; parentDataset.rowsCount &gt; 0){&#xd;
		var id = parentDataset.getValue(0, &quot;metadata#id&quot;);&#xd;
		var version = parentDataset.getValue(0, &quot;metadata#version&quot;);&#xd;
		&#xd;
		var childFields = null;&#xd;
		var childConstraints = [];&#xd;
		var childOrder = null;&#xd;
&#xd;
		childConstraints.push(DatasetFactory.createConstraint(&quot;metadata#id&quot;,id,id,ConstraintType.MUST));&#xd;
		childConstraints.push(DatasetFactory.createConstraint(&quot;metadata#version&quot;,version,version,ConstraintType.MUST));&#xd;
		childConstraints.push(DatasetFactory.createConstraint(&quot;tablename&quot;,&quot;campos&quot;,&quot;campos&quot;,ConstraintType.MUST));&#xd;
&#xd;
		var childDataset = DatasetFactory.getDataset(&quot;ds_de_para_pesquisa_satisfacao&quot;,childFields,childConstraints,childOrder);&#xd;
		&#xd;
		if(childDataset != null &amp;&amp; childDataset.rowsCount &gt; 0){&#xd;
			for(var i = 0; i &lt; childDataset.rowsCount; i++){&#xd;
				fieldFrom = childDataset.getValue(i, &quot;campoOrigem&quot;);&#xd;
				fieldTo = childDataset.getValue(i, &quot;campoDestino&quot;);&#xd;
				fieldFromValue = hAPI.getCardValue(fieldFrom);&#xd;
				if(fieldFromValue == null) fieldFromValue = &quot;&quot;;&#xd;
				inicSolic.setCardData(fieldTo, fieldFromValue);&#xd;
				//pesquisaCardData.put(fieldTo,fieldFromValue);&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
&#xd;
&#xd;
	&#xd;
	inicSolic.setCardData(&quot;nrProcessoOrigem&quot;,java.lang.String.valueOf(numProcess));&#xd;
	inicSolic.setCardData(&quot;nmProcessoOrigem&quot;,processName);&#xd;
	inicSolic.setCardData(&quot;pesquisaRespondida&quot;,&quot;N&quot;);&#xd;
//	pesquisaCardData.put(&quot;nrProcessoOrigem&quot;,java.lang.String.valueOf(numProcess));&#xd;
//	pesquisaCardData.put(&quot;nmProcessoOrigem&quot;,processName);&#xd;
//	pesquisaCardData.put(&quot;pesquisaRespondida&quot;,&quot;N&quot;);&#xd;
	&#xd;
//	var listaColab = new java.util.ArrayList();&#xd;
//	listaColab.add(targetUserCode);&#xd;
//	&#xd;
//	var obs = &quot;Solicitação iniciada automaticamente pelo processo &quot; + processName + &quot; Nº &quot; + numProcess;&#xd;
//	&#xd;
//	hAPI.startProcess(&quot;PesquisaDeSatisfacao&quot;, 2, listaColab, obs, true, pesquisaCardData, false);&#xd;
	try{	&#xd;
		inicSolic.inicProcess();&#xd;
	} catch (e) {	&#xd;
		log.info(&quot;-------------------ERRO WEBSERVICE STARTPROCESS NOVA SOLIC ------&quot;+e.message);&#xd;
	}	&#xd;
}&#xd;
&#xd;
function getProcessName(processId){&#xd;
	var processName = &quot;&quot;;&#xd;
	var fields = null;&#xd;
	var constraints = [];&#xd;
	var order = null;&#xd;
&#xd;
	constraints.push(DatasetFactory.createConstraint(&quot;processDefinitionPK.processId&quot;,processId,processId,ConstraintType.MUST));&#xd;
&#xd;
	var dataset = DatasetFactory.getDataset(&quot;processDefinition&quot;,fields,constraints,order);&#xd;
	&#xd;
	if(dataset != null &amp;&amp; dataset.rowsCount &gt; 0){&#xd;
		processName = dataset.getValue(0,&quot;processDescription&quot;);&#xd;
	}&#xd;
	&#xd;
	return processName;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>getMoneyValue</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function getMoneyValue(value) {&#xd;
	if (value == &quot;&quot;) {&#xd;
		return 0;&#xd;
	} else {&#xd;
		return convertMoneyToFloat(value);&#xd;
	}&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_checkAnexo_1-0-0</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
 * Método para verificação de anexos&#xd;
 * &#xd;
 * @param textoTipoAnexo&#xd;
 *            Informar o texto para completar a frase: Deve haver no mínimo um&#xd;
 *            documento anexado ao processo!!!&lt;br&gt;* Tipo de Anexo esperado:&#xd;
 *            XXXXX;&#xd;
 * @return Boolean&#xd;
 * @author sergio.santos&#xd;
 */&#xd;
  var checkAnexo = function(){&#xd;
	this.executar = function(textoTipoAnexo) {&#xd;
		var existeAnexo = false;&#xd;
		var formularioId = buscarForm();&#xd;
		var solicitacaoId = buscarIdSolicitacao();&#xd;
		var empresaId = buscarEmpresa();&#xd;
		var processConstraint = DatasetFactory.createConstraint(&#xd;
				&quot;processAttachmentPK.processInstanceId&quot;, solicitacaoId,&#xd;
				solicitacaoId, ConstraintType.MUST);&#xd;
		var companyConstraint = DatasetFactory.createConstraint(&#xd;
				&quot;processAttachmentPK.companyId&quot;, empresaId, empresaId,&#xd;
				ConstraintType.MUST);&#xd;
		var attachFields = new Array(&quot;documentId&quot;,&#xd;
				&quot;processAttachmentPK.attachmentSequence&quot;, &quot;version&quot;);&#xd;
		var attachConstList = new Array(processConstraint, companyConstraint);&#xd;
		var attachDataset = DatasetFactory.getDataset(&quot;processAttachment&quot;,&#xd;
				attachFields, attachConstList, new Array(&#xd;
						&quot;processAttachmentPK.attachmentSequence&quot;));&#xd;
&#xd;
		for ( var x = 0; x &lt; attachDataset.rowsCount; x++) {&#xd;
			if (attachDataset.getValue(x, &quot;documentId&quot;) != formularioId){&#xd;
				existeAnexo = true;&#xd;
			}&#xd;
		}&#xd;
		&#xd;
		//if (existeAnexo == false){&#xd;
		if (! existeAnexo){&#xd;
			throw i18n.translate(&quot;checkAnexo.AnexoObrigatorio&quot;) + &quot; &quot; + textoTipoAnexo;&#xd;
		}&#xd;
		&#xd;
		//return existeAnexo;&#xd;
	};&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>buscaDescAprovador</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function buscaDescAprovador(codigo){&#xd;
	&#xd;
	var usuario = &quot;&quot;;&#xd;
		&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;colleaguePK.colleagueId&quot;, codigo, codigo, ConstraintType.MUST);&#xd;
	var constraints = new Array(c1);&#xd;
	var usuarios = DatasetFactory.getDataset(&quot;colleague&quot;, null, constraints, null);&#xd;
	&#xd;
	if (usuarios.rowsCount &gt; 0) {&#xd;
		usuario = usuarios.getValue(0,&quot;colleagueName&quot;);&#xd;
	}&#xd;
	&#xd;
	return usuario.toString();	&#xd;
			&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_objIdentificador_1-2-0</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>	/**&#xd;
	 * Objeto com funcionalidade de gerenciar o conteudo do identificador&#xd;
	 * &#xd;
	 * @param strungCriticidade&#xd;
	 *            Informar a string da Criticidade;&#xd;
	 * @param stringUnidade&#xd;
	 *            Informar a string da Unidade;&#xd;
	 * @param stringDataInicial&#xd;
	 *            Informar a string da DataInicial;&#xd;
	 * @param outrosId&#xd;
	 *            Informar os demais parametros e gravar em um obj do tipo array;&#xd;
	 * &#xd;
	 */&#xd;
	var objIdentificador = function(strCriticidade, strUnidade, strDataInicial,&#xd;
		strOutrosParam) {&#xd;
&#xd;
	var nomeCampo = &apos;campoIdentificador&apos;;&#xd;
	var strPrefixoDataIniciaL = &apos;DA &apos;;&#xd;
	var separador = &apos; - &apos;;&#xd;
	var tipoCriticidade = &apos;&apos;;&#xd;
	var nomeUnidade = &apos;&apos;;&#xd;
	var dataInicial = &apos;&apos;;&#xd;
	var listParametros = &apos;&apos;;&#xd;
&#xd;
	/**&#xd;
	 * Retonar o tipoCriticidade&#xd;
	 * &#xd;
	 * @returns tipoCriticidade Retonar o tipo de Criticidade&#xd;
	 */&#xd;
	this.getTipoCriticidade = function() {&#xd;
		return tipoCriticidade;&#xd;
	};&#xd;
	/**&#xd;
	 * Retornar o nomeUnidade&#xd;
	 * &#xd;
	 * @returns nomeUnidade Retonar a Unidade&#xd;
	 */&#xd;
	this.getNomeUnidade = function() {&#xd;
		return nomeUnidade;&#xd;
	};&#xd;
	/**&#xd;
	 * Retornar a dataInicial&#xd;
	 * &#xd;
	 * @returns dataInicial Retornar a Data Inicial&#xd;
	 */&#xd;
	this.getDataInicial = function() {&#xd;
		return dataInicial;&#xd;
	};&#xd;
&#xd;
	var setParametro = function(nomeParametro) {&#xd;
		if (nomeParametro != &quot;&quot;) {&#xd;
			listParametros += (listParametros != &quot;&quot;) ? separador : &apos;&apos;;&#xd;
			listParametros += nomeParametro;&#xd;
		}&#xd;
	};&#xd;
&#xd;
	var setOutrosParam = function(outrosParam) {&#xd;
		if (typeof outrosParam !== &apos;undefined&apos; &amp;&amp; outrosParam instanceof Array&#xd;
				&amp;&amp; outrosParam.length &gt; 0) {&#xd;
			for ( var pos in outrosParam) {&#xd;
				setParametro(outrosParam[pos]);&#xd;
			}&#xd;
		}&#xd;
&#xd;
		/*&#xd;
		* if (outrosParam != null || outrosParam != &quot;&quot;){&#xd;
		* setParametro(outrosParam); }&#xd;
		*/&#xd;
	};&#xd;
&#xd;
	var getStrIdentificador = function() {&#xd;
		return listParametros;&#xd;
	};&#xd;
&#xd;
	var setIdentificador = function() {&#xd;
		hAPI.setCardValue(nomeCampo, listParametros);&#xd;
	};&#xd;
	__construct = function(strCriticidade, strUnidade, strDataInicial,&#xd;
			strOutrosParam) {&#xd;
		setParametro(strCriticidade);&#xd;
		setParametro(strUnidade);&#xd;
		setParametro(strPrefixoDataIniciaL + strDataInicial);&#xd;
&#xd;
		setOutrosParam(strOutrosParam);&#xd;
&#xd;
		setIdentificador();&#xd;
&#xd;
		getStrIdentificador();&#xd;
&#xd;
	}(strCriticidade, strUnidade, strDataInicial, strOutrosParam);&#xd;
	};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterTaskSave</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var ativPosInicial = 137;&#xd;
function afterTaskSave(colleagueId, nextSequenceId, userList) {&#xd;
&#xd;
	if ((nextSequenceId == 62 || nextSequenceId == &apos;62&apos;) &amp;&amp; hAPI.getCardValue(&quot;aceite&quot;) != &quot;S&quot;) {&#xd;
&#xd;
		hAPI.setCardValue(&quot;codSolicitacao&quot;, getValue(&quot;WKNumProces&quot;));&#xd;
        try {&#xd;
            //Monta mapa com parâmetros do template&#xd;
            var parametros = new java.util.HashMap();&#xd;
            parametros.put(&quot;NUMSOLICITACAO&quot;, hAPI.getCardValue(&quot;codSolicitacao&quot;));&#xd;
            parametros.put(&quot;NOMESOLICITANTE&quot;, hAPI.getCardValue(&quot;txtNmRequisitante&quot;));&#xd;
&#xd;
            var assuntoEmail = &apos;ENCERRAMENTO AUTOMÁTICO SOLICITAÇÃO &apos;;&#xd;
            assuntoEmail += hAPI.getCardValue(&quot;codSolicitacao&quot;);&#xd;
&#xd;
            //Este parâmetro é obrigatório e representa o assunto do e-mail&#xd;
            parametros.put(&quot;subject&quot;, assuntoEmail);&#xd;
            //Monta lista de destinatários&#xd;
            var destinatarios = new java.util.ArrayList();&#xd;
            //destinatarios.add(&quot;ae74d6181db511eabd7a726acb7f424e&quot;);&#xd;
            //destinatarios.add(hAPI.getCardValue(&quot;codAprovador&quot;));&#xd;
            destinatarios.add(hAPI.getCardValue(&quot;emailSolicitante&quot;));&#xd;
              //Envia e-mail&#xd;
            notifier.notify(&quot;imwn2dyhbuywfa0f1522083830483&quot;, &quot;notifica_finalizacao_automatica&quot;, parametros, destinatarios, &quot;text/html&quot;);&#xd;
&#xd;
        } catch (e) {&#xd;
            log.info(e);&#xd;
        }&#xd;
    }&#xd;
&#xd;
	var currentId = getValue(&quot;WKNumState&quot;);&#xd;
&#xd;
	if (nextSequenceId == ativPosInicial) {&#xd;
		preencherIdentificador();&#xd;
	}&#xd;
	if(currentId == &apos;&apos;){&#xd;
		var dsPedido = DatasetFactory.getDataset(&apos;ds_gerarPedidoCompra&apos;,  new Array(xmlPedido),null, null);&#xd;
		var codRetorno = dsPedido.getValue(0, &quot;codigoPedido&quot;);&#xd;
		var statusRetorno = dsPedido.getValue(0, &quot;statusRetorno&quot;);&#xd;
		if(codRetorno == &apos;ERRO&apos;){&#xd;
			throw &quot;Erro na integração. \n&quot;+statusRetorno;&#xd;
		}else{&#xd;
			hAPI.setCardValue(&quot;numPedido&quot;, codRetorno);&#xd;
		}&#xd;
	}&#xd;
&#xd;
	if (currentId == &apos;14&apos; || currentId == 14 ) {&#xd;
	&#xd;
		if (hAPI.getCardValue(&quot;hiddenPrioridadeGeralOrig&quot;) != hAPI.getCardValue(&quot;hiddenPrioridadeGeral&quot;)) {&#xd;
			try {&#xd;
&#xd;
				var prioridade = hAPI.getCardValue(&quot;hiddenPrioridadeGeral&quot;);&#xd;
				if (prioridade == &apos;N&apos;) {&#xd;
					prioridade = &apos;NORMAL&apos;;&#xd;
				} else if (prioridade == &apos;O&apos;) {&#xd;
					prioridade = &apos;ONCOPROD&apos;;&#xd;
				} else {&#xd;
					prioridade = &apos;EMERGENCIAL&apos;;&#xd;
				}&#xd;
&#xd;
				var parametros = new java.util.HashMap();&#xd;
				parametros.put(&quot;NUMSOLICITACAO&quot;, hAPI.getCardValue(&quot;txtSolicitacao&quot;));&#xd;
				parametros.put(&quot;NOMESOLICITANTE&quot;, hAPI.getCardValue(&quot;txtNmRequisitante&quot;));&#xd;
				parametros.put(&quot;PRIORIDADE&quot;, prioridade);&#xd;
				parametros.put(&quot;RESP_ALTERACAO&quot;, hAPI.getCardValue(&quot;respAlteracaoPriori&quot;));&#xd;
				parametros.put(&quot;JUSTIFICATIVA&quot;, hAPI.getCardValue(&quot;motivoAlteracaoPrioridade&quot;).trim());&#xd;
				var assuntoEmail = &apos;Alteração de prioridade do chamado &apos;;&#xd;
				assuntoEmail += hAPI.getCardValue(&quot;txtSolicitacao&quot;);&#xd;
				parametros.put(&quot;subject&quot;, assuntoEmail);&#xd;
				var destinatarios = new java.util.ArrayList();&#xd;
				destinatarios.add(hAPI.getCardValue(&quot;emailSolicitante&quot;));&#xd;
				notifier.notify(&quot;imwn2dyhbuywfa0f1522083830483&quot;, &quot;notifica_alteracao_prioridade&quot;, parametros, destinatarios, &quot;text/html&quot;);&#xd;
			} catch (e) {&#xd;
				log.info(&apos;Erro ao enviar email de alteração de prioridade do Compras: &apos; + e);&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
}&#xd;
&#xd;
function preencherIdentificador() {&#xd;
	var prioridade = hAPI.getCardValue(&quot;prioridadeGeral&quot;);&#xd;
&#xd;
	var unidade = hAPI.getCardValue(&quot;hiddenFilial&quot;);&#xd;
	var dataInicial = hAPI.getCardValue(&quot;dtEmissao&quot;);&#xd;
	var outrosParam = [];&#xd;
&#xd;
	// outrosParam.push(hAPI.getCardValue(&quot;hiddenTipoProdSolicitacao&quot;));&#xd;
	outrosParam.push(hAPI.getCardValue(&quot;hiddenTipoProduto&quot;));&#xd;
&#xd;
	var identificador = new objIdentificador(prioridade, unidade, dataInicial,&#xd;
			outrosParam);&#xd;
&#xd;
}&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>incrementaNrReprovacoes</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function incrementaNrReprovacoes(){&#xd;
	var nrReprovacoes = getWFParametro(&quot;nrReprovacoes&quot;);&#xd;
	if(nrReprovacoes == &quot;&quot;){&#xd;
		nrReprovacoes = 0;&#xd;
	}else{&#xd;
		nrReprovacoes = parseInt(nrReprovacoes);&#xd;
	}&#xd;
	nrReprovacoes++;&#xd;
	setWFParametro(&quot;nrReprovacoes&quot;, nrReprovacoes);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>Aprovacao</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
 * Seta os campos para aprovação manual&#xd;
 * @param alcadaAtual&#xd;
 * @param aprovadorAtual&#xd;
 */&#xd;
 function aprovaManual(alcadaAtual, aprovadorAtual) {&#xd;
    var nomeAprovador = buscarNomeUsuario(aprovadorAtual.id);&#xd;
    log.info(&quot;KAKAROTO DENTRO APROVA MANUAL -&gt; &quot; + aprovadorAtual.id + &quot; &quot; + nomeAprovador);&#xd;
    hAPI.setCardValue(&quot;aprovacaoAutomatica&quot;, &quot;nao&quot;);&#xd;
    hAPI.setCardValue(&quot;aprovadorAtual&quot;, aprovadorAtual.id);&#xd;
    hAPI.setCardValue(&quot;nomeAprovadorAtual&quot;, nomeAprovador);&#xd;
    hAPI.setCardValue(&quot;dataAprovacaoAlcada&quot; + alcadaAtual, dateFormat(new Date()));&#xd;
    hAPI.setCardValue(&quot;nomeAprovadorAlcada&quot; + alcadaAtual, nomeAprovador);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Seta os campos para aprovação automatica&#xd;
 * @param aprovadorAtual&#xd;
 * @param somenteConhecimento&#xd;
 */&#xd;
function aprovaAutomatico(alcadaAtual, aprovadorAtual) {&#xd;
&#xd;
    var nomeAprovador = buscarNomeUsuario(aprovadorAtual.id);&#xd;
    log.info(&quot;aprovação automatica do: &quot; + nomeAprovador);&#xd;
    hAPI.setCardValue(&quot;aprovacaoAutomatica&quot;, &quot;sim&quot;);&#xd;
    hAPI.setCardValue(&quot;dataAprovacaoAlcada&quot; + alcadaAtual, dateFormat(new Date()));&#xd;
    hAPI.setCardValue(&quot;nomeAprovadorAlcada&quot; + alcadaAtual, nomeAprovador);&#xd;
    hAPI.setCardValue(&quot;nomeAprovadorAlcada&quot; + alcadaAtual, nomeAprovador);&#xd;
&#xd;
    var mensagemAprovacao = &quot;Atividade movimentada automaticamente devido a recorrência do aprovador em alçadas anteriores&quot;;&#xd;
    if (aprovadorAtual.conhecimento == &quot;true&quot;) {&#xd;
        mensagemAprovacao = &quot;Alçada de compra foi aprovada automaticamente através do cadastro de Ciente.&quot;;&#xd;
    }&#xd;
    hAPI.setCardValue(&quot;rdAprovadoAlcada&quot; + alcadaAtual, &quot;aprov&quot;);&#xd;
    hAPI.setCardValue(&quot;txtJustificativaAlcada&quot; + alcadaAtual, mensagemAprovacao);&#xd;
    //Envia email somente conhecimento&#xd;
    enviaEmailSomenteConhecimento(alcadaAtual, aprovadorAtual);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna todos aprovadores das alcadas&#xd;
 * @param aprovadores&#xd;
 * @returns {Array}&#xd;
 */&#xd;
function retornaAprovadores(aprovadores) {&#xd;
    try {&#xd;
        var valorTotalSolicitacao = getMoneyValue(hAPI.getCardValue(&quot;txtTotValCotacao&quot;));&#xd;
        var listaAprovadores = [];&#xd;
        var ultimoCentroCusto = false;&#xd;
        var primeiraAlcadaMATMED = true;&#xd;
        for (var i in aprovadores) {&#xd;
            if (aprovadores.existeAlcada == true) {&#xd;
                if (Array.isArray(aprovadores[i])) {&#xd;
                    var usuarioAlcada = aprovadores[i][0];&#xd;
                    var conhecimento = aprovadores[i][aprovadores[i].length - 1];&#xd;
                    if (usuarioAlcada != null &amp;&amp; usuarioAlcada != undefined &amp;&amp; usuarioAlcada != &apos;&apos;) {&#xd;
                        //verifica o tipo alcada&#xd;
                        if (aprovadores.tipo == &apos;diversos&apos;) {&#xd;
                            if (aprovadores[i] == aprovadores.usuarioGeral) { //verifica se é o usuário maximo da alcada&#xd;
                                //Pega o valor do ultimo aprovador da filial e verifica se ele é menor que o valor total da &#xd;
                                //solicitacao. Se for, adiciona o usuario geral para aprovacao.&#xd;
                                var valorUltimoAprovador = listaAprovadores[listaAprovadores.length - 1].valor;&#xd;
                                if (valorTotalSolicitacao &gt; valorUltimoAprovador) {&#xd;
                                    listaAprovadores.push({&#xd;
                                        id: usuarioAlcada,&#xd;
                                        conhecimento: conhecimento&#xd;
                                    });&#xd;
                                }&#xd;
                            } else { //Se não for o usuario geral&#xd;
                                var valorUsuario = getMoneyValue(aprovadores[i][1]);&#xd;
                                //informa se o usuário é um aprovador de filial ou de centro de custo&#xd;
                                var origemUsuario = aprovadores[i][3];&#xd;
                                //verifica se a variavel de controle é verdadeira e se o usuário atual é de um centro de custo&#xd;
                                //caso verdadeiro esta volta do loop é avançada de forma que o ultimo aprovador de centro de custo&#xd;
                                //já foi adicionado à lista&#xd;
                                if (ultimoCentroCusto == true &amp;&amp; origemUsuario == &apos;centroCusto&apos;) {&#xd;
                                    continue;&#xd;
                                }&#xd;
                                listaAprovadores.push({&#xd;
                                    id: usuarioAlcada,&#xd;
                                    valor: valorUsuario,&#xd;
                                    conhecimento: conhecimento&#xd;
                                });&#xd;
                                //A verificação de valores ocorre depois da inseção do usuário pelo fator &quot;valor até&quot; &#xd;
                                //Caso não seja informado um valor, o aprovador deve aprovar qualquer valor de compra&#xd;
                                //Os aprovadores de centro de custo possuem alçadas separadas dos aprovadores das filiais&#xd;
                                if (valorUsuario != null &amp;&amp; valorUsuario != undefined &amp;&amp; valorUsuario != &apos;&apos;) {&#xd;
                                    if (valorUsuario &gt; valorTotalSolicitacao) {&#xd;
                                        if (origemUsuario == &apos;centroCusto&apos;) {&#xd;
                                            //Caso seja verificado o ultimo aprovador de sentro de custo a aprovar a solicitação&#xd;
                                            //a variavel é setada para true&#xd;
                                            ultimoCentroCusto = true;&#xd;
                                        } else {&#xd;
                                            break;&#xd;
                                        }&#xd;
                                    }&#xd;
                                }&#xd;
                            }&#xd;
                        } else { //se for matmed&#xd;
                            var valorUsuario = getMoneyValue(aprovadores[i][1]);&#xd;
                            // glpi 136372&#xd;
                            if (valorTotalSolicitacao &gt; valorUsuario || (primeiraAlcadaMATMED &amp;&amp; hAPI.getCardValue(&quot;ckImportado&quot;) == &quot;on&quot;)) {&#xd;
                                listaAprovadores.push({&#xd;
                                    id: usuarioAlcada,&#xd;
                                    valor: valorUsuario,&#xd;
                                    conhecimento: conhecimento&#xd;
                                });&#xd;
                                primeiraAlcadaMATMED = false;&#xd;
                            }&#xd;
                        }&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
&#xd;
        if (listaAprovadores.length == 0) {&#xd;
            hAPI.setCardValue(&quot;existeAlcadas&quot;, &apos;false&apos;);&#xd;
        } else {&#xd;
            hAPI.setCardValue(&quot;existeAlcadas&quot;, &apos;true&apos;);&#xd;
        }&#xd;
        return listaAprovadores;&#xd;
    } catch (e) {&#xd;
        log.info(&quot;solicitacaoCompras.beforeStateEntry ERRO AO LISTAR APROVADORES DE ALÇADAS: &quot; + e)&#xd;
    }&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Seta para o HTML os dados dos aprovadores&#xd;
 * @param listaAprovadores lista de aprovadores retornado para dataset&#xd;
 */&#xd;
function setAprovadoresDOM(listaAprovadores) {&#xd;
    log.info(&quot;Kakaroto -&gt;  Dentro do setAprovadoresDOM&quot;);&#xd;
    for (var i in listaAprovadores) {&#xd;
        var alcadaAprovador = parseInt(i) + 1;&#xd;
        if (alcadaAprovador != 6) {&#xd;
            log.info(&quot;Kakaroto -&gt;  idAprovador&quot; + listaAprovadores[i].id);&#xd;
            hAPI.setCardValue(&quot;aprovadorAlcada&quot; + alcadaAprovador, listaAprovadores[i].id);&#xd;
            hAPI.setCardValue(&quot;valorAprovadorAlcada&quot; + alcadaAprovador, listaAprovadores[i].valor);&#xd;
            hAPI.setCardValue(&quot;aprovAlcadaConhecimento&quot; + alcadaAprovador, listaAprovadores[i].conhecimento);&#xd;
        } else {&#xd;
            hAPI.setCardValue(&quot;aprovadorAlcada&quot; + alcadaAprovador, listaAprovadores[i].id);&#xd;
            hAPI.setCardValue(&quot;aprovAlcadaConhecimento&quot; + alcadaAprovador, listaAprovadores[i].conhecimento);&#xd;
        }&#xd;
    }&#xd;
    log.info(&quot;Kakaroto -&gt; Fim set Aprovadores&quot;);&#xd;
}&#xd;
/**&#xd;
 * Busca todos aprovadores existentes no DOM&#xd;
 * @Return listaAprovadores com objetos aprovadores&#xd;
 */&#xd;
function getAprovadoresDom() {&#xd;
    var listaAprovador = [];&#xd;
    for (var alcada = 1; alcada &lt;= 6; alcada++) {&#xd;
        var idAprovador = hAPI.getCardValue(&quot;aprovadorAlcada&quot; + alcada);&#xd;
        if (idAprovador != &quot;&quot; &amp;&amp; idAprovador != undefined &amp;&amp; idAprovador != null) {&#xd;
            var aprovadorConhecimento = hAPI.getCardValue(&quot;aprovAlcadaConhecimento&quot; + alcada);&#xd;
            var aprovExistente = false;&#xd;
            //verifica se o aprovador já exite na liste de aprovação&#xd;
            for (var j = 0; j &lt; listaAprovador.length; j++) {&#xd;
                if (listaAprovador[j].id == idAprovador) {&#xd;
                    aprovExistente = true;&#xd;
                    break;&#xd;
                }&#xd;
            }&#xd;
            if (alcada != 6) {&#xd;
                var aprovadorValor = hAPI.getCardValue(&quot;valorAprovadorAlcada&quot; + alcada);&#xd;
                listaAprovador.push({&#xd;
                    id: idAprovador,&#xd;
                    valor: aprovadorValor,&#xd;
                    conhecimento: aprovadorConhecimento,&#xd;
                    aprovacaoExistente: aprovExistente&#xd;
                })&#xd;
            } else {&#xd;
                listaAprovador.push({&#xd;
                    id: idAprovador,&#xd;
                    conhecimento: aprovadorConhecimento,&#xd;
                    aprovacaoExistente: aprovExistente&#xd;
                })&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
&#xd;
    return listaAprovador;&#xd;
}&#xd;
&#xd;
&#xd;
function aprovaAlcada(alcada, listaAprovador, primeiraAlcada) {&#xd;
    log.info(&quot;KAKAROTO -&gt; dentro aprovaAlcada&quot; + alcada);&#xd;
    log.info(&quot;KAKAROTO -&gt; tamanho Lista&quot; + listaAprovador.length);&#xd;
    try {&#xd;
        var fimAprovacao = false;&#xd;
        while (!fimAprovacao) {&#xd;
            var posicaoAlcada = parseInt(alcada) - 1;&#xd;
            var aprovadorAtual = listaAprovador[posicaoAlcada];&#xd;
            var aprovadorRepitido = false;&#xd;
            log.info(alcada + &quot; - KAKAROTO -&gt; Dentro do While aprovador: &quot; + aprovadorAtual.id);&#xd;
            for (var x = 0; x &lt; posicaoAlcada; x++) {&#xd;
                log.info(&quot;KAKAROTO -&gt; X &quot; + x + &quot; - &quot; + listaAprovador[x].id);&#xd;
                if (listaAprovador[x].id == aprovadorAtual.id) {&#xd;
                    aprovadorRepitido = true;&#xd;
                    break;&#xd;
                }&#xd;
            }&#xd;
            if (aprovadorAtual.conhecimento != &apos;true&apos; &amp;&amp; aprovadorAtual.aprovacaoExistente != &apos;true&apos; &amp;&amp; aprovadorRepitido != true) {&#xd;
                log.info(alcada + &quot; - KAKAROTO -&gt; Aprovacao Manual&quot;);&#xd;
                aprovaManual(alcada, aprovadorAtual);&#xd;
                fimAprovacao = true;&#xd;
            } else {&#xd;
                //Aprovação automatica que sera chamada no beforeTaskSave&#xd;
                alcada++;&#xd;
                if (primeiraAlcada == true) {&#xd;
                    aprovaAutomatico(parseInt(alcada) - 1, aprovadorAtual);&#xd;
                    hAPI.setCardValue(&quot;contadorAlcada&quot;, parseInt(alcada));&#xd;
                } else if (alcada - 1 &gt;= listaAprovador.length) {&#xd;
                    log.info(&quot;KAKAROTO QTD: &quot; + alcada + &quot; - &quot; + listaAprovador.length);&#xd;
                    hAPI.setCardValue(&quot;existeAlcadas&quot;, &apos;false&apos;);&#xd;
                }&#xd;
            }&#xd;
            //Garante que o loop será encerrado quando estiver na ultima alcada&#xd;
            if (parseInt(alcada) &gt; listaAprovador.length) {&#xd;
                fimAprovacao = true;&#xd;
            }&#xd;
        }&#xd;
    } catch (err) {&#xd;
        //throw &quot;Um erro ocorrecu na aprovação da Alcada. &quot;+err;&#xd;
    }&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeStateEntry</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var LISTA_APROVADORES_DOM = getAprovadoresDom();&#xd;
&#xd;
function beforeStateEntry(sequenceId) {&#xd;
&#xd;
    populaCamposHiddenAnalytics(sequenceId);&#xd;
&#xd;
    var ATIVIDADE_FIM = 94;&#xd;
    var ATIVIDADE_TERMINO_APROVACAO = 141;&#xd;
    var currentState = parseInt(getValue(&quot;WKNumState&quot;));&#xd;
    var NUMPROC = getValue(&quot;WKVersDef&quot;);&#xd;
    var EMITIR_PEDIDO_COMPRA = 10;&#xd;
    var PRREENCHER_FORMULARIO_OBJETO_REAJUSTE_RECISAO_VALOR_VALIDADE = 39;&#xd;
    var ANEXAR_MINUTA = 42;&#xd;
    var E_CONTRATO = 86;&#xd;
    var EXC_APROVACAO = 117;&#xd;
    var PARECER_SOLICITANTE = 149;&#xd;
    var F = 189;&#xd;
    var EXCLUSIVO_ALCADA_APROVADA = 191;&#xd;
    var VERIFICA_TIPO_APROVACAO = 211;&#xd;
    var APROVACAO_AUTOMATICA = 209;&#xd;
&#xd;
    var isMobile = getValue(&quot;WKMobile&quot;);&#xd;
    var eContrato = hAPI.getCardValue(&quot;rdContrato&quot;);&#xd;
&#xd;
    if (NUMPROC &gt;= 26 &amp;&amp;&#xd;
        (sequenceId == PRREENCHER_FORMULARIO_OBJETO_REAJUSTE_RECISAO_VALOR_VALIDADE || (sequenceId == EXC_APROVACAO &amp;&amp; eContrato == &quot;nao&quot;))) {&#xd;
        validaAnexo();&#xd;
    }&#xd;
&#xd;
    if (sequenceId == SOLUCAO_INCONSISTENCIA &amp;&amp;&#xd;
        sequenceId != buscarAtividadeAtual()) {&#xd;
        // solucao da inconsistencia&#xd;
        incrementaNrReprovacoes();&#xd;
    }&#xd;
&#xd;
    if (currentState == 4 &amp;&amp; sequenceId == 6) {&#xd;
        var xml = hAPI.getCardValue(&quot;xmlDadosFornecedores&quot;);&#xd;
        if (xml != &quot;&quot;) {&#xd;
            if (xml != &quot;false&quot;) {&#xd;
                var processoCriados = parseFornecedores(xml);&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
&#xd;
    if (sequenceId == 4) {&#xd;
        aglutinarSolicitacoes();&#xd;
    }&#xd;
&#xd;
&#xd;
    if (sequenceId == 43) {&#xd;
        var nProcess = getValue(&quot;WKNumProces&quot;);&#xd;
        var processId = DatasetFactory.createConstraint(&#xd;
            &quot;processAttachmentPK.processInstanceId&quot;, nProcess, nProcess,&#xd;
            ConstraintType.MUST);&#xd;
        var companyId = DatasetFactory.createConstraint(&#xd;
            &quot;processAttachmentPK.companyId&quot;, getValue(&quot;WKCompany&quot;),&#xd;
            getValue(&quot;WKCompany&quot;), ConstraintType.MUST);&#xd;
&#xd;
        // Define os campos para ordenação&#xd;
        var sortingFields = new Array(&quot;originalMovementSequence&quot;);&#xd;
&#xd;
        var attach = DatasetFactory.getDataset(&quot;processAttachment&quot;, null,&#xd;
            new Array(processId, companyId), sortingFields);&#xd;
&#xd;
        var formId = getValue(&quot;WKCardId&quot;);&#xd;
&#xd;
        var ultimoMovimento = 0;&#xd;
        var qtdAnexoMov = 0;&#xd;
&#xd;
        var movimentoCurr = 0;&#xd;
&#xd;
        for (var j = 0; j &lt; attach.rowsCount; j++) {&#xd;
            movimentoCurr = attach.getValue(j, &quot;originalMovementSequence&quot;);&#xd;
            if (movimentoCurr != ultimoMovimento) {&#xd;
                ultimoMovimento = movimentoCurr;&#xd;
                qtdAnexoMov = 0;&#xd;
            }&#xd;
            if (attach.getValue(j, &quot;documentId&quot;) != formId) {&#xd;
                qtdAnexoMov = qtdAnexoMov + 1;&#xd;
            }&#xd;
&#xd;
        }&#xd;
    }&#xd;
&#xd;
    if (sequenceId == 44) {&#xd;
        var nProcess = getValue(&quot;WKNumProces&quot;);&#xd;
        var processId = DatasetFactory.createConstraint(&#xd;
            &quot;processAttachmentPK.processInstanceId&quot;, nProcess, nProcess,&#xd;
            ConstraintType.MUST);&#xd;
        var companyId = DatasetFactory.createConstraint(&#xd;
            &quot;processAttachmentPK.companyId&quot;, getValue(&quot;WKCompany&quot;),&#xd;
            getValue(&quot;WKCompany&quot;), ConstraintType.MUST);&#xd;
&#xd;
        // Define os campos para ordenação&#xd;
        var sortingFields = new Array(&quot;originalMovementSequence&quot;);&#xd;
&#xd;
        var attach = DatasetFactory.getDataset(&quot;processAttachment&quot;, null,&#xd;
            new Array(processId, companyId), sortingFields);&#xd;
&#xd;
        var formId = getValue(&quot;WKCardId&quot;);&#xd;
&#xd;
        var ultimoMovimento = 0;&#xd;
        var qtdAnexoMov = 0;&#xd;
        var movimentoCurr = 0;&#xd;
&#xd;
        for (var j = 0; j &lt; attach.rowsCount; j++) {&#xd;
            movimentoCurr = attach.getValue(j, &quot;originalMovementSequence&quot;);&#xd;
            if (movimentoCurr != ultimoMovimento) {&#xd;
                ultimoMovimento = movimentoCurr;&#xd;
                qtdAnexoMov = 0;&#xd;
            }&#xd;
&#xd;
            if (attach.getValue(j, &quot;documentId&quot;) != formId) {&#xd;
&#xd;
                qtdAnexoMov = qtdAnexoMov + 1;&#xd;
            }&#xd;
        }&#xd;
&#xd;
        if (qtdAnexoMov == 0) {&#xd;
            throw &quot;É necessário anexar contrato assinado!&quot;;&#xd;
        }&#xd;
    }&#xd;
&#xd;
    //Seta os dados do próximo aprovador.&#xd;
    if (sequenceId == 189) {&#xd;
        LISTA_APROVADORES_DOM = getAprovadoresDom();&#xd;
        var numProximaAlcada = parseInt(hAPI.getCardValue(&quot;contadorAlcada&quot;)) + 1;&#xd;
        if (numProximaAlcada &lt;= LISTA_APROVADORES_DOM.length) { //garante a existencia da proxima alcada&#xd;
            aprovaAlcada(numProximaAlcada, LISTA_APROVADORES_DOM, false);&#xd;
        }&#xd;
    }&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
function dateFormat(date) {&#xd;
    var mes = parseInt(date.getMonth()) + 1;&#xd;
    mes = (mes &lt; 10) ? &quot;0&quot; + mes : mes;&#xd;
    return date.getDate() + &quot;/&quot; + mes + &quot;/&quot; + date.getFullYear();&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
function parseFornecedores(xml) {&#xd;
&#xd;
    var arrayRetornoFornecedores = new Array();&#xd;
    var parser = new org.json.XML.toJSONObject(xml);&#xd;
    var root = parser.get(&quot;Empresas&quot;); // root&#xd;
    var processoCriados = &quot;&quot;;&#xd;
&#xd;
    if (root.has(&quot;Empresa&quot;)) {&#xd;
&#xd;
        var datasetMunicipios = consultaMunicipios(xml);&#xd;
        var fornecedores = root.get(&quot;Empresa&quot;);&#xd;
&#xd;
        if (fornecedores.getClass() == org.json.JSONArray) {&#xd;
            // array&#xd;
            for (var i = 0; i &lt; fornecedores.length(); i++) {&#xd;
                var fornecedor = fornecedores.get(i);&#xd;
                var iProcess = iniciaCadastroFornecedor(fornecedor,&#xd;
                    datasetMunicipios);&#xd;
                if (processoCriados == &quot;&quot;) {&#xd;
                    processoCriados = iProcess;&#xd;
                } else {&#xd;
                    processoCriados = processoCriados + &quot;, &quot; + iProcess;&#xd;
                }&#xd;
            }&#xd;
        } else {&#xd;
            // objeto&#xd;
            var iProcess = iniciaCadastroFornecedor(fornecedores,&#xd;
                datasetMunicipios);&#xd;
            processoCriados = iProcess;&#xd;
        }&#xd;
    }&#xd;
    return processoCriados;&#xd;
}&#xd;
&#xd;
function tiraEspacoesEmBranco(palavra) {&#xd;
    while (palavra.indexOf(&quot; &quot;) &gt; -1) {&#xd;
        palavra = palavra.replace(&quot; &quot;, &quot;&quot;);&#xd;
    }&#xd;
&#xd;
    return palavra;&#xd;
}&#xd;
&#xd;
function consultaMunicipios(xml) {&#xd;
    var arrayRetornoFornecedores = new Array();&#xd;
    var parser = new org.json.XML.toJSONObject(xml);&#xd;
    var root = parser.get(&quot;Empresas&quot;); // root&#xd;
    var queryCidades = &quot;&quot;;&#xd;
&#xd;
    if (root.has(&quot;Empresa&quot;)) {&#xd;
        var fornecedores = root.get(&quot;Empresa&quot;);&#xd;
        if (fornecedores.getClass() == org.json.JSONArray) {&#xd;
            // array&#xd;
            for (var i = 0; i &lt; fornecedores.length(); i++) {&#xd;
                var cidade = fornecedores.get(i).has(&quot;Cidade&quot;) ? fornecedores&#xd;
                    .get(i).getString(&quot;Cidade&quot;) : &quot;&quot;;&#xd;
                // &quot;+cidade);&#xd;
                if (cidade != &quot;&quot;) {&#xd;
                    cidade = formataNomeCidade(cidade);&#xd;
                    if (queryCidades == &quot;&quot;) {&#xd;
                        queryCidades = &quot;CC2_MUN = &apos;&quot; + cidade + &quot;&apos;&quot;;&#xd;
                    } else {&#xd;
                        queryCidades = queryCidades + &quot; OR CC2_MUN = &apos;&quot; +&#xd;
                            cidade + &quot;&apos;&quot;;&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        } else {&#xd;
            // objeto&#xd;
            var cidade = fornecedores.has(&quot;Cidade&quot;) ? fornecedores&#xd;
                .getString(&quot;Cidade&quot;) : &quot;&quot;;&#xd;
            if (cidade != &quot;&quot;) {&#xd;
                cidade = formataNomeCidade(cidade);&#xd;
                queryCidades = &quot;CC2_MUN = &apos;&quot; + cidade + &quot;&apos;&quot;;&#xd;
&#xd;
            }&#xd;
        }&#xd;
&#xd;
    }&#xd;
&#xd;
    var municipios = DatasetFactory.getDataset(&quot;consultaDadosProtheus&quot;, [&#xd;
        &quot;CC2&quot;, queryCidades, &quot;CC2_CODMUN,CC2_MUN&quot;&#xd;
    ], null, null);&#xd;
    return municipios.values;&#xd;
}&#xd;
&#xd;
function formataNomeCidade(palavra) {&#xd;
    var nova = &quot;&quot;;&#xd;
    var com_acento = &quot;??????????????????????????????????????????????&quot;;&#xd;
    var sem_acento = &quot;aaaaaeeeeiiiiooooouuuucAAAAAEEEEIIIIOOOOOUUUUC&quot;;&#xd;
    nova = &quot;&quot;;&#xd;
    for (var i = 0; i &lt; (&quot;&quot; + palavra).length; i++) {&#xd;
        if (com_acento.indexOf(palavra.substr(i, 1)) &gt;= 0)&#xd;
            nova += sem_acento.substr(com_acento.indexOf(palavra.substr(i, 1)),&#xd;
                1);&#xd;
        else&#xd;
            nova += palavra.substr(i, 1);&#xd;
    }&#xd;
&#xd;
    nova = nova.toUpperCase();&#xd;
&#xd;
    return nova;&#xd;
}&#xd;
&#xd;
function validaAnexo() {&#xd;
    var teveNegociacao = hAPI.getCardValue(&quot;rdTeveNegociacao&quot;);&#xd;
&#xd;
    if (teveNegociacao == &quot;sim&quot;) {&#xd;
        var verificarAnexo = new checkAnexo();&#xd;
        verificarAnexo.executar(&quot;comprovante de valor negociado&quot;);&#xd;
    }&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Envia email somente conhecimento&#xd;
 * @param numeroAlcada O numero da alçada aprovada automaticamente&#xd;
 * @param responsavelAlcada Número da matricula(Id) do responsavel pela alçada&#xd;
 */&#xd;
function enviaEmailSomenteConhecimento(numeroAlcada, responsavelAlcada) {&#xd;
    var data = buscaDadosEmail();&#xd;
    var sender = &quot;4s2f7mmb7dfs64qv1452799368975&quot;;&#xd;
    try {&#xd;
        //Parametros de envio&#xd;
        var parameters = new java.util.HashMap();&#xd;
        parameters.put(&quot;subject&quot;,&#xd;
            &quot;Notifica\u00E7\u00E3o de Tratativa de Pesquisa de Satisfa\u00E7\u00E3o - &quot; +&#xd;
            String(getValue(&quot;WKNumProces&quot;)));&#xd;
        parameters.put(&quot;INSTANCE_ID&quot;, String(getValue(&quot;WKNumProces&quot;)));&#xd;
        parameters.put(&quot;TYPE&quot;, getType());&#xd;
        parameters.put(&quot;subject&quot;, &quot;Aprovação automática de Alçada - &quot; + String(getValue(&quot;WKNumProces&quot;)));&#xd;
        parameters.put(&quot;NUM_ALCADA&quot;, String(numeroAlcada));&#xd;
        parameters.put(&quot;NUM_SOLICITACAO&quot;, String(getValue(&quot;WKNumProces&quot;)));&#xd;
        parameters.put(&quot;NOME_FILIAL&quot;, data.filial);&#xd;
        parameters.put(&quot;NOME_SOLICITANTE&quot;, data.solicitante);&#xd;
        parameters.put(&quot;COD_NAME_CC&quot;, data.centroDeCusto);&#xd;
        parameters.put(&quot;VALOR_TOTAL&quot;, data.valorTotal);&#xd;
        //Seta os destinatarios&#xd;
        var recipients = new java.util.ArrayList();&#xd;
        recipients.add(responsavelAlcada);&#xd;
        //envia o email&#xd;
        notifier.notify(sender, &quot;template_email_somente_conhecimento&quot;, parameters, recipients, &quot;text/html&quot;);&#xd;
    } catch (e) {&#xd;
        log.info(&quot;***** Ocorreu um erro ao tentar enviar o e-mail: &quot; + e);&#xd;
    }&#xd;
}&#xd;
&#xd;
//#FLUIG-89 Busca dados da alcada de aprovação.&#xd;
function buscaDadosEmail() {&#xd;
    var nomeFilial = hAPI.getCardValue(&quot;FilialAlcada&quot;);&#xd;
    var nomeRequisitante = hAPI.getCardValue(&quot;txtNmRequisitante&quot;);&#xd;
    var codCentroCutsto = hAPI.getCardValue(&quot;txtCodCentroCusto&quot;);&#xd;
    var nomeCentroCusto = hAPI.getCardValue(&quot;txtNomeCentroCusto&quot;);&#xd;
    var totalCotacao = hAPI.getCardValue(&quot;txtTotValCotacao&quot;);&#xd;
&#xd;
    return {&#xd;
        &apos;filial&apos;: nomeFilial,&#xd;
        &apos;solicitante&apos;: nomeRequisitante,&#xd;
        &apos;centroDeCusto&apos;: codCentroCutsto + &quot; &quot; + nomeCentroCusto,&#xd;
        &apos;valorTotal&apos;: totalCotacao&#xd;
    }&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask212</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask212(attempt, message) {&#xd;
	log.info(&quot;### compras.serviceTask212 - Iniciado&quot;);&#xd;
	emitirPedidoCompra();&#xd;
}&#xd;
var tbCotacoes;&#xd;
function emitirPedidoCompra() {&#xd;
	var arrVencedoresCotacao = [];&#xd;
	var objvencedores = hAPI.getCardValue(&apos;dadosBancariosFornecedor&apos;);&#xd;
	if (objvencedores != undefined &amp;&amp; objvencedores != &quot;&quot; &amp;&amp; objvencedores != null) {&#xd;
		if (JSON.parse(objvencedores).length == undefined) {&#xd;
			arrVencedoresCotacao = [objvencedores];&#xd;
		} else {&#xd;
			arrVencedoresCotacao = JSON.parse(objvencedores);&#xd;
		}&#xd;
	} else {&#xd;
		throw &apos;Falha ao Gerar Pedido de Compras no Protheus, ocorreu um erro ao consultar os dados dos fornecedores vencedores.&apos;;&#xd;
	}&#xd;
	var numPedido = hAPI.getCardValue(&apos;numPedido&apos;);&#xd;
	var arrPedidosCompras = [];&#xd;
	if (numPedido != null &amp;&amp; numPedido != undefined &amp;&amp; numPedido != &quot;&quot; &amp;&amp; numPedido != &quot;null&quot;) {&#xd;
		arrPedidosCompras = JSON.parse(numPedido);&#xd;
	}&#xd;
	log.info(&quot;arrVencedoresCotacao DEBUG: &quot; + JSON.stringify(arrVencedoresCotacao));&#xd;
	log.dir(arrVencedoresCotacao);&#xd;
	var dataAbertura = new Date();&#xd;
	var dataAtual = formataTempo(dataAbertura.getDate()) + &quot;/&quot; + formataTempo((dataAbertura.getMonth() + 1)) + &quot;/&quot; + dataAbertura.getFullYear();&#xd;
&#xd;
	var tbDesvinculado = consultaPaiFilho([&apos;txtCodItemProdutoDesv&apos;]);&#xd;
	log.info(&quot;tbDesvinculado DEBUG: &quot; + tbDesvinculado);&#xd;
	log.dir(tbDesvinculado);&#xd;
	var tbProduto = consultaPaiFilho([ &apos;txtCodItemProduto&apos;,&apos;nmFabricante&apos; ]);&#xd;
	tbCotacoes = consultaPaiFilho([ &apos;codItemCotacao&apos;,&#xd;
									&apos;SeqItemCotacao&apos;,&#xd;
									&apos;prioridadeGeral&apos;,&#xd;
									&apos;qtdeItemCotacao&apos;,&#xd;
									&apos;vlrUnitItemCotacao&apos;,&#xd;
									&apos;vlrTotalItemCotacao&apos;,&#xd;
									&apos;vlrIpiItemCotacao&apos;,&#xd;
									&apos;outrasDespItemCotacao&apos;,&#xd;
									&apos;prazoItemCotacao&apos;,&#xd;
									&apos;formaPagamento&apos;,&#xd;
									&apos;codFornecedorCotacao&apos;,&#xd;
									&apos;vencedoraCotacao&apos;&#xd;
								]);&#xd;
	&#xd;
	if(arrVencedoresCotacao.length&lt;=0)&#xd;
		throw &apos;Falha ao Gerar Pedido de Compras no Protheus, não consigo localizar os lanctos referente a cotação.&apos;;&#xd;
	else&#xd;
	for (var i = 0; i &lt; arrVencedoresCotacao.length; i++) {&#xd;
		// try {&#xd;
		if (!consultaPedidoExistente(arrVencedoresCotacao[i].codFornecedor)) {&#xd;
			var xmlPedido = &quot;&lt;PedidoCompra&gt;&quot; +&#xd;
				&quot;&lt;Operacao&gt;&quot; +&#xd;
				&quot;&lt;Id&gt;1&lt;/Id&gt;&quot; +&#xd;
				&quot;&lt;/Operacao&gt;&quot; +&#xd;
				&quot;&lt;Cabecalho&gt;&quot; +&#xd;
				&quot;&lt;C7_FILIAL&gt;&quot; + hAPI.getCardValue(&quot;filial_protheus&quot;) + &quot;&lt;/C7_FILIAL&gt;&quot; +&#xd;
				&quot;&lt;C7_FORNECE&gt;&quot; + arrVencedoresCotacao[i].codFornecedor + &quot;&lt;/C7_FORNECE&gt;&quot; +&#xd;
				&quot;&lt;C7_LOJA&gt;&quot; + arrVencedoresCotacao[i].loja + &quot;&lt;/C7_LOJA&gt;&quot; +&#xd;
				&quot;&lt;C7_COND&gt;&quot; + arrVencedoresCotacao[i].condPagto + &quot;&lt;/C7_COND&gt;&quot; +&#xd;
				&quot;&lt;C7_TPFRETE&gt;&quot; + arrVencedoresCotacao[i].tpFrete + &quot;&lt;/C7_TPFRETE&gt;&quot; +&#xd;
				&quot;&lt;C7_FRETE&gt;&quot; + arrVencedoresCotacao[i].vlrFrete + &quot;&lt;/C7_FRETE&gt;&quot; +&#xd;
				&quot;&lt;C7_EMISSAO&gt;&quot; + formataDataProtheus(dataAtual) + &quot;&lt;/C7_EMISSAO&gt;&quot; +&#xd;
				&quot;&lt;C7_FILENT&gt;&quot; + hAPI.getCardValue(&quot;filial_protheus&quot;) + &quot;&lt;/C7_FILENT&gt;&quot; +&#xd;
				&quot;&lt;C7_CONTATO&gt;&quot; + removeAcentos(arrVencedoresCotacao[i].contato) + &quot;&lt;/C7_CONTATO&gt;&quot; +&#xd;
				&quot;&lt;C7_NUM&gt;&lt;/C7_NUM&gt;&quot; +&#xd;
				&quot;&lt;/Cabecalho&gt;&quot; +&#xd;
				&quot;&lt;Itens&gt;&quot;;&#xd;
&#xd;
			if (tbDesvinculado[0].txtCodItemProdutoDesv != &apos;&apos; &amp;&amp;&#xd;
				tbDesvinculado[0].txtCodItemProdutoDesv != undefined &amp;&amp;&#xd;
				tbDesvinculado[0].txtCodItemProdutoDesv != null) {&#xd;
				var ultimoIndiceSemDesvinculo = 0;&#xd;
				for (var k = 0; k &lt; tbCotacoes.length;) {&#xd;
					var achouDesv = false;&#xd;
					for (var o = 0; o &lt; tbDesvinculado.length; o++) {&#xd;
						if (tbCotacoes[k] != undefined &amp;&amp;&#xd;
							tbCotacoes[k].codItemCotacao != undefined &amp;&amp;&#xd;
							tbDesvinculado[o].txtCodItemProdutoDesv != undefined &amp;&amp;&#xd;
							tbCotacoes[k].codItemCotacao == tbDesvinculado[o].txtCodItemProdutoDesv) {&#xd;
							tbCotacoes.splice(k, 1);&#xd;
							achouDesv = true;&#xd;
							break;&#xd;
						}&#xd;
					}&#xd;
					// GLPI 147674&#xd;
					// considera que ao remover com splice um item do array os indices sao realinhados&#xd;
					if (!achouDesv) {&#xd;
						ultimoIndiceSemDesvinculo++;&#xd;
					}&#xd;
					k = ultimoIndiceSemDesvinculo;&#xd;
				}&#xd;
				log.info(&quot;TBDESVINCULADO PEDIDO DE COMPRAS: &quot; + tbDesvinculado);&#xd;
				log.dir(tbDesvinculado);&#xd;
				log.info(&quot;TBCOTACAO PEDIDO DE COMPRAS: &quot; + tbCotacoes);&#xd;
				log.dir(tbCotacoes);&#xd;
			}&#xd;
&#xd;
			var xAchei=false;&#xd;
			for (var j = 0; j &lt; tbCotacoes.length; j++) {&#xd;
				var vencedoraCotacao = tbCotacoes[j].vencedoraCotacao == &quot;on&quot; ? true : false;&#xd;
				if (arrVencedoresCotacao[i].codFornecedor == tbCotacoes[j].codFornecedorCotacao &amp;&amp;&#xd;
					vencedoraCotacao) {&#xd;
					var fabricante = &apos;&apos;;&#xd;
					for (var y = 0; y &lt; tbProduto.length; y++) {&#xd;
						if (tbCotacoes[j].codItemCotacao == tbProduto[y].txtCodItemProduto) {&#xd;
							fabricante = removeAcentos(tbProduto[y].nmFabricante);&#xd;
							break;&#xd;
						}&#xd;
					}&#xd;
					var item       = formataSeqProtheus(tbCotacoes[j].SeqItemCotacao, 4);&#xd;
					var produto    = tbCotacoes[j].codItemCotacao;&#xd;
					var prioridade = hAPI.getCardValue(&quot;prioridadeGeral&quot;);&#xd;
&#xd;
					if (prioridade == &apos;N&apos;) &#xd;
						prioridade = &apos;NORMAL&apos;;&#xd;
					else &#xd;
						if (prioridade == &apos;E&apos;) &#xd;
							prioridade = &apos;EMERGENCIAL&apos;;&#xd;
						else &#xd;
							prioridade = &apos;ONCOPROD&apos;;&#xd;
					&#xd;
					// 15.03.24 - AJUSTE CASAS DECIMAIS PARA OS CAMPOS DE VALORES&#xd;
					// var prioridade = tbCotacoes[j].sPrioridadeProduto;&#xd;
					var quantidade        = tbCotacoes[j].qtdeItemCotacao,&#xd;
						preco             = formataMoeda(tbCotacoes[j].vlrUnitItemCotacao   ,4),&#xd;
						total             = formataMoeda(tbCotacoes[j].vlrTotalItemCotacao  ,2),&#xd;
						valIpi            = formataMoeda(tbCotacoes[j].vlrIpiItemCotacao    ,2),&#xd;
						despesa           = formataMoeda(tbCotacoes[j].outrasDespItemCotacao,2),&#xd;
						centroCusto       = hAPI.getCardValue(&quot;txtCodCentroCusto&quot;),&#xd;
						dataPrf           = formataDataProtheus(tbCotacoes[j].prazoItemCotacao),&#xd;
						solicFluig        = hAPI.getCardValue(&quot;txtSolicitacao&quot;),&#xd;
						infoAdicionais    = removeAcentos(hAPI.getCardValue(&quot;txtAInfoAdicionais&quot;)),&#xd;
						localEntrega      = removeAcentos(hAPI.getCardValue(&quot;txtLocalEntrega&quot;)),&#xd;
						hashIndicePedido  = Math.floor(Math.random() * 90000) + 10000 + &quot;&quot;,&#xd;
						pedidoCorporativo = hAPI.getCardValue(&quot;pedidoCorporativo&quot;) == &apos;1&apos; ? &apos;1&apos; : &apos;2&apos;;&#xd;
						&#xd;
					&#xd;
					//&quot;&lt;C7_TOTAL&gt;&quot; + total + &quot;&lt;/C7_TOTAL&gt;&quot; +&#xd;
					/**&#xd;
					 * O CAMPO É C7_ZENVTAS, QUANDO FOR INDIRETOS PODE MANDAR ESSE CAMPO COM S - MANDAR NOS ITENS&#xd;
					 * &#xd;
					 * MD, MM, SO, LB, DT, MQ É TIPO DE PRODUTO Mat/Med -&gt; tipoProduto -&gt; tipoProduto___1 -&gt; tbItens x txtCodItemProduto___1&#xd;
					 * DEMAIS INDIRETOS&#xd;
					 * &#xd;
					 * PRODUTO QUE COMEÇA COM 050000 ATÉ 075000 É Mat/Med&#xd;
					 * CODIGOS 049999 PARA BAIXO É INDIRETOS&#xd;
					 * CÓDIGO INICIA COM 88 TB É INDIRETOS&#xd;
					 * &#xd;
					 */&#xd;
					var xINDIRETO =&apos;N&apos;;&#xd;
					if(produto.substring(0,2)==&apos;88&apos;)&#xd;
						xINDIRETO =&apos;S&apos;;&#xd;
					else&#xd;
						if(parseInt(produto)&lt;=49999)&#xd;
							xINDIRETO =&apos;S&apos;;&#xd;
						else {&#xd;
							var xTipo = procuraTipoProduto(produto);&#xd;
							if(xTipo !=&apos;MD&apos; &amp;&amp;&#xd;
							   xTipo !=&apos;MM&apos; &amp;&amp; &#xd;
							   xTipo !=&apos;SO&apos; &amp;&amp;&#xd;
							   xTipo !=&apos;LB&apos; &amp;&amp;&#xd;
							   xTipo !=&apos;DT&apos; &amp;&amp;&#xd;
							   xTipo !=&apos;MQ&apos;)&#xd;
								xINDIRETO = &apos;S&apos;&#xd;
						}			&#xd;
					&#xd;
					xAchei =true;&#xd;
					var strItem = &#xd;
							&quot;&lt;Item&gt;&quot; +&#xd;
								&quot;&lt;C7_ITEM&gt;&quot;   +item              +&quot;&lt;/C7_ITEM&gt;&quot; +&#xd;
								&quot;&lt;C7_PRODUTO&gt;&quot;+produto           +&quot;&lt;/C7_PRODUTO&gt;&quot; +&#xd;
								&quot;&lt;C7_ZPRIORI&gt;&quot;+prioridade        +&quot;&lt;/C7_ZPRIORI&gt;&quot; +&#xd;
								&quot;&lt;C7_QUANT&gt;&quot;  +quantidade        +&quot;&lt;/C7_QUANT&gt;&quot; +&#xd;
								&quot;&lt;C7_PRECO&gt;&quot;  +preco             +&quot;&lt;/C7_PRECO&gt;&quot; +&#xd;
								&quot;&lt;C7_VALIPI&gt;&quot; +valIpi            +&quot;&lt;/C7_VALIPI&gt;&quot; +&#xd;
								&quot;&lt;C7_DESPESA&gt;&quot;+despesa           +&quot;&lt;/C7_DESPESA&gt;&quot; +&#xd;
								&quot;&lt;C7_CC&gt;&quot;     +centroCusto       +&quot;&lt;/C7_CC&gt;&quot; +&#xd;
								&quot;&lt;C7_DATPRF&gt;&quot; +dataPrf           +&quot;&lt;/C7_DATPRF&gt;&quot; +&#xd;
								&quot;&lt;C7_ZIDFLG&gt;&quot; +solicFluig        +&quot;&lt;/C7_ZIDFLG&gt;&quot; +&#xd;
								&quot;&lt;C7_ZINFADI&gt;&quot;+infoAdicionais    +&quot;&lt;/C7_ZINFADI&gt;&quot; +&#xd;
								&quot;&lt;C7_ZLCENTR&gt;&quot;+localEntrega      +&quot;&lt;/C7_ZLCENTR&gt;&quot; +&#xd;
								&quot;&lt;C7_ZFABRIC&gt;&quot;+fabricante        +&quot;&lt;/C7_ZFABRIC&gt;&quot; +&#xd;
								&quot;&lt;C7_ZSEQ&gt;&quot;   +hashIndicePedido  +&quot;&lt;/C7_ZSEQ&gt;&quot; +&#xd;
								&quot;&lt;C7_XPEDIDA&gt;&quot;+pedidoCorporativo +&quot;&lt;/C7_XPEDIDA&gt;&quot; +&#xd;
								&quot;&lt;C7_ZENVTAS&gt;&quot;+xINDIRETO         +&quot;&lt;/C7_ZENVTAS&gt;&quot; +&#xd;
								&quot;&lt;C7_XFORPAG&gt;&quot;+arrVencedoresCotacao[i].formaPagto+&quot;&lt;/C7_XFORPAG&gt;&quot; +&#xd;
							&quot;&lt;/Item&gt;&quot;;&#xd;
					&#xd;
					xmlPedido += strItem;&#xd;
&#xd;
					log.info(&quot;STRITEM PEDIDO DE COMPRAS: &quot; + strItem);&#xd;
					log.dir(strItem);&#xd;
				}&#xd;
				log.info(&quot;TBCOTACAO PEDIDO DE COMPRAS: &quot; + tbCotacoes);&#xd;
				log.dir(tbCotacoes);&#xd;
			}&#xd;
			if(xAchei){&#xd;
				log.info(&quot;TBCOTACAO PEDIDO DE COMPRAS: &quot; + tbCotacoes);&#xd;
				log.dir(tbCotacoes);&#xd;
				log.info(&quot;STRITEM PEDIDO DE COMPRAS: &quot; + strItem);&#xd;
				log.dir(strItem);&#xd;
				&#xd;
				xmlPedido += &quot;&lt;/Itens&gt;&quot; +&#xd;
					         &quot;&lt;/PedidoCompra&gt;&quot;;&#xd;
				&#xd;
				log.info(&quot;XML PEDIDO DE COMPRAS: &quot; + xmlPedido);&#xd;
				log.dir(xmlPedido);&#xd;
				try {&#xd;
					var dsPedido      = DatasetFactory.getDataset(&apos;ds_gerarPedidoCompra&apos;, [xmlPedido], null, null);&#xd;
					var codRetorno    = dsPedido.getValue(0, &quot;codigoPedido&quot;);&#xd;
					var statusRetorno = dsPedido.getValue(0, &quot;statusRetorno&quot;);&#xd;
				} catch (e) {&#xd;
					throw &apos;Falha ao Gerar Pedido de Compras no Protheus &apos; + e;&#xd;
				}&#xd;
			}&#xd;
		} else {&#xd;
			var codRetorno = retornaPedidoExistente(arrVencedoresCotacao[i].codFornecedor);&#xd;
		}&#xd;
		if (codRetorno == &apos;ERRO&apos;) {&#xd;
			throw &quot;Erro na integração. \n&quot; + statusRetorno;&#xd;
		} else {&#xd;
			arrPedidosCompras.push(codRetorno + &apos;&apos;);&#xd;
			hAPI.setCardValue(&quot;numPedido&quot;, JSON.stringify(arrPedidosCompras));&#xd;
		}&#xd;
		//	} catch (e) {&#xd;
		//		throw &apos;Falha ao Gerar Pedido de Compras no Protheus &apos; + e;&#xd;
		//	}&#xd;
	}&#xd;
}&#xd;
&#xd;
function procuraTipoProduto(qPRODUTO) {&#xd;
	// NA TABELA tbItens LOCALIZAR O txtCodItemProduto___ PELO qPRODUTO E RETORNAR tipoProduto___ &#xd;
	var xTipo = &apos;XX&apos;;&#xd;
	var produtos = $(&apos;#tbItens&apos;).find(&apos;tr&apos;);&#xd;
	for (var iItem=2; iItem&lt;produtos.length; iItem++) {&#xd;
		// txtCodItemProduto___[?]&#xd;
		if (qPRODUTO == produtos[iItem].children[18].children[1].value) {&#xd;
			xTipo = produtos[iItem].children[18].children[4].value;&#xd;
			break;&#xd;
		}&#xd;
	}&#xd;
	return xTipo;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Converte o valor de um campo monetário para o formato aceito pelo Protheus&#xd;
 * @param valor String do valor informado&#xd;
 * @returns retorna o valor monetário como float&#xd;
 */&#xd;
function formataMoeda(valor,casas) {&#xd;
	valor = valor.replace(&quot;R$&quot;,&apos;&apos;);&#xd;
	valor = valor.replace(&quot; &quot; ,&apos;&apos;);&#xd;
	&#xd;
	while (valor.indexOf(&quot;.&quot;) != -1) &#xd;
		valor = valor.replace(&apos;.&apos;, &apos;&apos;);&#xd;
	&#xd;
	valor = valor.replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	valor = parseFloat(valor).toFixed(casas);&#xd;
	return valor;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Consulta campos de Pai Filho no formulário&#xd;
 * @param fieldList Array de strings dos atributos &quot;Name&quot; (sem &quot;___&quot;) dos campos do pai filho&#xd;
 * @return Array de objetos, cada index do array corresponde a uma linha do pai filho com o&#xd;
 * &quot;Name&quot; de cada campo como seletor do atributo&#xd;
 */&#xd;
function consultaPaiFilho(fildList) {&#xd;
	var resultPaiFilho = [];&#xd;
	var numProcess = getValue(&quot;WKNumProces&quot;);&#xd;
	//Consulta todos os campos do formulário apartir do WKNumProces&#xd;
	var mapa = hAPI.getCardData(parseInt(numProcess));&#xd;
	var it = mapa.keySet().iterator();&#xd;
	//Loop para percorrer todos os campos do formulário&#xd;
	while (it.hasNext()) {&#xd;
		var campo = it.next();&#xd;
		//Verifica se o campo atual do loop pertence a um Pai Filho&#xd;
		if (campo.indexOf(&quot;___&quot;) &gt; -1) {&#xd;
			//Percorre a lista de campos informada como parametro&#xd;
			var nomeCampo = campo.split(&quot;___&quot;)[0].trim();&#xd;
			var indexCampo = parseInt(campo.split(&quot;___&quot;)[1]) - 1;&#xd;
			if (resultPaiFilho[indexCampo] == undefined) {&#xd;
				resultPaiFilho[indexCampo] = {}&#xd;
			}&#xd;
			for (var a = 0; a &lt; fildList.length; a++) {&#xd;
				if (fildList[a] == nomeCampo) {&#xd;
					//Adiciona um atributo com o nome do campo contendo seu valor ao array de resultado&#xd;
					//Cada linha do array corresponde a uma linha da tabela com a primeira linha sendo o index 0&#xd;
					resultPaiFilho[indexCampo][nomeCampo] = mapa.get(campo);&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
	return resultPaiFilho;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Transforma o objeto do tipo data para uma string no formato de data do protheus&#xd;
 * @param data String de data DD/MM/YYYY&#xd;
 * @returns String com a data passada no formato aceito pelo protheus. Retorna Falso se ocorrer algum erro&#xd;
 */&#xd;
function formataDataProtheus(data) {&#xd;
	try {&#xd;
		data = data.split(&apos;/&apos;);&#xd;
		var ano = data[2];&#xd;
		var mes = data[1];&#xd;
		var dia = data[0];&#xd;
		var dateResult = ano + &quot;&quot; + mes + &quot;&quot; + dia;&#xd;
		return dateResult;&#xd;
	} catch (err) {&#xd;
		return false;&#xd;
	}&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Adiciona zeros a esquerda até que a string tenha 4 caracteres, para que se adeque ao padrão do Protheus&#xd;
 * @param number String que receberá os zeros a esquerda&#xd;
 * @param length Número de caracteres que a string deverá ter&#xd;
 * @returns String com os zeros adicinados a esquerda&#xd;
 */&#xd;
function formataSeqProtheus(number, length) {&#xd;
	var str = &apos;&apos; + number;&#xd;
	while (str.length &lt; length) {&#xd;
		str = &apos;0&apos; + str;&#xd;
	}&#xd;
	return str;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Recebe uma String como paramentro e a retorna sem os acentos&#xd;
 * @param string&#xd;
 * @returns&#xd;
 */&#xd;
function removeAcentos(string) {&#xd;
	if (string != &apos;&apos; &amp;&amp; string != null &amp;&amp; string != undefined) {&#xd;
		string = new java.lang.String(string);&#xd;
		string = string.toUpperCase();&#xd;
		string = string.replaceAll(&apos;Á|À|Â|Ã|Ä&apos;, &apos;A&apos;);&#xd;
		string = string.replaceAll(&apos;É|È|Ê|Ë&apos;, &apos;E&apos;);&#xd;
		string = string.replaceAll(&apos;Í|Ì|Î|Ï&apos;, &apos;I&apos;);&#xd;
		string = string.replaceAll(&apos;Ó|Ò|Ô|Õ|Ö&apos;, &apos;O&apos;);&#xd;
		string = string.replaceAll(&apos;Ú|Ù|Û|Ü&apos;, &apos;U&apos;);&#xd;
		string = string.replaceAll(&apos;Ç&apos;, &apos;C&apos;);&#xd;
		string = string.replaceAll(&apos;[^A-Za-z0-9]&apos;, &apos;&apos;);&#xd;
	}&#xd;
	return string&#xd;
}&#xd;
&#xd;
function consultaPedidoExistente(fornecedor) {&#xd;
	var numProcess = hAPI.getCardValue(&quot;txtSolicitacao&quot;);&#xd;
	var constraintPedidoCompra = DatasetFactory.createConstraint(&apos;FILIAL&apos;, hAPI.getCardValue(&quot;filial_protheus&quot;), hAPI.getCardValue(&quot;filial_protheus&quot;), ConstraintType.MUST);&#xd;
	var constraintPedidoCompra2 = DatasetFactory.createConstraint(&apos;ID_FLUIG&apos;, numProcess, numProcess, ConstraintType.MUST);&#xd;
	var constraintPedidoCompra3 = DatasetFactory.createConstraint(&apos;COD_FORNECEDOR&apos;, fornecedor, fornecedor, ConstraintType.MUST);&#xd;
	var ds_pedidoCompra = DatasetFactory.getDataset(&apos;ds_produtoPedidoCompra&apos;, null, [constraintPedidoCompra, constraintPedidoCompra2, constraintPedidoCompra3], null);&#xd;
	if (ds_pedidoCompra.getValue(0, &quot;PEDIDO&quot;) != null &amp;&amp;&#xd;
		ds_pedidoCompra.getValue(0, &quot;PEDIDO&quot;) != undefined &amp;&amp;&#xd;
		ds_pedidoCompra.getValue(0, &quot;PEDIDO&quot;) != &quot;&quot;) {&#xd;
		return true;&#xd;
	}&#xd;
	return false;&#xd;
}&#xd;
&#xd;
function retornaPedidoExistente(fornecedor) {&#xd;
	var numProcess = hAPI.getCardValue(&quot;txtSolicitacao&quot;);&#xd;
	var constraintPedidoCompra = DatasetFactory.createConstraint(&apos;FILIAL&apos;, hAPI.getCardValue(&quot;filial_protheus&quot;), hAPI.getCardValue(&quot;filial_protheus&quot;), ConstraintType.MUST);&#xd;
	var constraintPedidoCompra2 = DatasetFactory.createConstraint(&apos;ID_FLUIG&apos;, numProcess, numProcess, ConstraintType.MUST);&#xd;
	var constraintPedidoCompra3 = DatasetFactory.createConstraint(&apos;COD_FORNECEDOR&apos;, fornecedor, fornecedor, ConstraintType.MUST);&#xd;
	var ds_pedidoCompra = DatasetFactory.getDataset(&apos;ds_produtoPedidoCompra&apos;, null, [constraintPedidoCompra, constraintPedidoCompra2, constraintPedidoCompra3], null);&#xd;
	if (ds_pedidoCompra.getValue(0, &quot;PEDIDO&quot;) != null &amp;&amp;&#xd;
		ds_pedidoCompra.getValue(0, &quot;PEDIDO&quot;) != undefined &amp;&amp;&#xd;
		ds_pedidoCompra.getValue(0, &quot;PEDIDO&quot;) != &quot;&quot;) {&#xd;
		return ds_pedidoCompra.getValue(0, &quot;PEDIDO&quot;);&#xd;
	}&#xd;
	return null;&#xd;
}&#xd;
&#xd;
function formataTempo(i) {&#xd;
	if (i &lt; 10) {&#xd;
		i = &quot;0&quot; + i;&#xd;
	}&#xd;
	return i;&#xd;
}&#xd;
&#xd;
function seExisteItensCotacao(codFornecedor) {&#xd;
	for (var j2 = 0; j &lt; tbCotacoes.length; j2++) {&#xd;
		var vencedoraCotacao = tbCotacoes[j2].vencedoraCotacao == &quot;on&quot; ? true : false;&#xd;
		if (codFornecedor == tbCotacoes[j2].codFornecedorCotacao &amp;&amp; vencedoraCotacao) &#xd;
			return true;&#xd;
	}&#xd;
	return false;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>tipoMaterial</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function tipoMaterial(){&#xd;
		&#xd;
	var grupo = hAPI.getCardValue(&quot;grupoAnaliseComprador&quot;);&#xd;
	&#xd;
	if (grupo == hAPI.getCardValue(&quot;poolAbertura&quot;))&#xd;
		return &quot;matmed&quot;;&#xd;
	else&#xd;
		return &quot;diversos&quot;;&#xd;
	&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>POR_LITERALS</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>checkAnexo.AnexoObrigatorio=Deve haver no mínimo um documento anexado ao processo!!!&lt;br&gt;* Tipo de Anexo esperado:</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>convertMoneyToFloat</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function convertMoneyToFloat(value) {&#xd;
	value = value.trim().replace(&quot;R$ &quot;, &quot;&quot;);&#xd;
	while(value.indexOf(&quot;.&quot;) != -1){&#xd;
		value = value.replace(&quot;.&quot;, &quot;&quot;);&#xd;
	}&#xd;
	value = value.replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	if(isNaN(value)){&#xd;
		value = 0.00;&#xd;
	}&#xd;
	return parseFloat(value);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>scripttask266</eventId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function scripttask266() {
	return true;
}</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list>
    <AdvancedProcessProperties>
      <advancedProcessPropertiesPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <propertyId>AutomaticTasks</propertyId>
        <version>199</version>
      </advancedProcessPropertiesPK>
      <propertieValue>211,209</propertieValue>
    </AdvancedProcessProperties>
  </list>
  <list>
    <SwimLane>
      <color>C0C0C0</color>
      <height>249</height>
      <width>1364</width>
      <positionX>60</positionX>
      <positionY>1272</positionY>
      <stateName>CSO/Contratos</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>166</height>
      <width>1131</width>
      <positionX>60</positionX>
      <positionY>111</positionY>
      <stateName>Regularizadoras</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>251</height>
      <width>1364</width>
      <positionX>60</positionX>
      <positionY>1530</positionY>
      <stateName>Solicitante</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>3</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FF8040</color>
      <height>1781</height>
      <width>31</width>
      <positionX>20</positionX>
      <positionY>0</positionY>
      <stateName>Solicitação de Compras</stateName>
      <type>1</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>4</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>273</height>
      <width>1364</width>
      <positionX>60</positionX>
      <positionY>447</positionY>
      <stateName>CSO/Compras</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>5</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>384</height>
      <width>1364</width>
      <positionX>60</positionX>
      <positionY>727</positionY>
      <stateName>Aprovacao</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>6</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>150</height>
      <width>1364</width>
      <positionX>60</positionX>
      <positionY>1115</positionY>
      <stateName>CSO - Juridico</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>7</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>157</height>
      <width>1364</width>
      <positionX>60</positionX>
      <positionY>283</positionY>
      <stateName>Aprovação TI</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>8</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>106</height>
      <width>1131</width>
      <positionX>60</positionX>
      <positionY>2</positionY>
      <stateName>Solicitante</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <sequence>9</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list>
    <ProcessComponGraf>
      <componType>1</componType>
      <positionX>1199</positionX>
      <positionY>6</positionY>
      <processComponGrafPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <componGrafSequence>271</componGrafSequence>
      </processComponGrafPK>
      <stateName>Revisado em 15.03.24 10.04.24 17.04.24 01.07.24</stateName>
    </ProcessComponGraf>
    <ProcessComponGraf>
      <componType>1</componType>
      <positionX>1308</positionX>
      <positionY>12</positionY>
      <processComponGrafPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <componGrafSequence>276</componGrafSequence>
      </processComponGrafPK>
      <stateName>Revisado em 21.05.24 - novo campo e novos datasets</stateName>
    </ProcessComponGraf>
    <ProcessComponGraf>
      <componType>1</componType>
      <positionX>1201</positionX>
      <positionY>119</positionY>
      <processComponGrafPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>1</version>
        <componGrafSequence>282</componGrafSequence>
      </processComponGrafPK>
      <stateName>Revisado em set.24 alçadas 24-25</stateName>
    </ProcessComponGraf>
  </list>
  <list/>
  <list>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>46</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>708</positionX>
      <positionY>1197</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>47</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>468</positionX>
      <positionY>1440</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>89</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>336</positionX>
      <positionY>1057</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>134</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>337</positionX>
      <positionY>453</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>134</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>756</positionX>
      <positionY>453</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>142</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1309</positionX>
      <positionY>1057</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>148</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>505</positionX>
      <positionY>457</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>148</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>756</positionX>
      <positionY>457</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>159</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1309</positionX>
      <positionY>1131</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>159</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>337</positionX>
      <positionY>1131</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>160</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>337</positionX>
      <positionY>1139</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>160</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>1409</positionX>
      <positionY>1139</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>160</linkSequence>
        <bendSequence>3</bendSequence>
      </processLinkBendPK>
      <positionX>1409</positionX>
      <positionY>530</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>171</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1013</positionX>
      <positionY>1599</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>172</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>167</positionX>
      <positionY>662</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>172</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>167</positionX>
      <positionY>1599</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>186</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>756</positionX>
      <positionY>358</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>187</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>657</positionX>
      <positionY>426</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>187</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>337</positionX>
      <positionY>426</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>205</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>662</positionX>
      <positionY>256</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>205</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>338</positionX>
      <positionY>256</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>206</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>756</positionX>
      <positionY>193</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>227</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>727</positionX>
      <positionY>1617</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>227</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>656</positionX>
      <positionY>1617</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>227</linkSequence>
        <bendSequence>3</bendSequence>
      </processLinkBendPK>
      <positionX>656</positionX>
      <positionY>1755</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>227</linkSequence>
        <bendSequence>4</bendSequence>
      </processLinkBendPK>
      <positionX>1093</positionX>
      <positionY>1755</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>238</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>449</positionX>
      <positionY>662</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>248</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>869</positionX>
      <positionY>54</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>257</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>683</positionX>
      <positionY>583</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>257</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>338</positionX>
      <positionY>583</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>267</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>245</positionX>
      <positionY>994</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>268</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>246</positionX>
      <positionY>789</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>270</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>246</positionX>
      <positionY>788</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>273</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>450</positionX>
      <positionY>1044</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>273</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>246</positionX>
      <positionY>1044</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <linkSequence>281</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1308</positionX>
      <positionY>944</positionY>
    </ProcessLinkBend>
  </list>
  <list/>
  <list>
    <ExtendedPropertyField>
      <extendedPropertyFieldPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <stateSequence>0</stateSequence>
        <propertyName>AutomaticTasks</propertyName>
      </extendedPropertyFieldPK>
      <propertyType>0</propertyType>
      <propertyDescription>AutomaticTasks</propertyDescription>
      <propertyValue>211,209</propertyValue>
      <isDefaultProperty>false</isDefaultProperty>
    </ExtendedPropertyField>
    <ExtendedPropertyField>
      <extendedPropertyFieldPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <stateSequence>137</stateSequence>
        <propertyName>description</propertyName>
      </extendedPropertyFieldPK>
      <propertyType>0</propertyType>
      <propertyDescription>DescriÃƒÂ§ÃƒÂ£o</propertyDescription>
      <propertyValue>Encaminhar para o Comprador</propertyValue>
      <isDefaultProperty>false</isDefaultProperty>
    </ExtendedPropertyField>
    <ExtendedPropertyField>
      <extendedPropertyFieldPK>
        <companyId>1</companyId>
        <processId>SolicitacaoCompras</processId>
        <version>199</version>
        <stateSequence>141</stateSequence>
        <propertyName>description</propertyName>
      </extendedPropertyFieldPK>
      <propertyType>0</propertyType>
      <propertyDescription>DescriÃƒÂ§ÃƒÂ£o</propertyDescription>
      <propertyValue>Termino AprovaÃ§Ã£o</propertyValue>
      <isDefaultProperty>false</isDefaultProperty>
    </ExtendedPropertyField>
  </list>
  <list/>
  <list>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SolicitacaoCompras</processId>
      <version>1</version>
      <sequence>212</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SolicitacaoCompras</processId>
      <version>1</version>
      <sequence>219</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SolicitacaoCompras</processId>
      <version>1</version>
      <sequence>228</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
  </list>
  <list>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>txtTotValCotacao</processField>
      <subProcessField>valorSolicitado</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>centroCusto</processField>
      <subProcessField>centroCusto</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>seAprovado</processField>
      <subProcessField>seAprovado</subProcessField>
      <mapFlow>0</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>poolAbertura</processField>
      <subProcessField>poolAbertura</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>orig_version</processField>
      <subProcessField>orig_version</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>codSolicitacao</processField>
      <subProcessField>numChamadoOrigem</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>filial</processField>
      <subProcessField>filial</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>orig_docSolicitacao</processField>
      <subProcessField>orig_docSolicitacao</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>orig_documentid</processField>
      <subProcessField>orig_documentid</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
    <SubProcessFieldRelationship>
      <tenantId>1</tenantId>
      <processCode>SolicitacaoCompras</processCode>
      <stateSequence>279</stateSequence>
      <version>1</version>
      <subProcessCode>AprovaçãoUnificada</subProcessCode>
      <processField>operacao</processField>
      <subProcessField>operacao</subProcessField>
      <mapFlow>2</mapFlow>
    </SubProcessFieldRelationship>
  </list>
  <list/>
  <list/>
  <list/>
</list>